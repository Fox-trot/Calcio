
&НаСервере
Процедура ДанныеПолучить()
	Если НЕ ЗначениеЗаполнено(Лига()) Тогда Возврат; КонецЕсли;
	
	Отчет.Данные.Очистить();
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 11
	                      |	Туры.Владелец КАК Ссылка,
	                      |	ГОД(Туры.Владелец.ДатаОкончания) КАК Год
	                      |ПОМЕСТИТЬ Чемпионаты
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |ГДЕ
	                      |	ТИПЗНАЧЕНИЯ(ТурнирнаяТаблица.Регистратор) = ТИП(Документ.Матч)
	                      |	И Туры.Владелец.Владелец = &Лига
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	Туры.Владелец,
	                      |	ГОД(Туры.Владелец.ДатаОкончания)
	                      |
	                      |ИМЕЮЩИЕ
	                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТурнирнаяТаблица.Регистратор) >= (КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТурнирнаяТаблица.Команда) - 1) * КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТурнирнаяТаблица.Команда) И
	                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТурнирнаяТаблица.Регистратор) >= КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТурнирнаяТаблица.Команда)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Год УБЫВ
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Чемпионаты.Ссылка КАК Чемпионат,
	                      |	Чемпионаты.Год КАК Год,
	                      |	ТурнирнаяТаблица.Команда КАК Команда,
	                      |	СУММА(ТурнирнаяТаблица.КоличествоОчков) КАК КоличествоОчков,
	                      |	СУММА(ТурнирнаяТаблица.КоличествоГолов - Противник.КоличествоГолов) КАК Разница,
	                      |	СУММА(ТурнирнаяТаблица.КоличествоГолов) КАК КоличествоЗабито,
	                      |	СУММА(Противник.КоличествоГолов) КАК КоличествоПропущено
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Чемпионаты КАК Чемпионаты
	                      |			ПО Туры.Владелец = Чемпионаты.Ссылка
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК Противник
	                      |		ПО ТурнирнаяТаблица.Регистратор = Противник.Регистратор
	                      |			И ТурнирнаяТаблица.НомерСтроки <> Противник.НомерСтроки
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ТурнирнаяТаблица.Команда,
	                      |	Чемпионаты.Год,
	                      |	Чемпионаты.Ссылка
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Год,
	                      |	КоличествоОчков УБЫВ,
	                      |	Разница УБЫВ,
	                      |	КоличествоЗабито УБЫВ");
	Запрос.УстановитьПараметр("Лига",			Лига());
	Запрос.УстановитьПараметр("Дата",			ТекущаяДатаСеанса());
	Если Отчет.Лига.ОлимпийскаяСистема Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 11
		               |	Чемпионаты.Ссылка КАК Ссылка,
		               |	ГОД(Чемпионаты.Ссылка.ДатаОкончания) КАК Год,
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТурнирнаяТаблица.Тур) КАК Тур
		               |ПОМЕСТИТЬ Чемпионаты
		               |ИЗ
		               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты.Команды КАК Чемпионаты
		               |			ПО Туры.Владелец = Чемпионаты.Ссылка
		               |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
		               |ГДЕ
		               |	Чемпионаты.Ссылка.Владелец = &Лига
		               |	И Чемпионаты.Ссылка.ДатаОкончания <= &Дата
		               |	И ТурнирнаяТаблица.Регистратор ССЫЛКА Документ.Матч
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	Чемпионаты.Ссылка,
		               |	ГОД(Чемпионаты.Ссылка.ДатаОкончания)
		               |
		               |ИМЕЮЩИЕ
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТурнирнаяТаблица.Регистратор) >= КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТурнирнаяТаблица.Команда) - 1
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Год УБЫВ
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	Чемпионаты.Ссылка КАК Чемпионат,
		               |	Чемпионаты.Год КАК Год,
		               |	ТурнирнаяТаблица.Команда КАК Команда,
		               |	СУММА(ТурнирнаяТаблица.КоличествоОчков) КАК КоличествоОчков,
		               |	СУММА(ТурнирнаяТаблица.КоличествоГолов - Противник.КоличествоГолов) КАК Разница,
		               |	СУММА(ТурнирнаяТаблица.КоличествоГолов) КАК КоличествоЗабито,
		               |	СУММА(Противник.КоличествоГолов) КАК КоличествоПропущено
		               |ИЗ
		               |	Чемпионаты КАК Чемпионаты
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК Противник
		               |				ПО ТурнирнаяТаблица.Регистратор = Противник.Регистратор
		               |					И ТурнирнаяТаблица.НомерСтроки <> Противник.НомерСтроки
		               |			ПО Туры.Ссылка = ТурнирнаяТаблица.Тур
		               |		ПО Чемпионаты.Ссылка = Туры.Владелец
		               |ГДЕ
		               |	ТурнирнаяТаблица.Регистратор ССЫЛКА Документ.Матч
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ТурнирнаяТаблица.Команда,
		               |	Чемпионаты.Год,
		               |	Чемпионаты.Ссылка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Год,
		               |	КоличествоОчков УБЫВ,
		               |	Разница УБЫВ,
		               |	КоличествоЗабито УБЫВ";
	КонецЕсли;
	Выборка		= Запрос.Выполнить().Выбрать();
	Чемпионаты	= Новый Массив;
	
	Если ПростойОтчет Тогда
		Пока Выборка.Следующий() Цикл
			Если Чемпионаты.Найти(Выборка.Чемпионат) = Неопределено Тогда
				Чемпионаты.Добавить(Выборка.Чемпионат);
				
				ЗаполнитьЗначенияСвойств(Отчет.Данные.Добавить(), Выборка);
			КонецЕсли;
		КонецЦикла;

	ИначеЕсли ЗначениеЗаполнено(Отчет.Команда) Тогда
		Пока Выборка.Следующий() Цикл
			Если Выборка.Команда = Отчет.Команда Тогда
				ЗаполнитьЗначенияСвойств(Отчет.Данные.Добавить(), Выборка);
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		Кондуит		= Новый Массив;
		Пока Выборка.Следующий() Цикл
			Если Чемпионаты.Найти(Выборка.Чемпионат) = Неопределено Тогда
				Чемпионаты.Добавить(Выборка.Чемпионат);
				Если Кондуит.Найти(Выборка.Команда) = Неопределено Тогда
					Кондуит.Добавить(Выборка.Команда);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Запрос.Текст	= "ВЫБРАТЬ
		            	  |	ГОД(Туры.Владелец.ДатаОкончания) КАК Год,
		            	  |	ТурнирнаяТаблица.Команда КАК Команда,
		            	  |	СУММА(ТурнирнаяТаблица.КоличествоГолов) КАК КоличествоЗабито,
		            	  |	СУММА(ТурнирнаяТаблица.КоличествоОчков) КАК КоличествоОчков
		            	  |ИЗ
		            	  |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		            	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
		            	  |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
		            	  |ГДЕ
		            	  |	ТурнирнаяТаблица.Команда В(&Команды)
		            	  |	И Туры.Владелец В(&Чемпионаты)
		            	  |
		            	  |СГРУППИРОВАТЬ ПО
		            	  |	ТурнирнаяТаблица.Команда,
		            	  |	ГОД(Туры.Владелец.ДатаОкончания)
		            	  |
		            	  |УПОРЯДОЧИТЬ ПО
		            	  |	Год,
		            	  |	Команда
		            	  |АВТОУПОРЯДОЧИВАНИЕ";
		Запрос.УстановитьПараметр("Чемпионаты",		Чемпионаты);
		Запрос.УстановитьПараметр("Команды",		Кондуит);
		Выборка		= Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Отчет.Данные.Добавить(), Выборка);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция Лига()
	Если НЕ ЗначениеЗаполнено(Отчет.Лига) Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
		                      |	Чемпионаты.Владелец КАК Лига,
		                      |	СУММА(ВЫБОР
		                      |			КОГДА ЧемпионатыКоманды.Команда = &Команда
		                      |				ТОГДА 1
		                      |			ИНАЧЕ 0
		                      |		КОНЕЦ) КАК Порядок
		                      |ИЗ
		                      |	Справочник.Чемпионаты КАК Чемпионаты
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		                      |		ПО Чемпионаты.Ссылка = ЧемпионатыКоманды.Ссылка
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	Чемпионаты.Владелец
		                      |
		                      |УПОРЯДОЧИТЬ ПО
		                      |	Чемпионаты.Владелец.ОлимпийскаяСистема,
		                      |	Порядок УБЫВ");
		Запрос.УстановитьПараметр("Команда",			СерверныйФункции.МояКомандаПолучить());
		Выборка	= Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Отчет.Лига	= Выборка.Лига;
		КонецЕсли;
	КонецЕсли;
	Возврат Отчет.Лига;
КонецФункции

&НаСервере
Процедура СформироватьНаСервере()
	Если ЗначениеЗаполнено(Отчет.Лига) Тогда
		Результат = РеквизитФормыВЗначение("Отчет").ОтчетСформировать();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьДоступностьУстановить()
	Элементы.ТипГрафика.Доступность					= (НЕ ПростойОтчет);
	Элементы.ОтображатьТаблицуДанных.Доступность	= (НЕ ПростойОтчет);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЦветКоманды(Команда)
	Возврат СерверныйФункции.ЦветКоманды(Команда);
КонецФункции

&НаСервере
Функция УстановитьСерию(Команда)
	Серия	= График.УстановитьСерию(Команда);
	Цвет	= ЦветКоманды(Команда);
	Если ЗначениеЗаполнено(Цвет) Тогда
		Серия.Цвет			= Цвет;
	КонецЕсли;
	Возврат Серия;
КонецФункции

&НаСервере
Процедура ГрафикОбновить(ТолькоГрафик=Ложь)
	Если НЕ ТолькоГрафик Тогда
		ДанныеПолучить();
	КонецЕсли;
	Если ПростойОтчет Тогда
		СформироватьНаСервере();
	ИначеЕсли ЗначениеЗаполнено(Отчет.Команда) Тогда
		График.Очистить();
		График.ОбластьЛегенды.Расположение	= ?(ТипГрафика = 1, РасположениеЛегендыДиаграммы.Авто, РасположениеЛегендыДиаграммы.Нет);
		Для Каждого Детали Из Отчет.Данные Цикл
			Если ТипГрафика = 1 Тогда
				График.УстановитьЗначение(График.УстановитьТочку(ФорматЧГ(Детали.Год)), График.УстановитьСерию("Забито"), Детали.КоличествоЗабито);
				График.УстановитьЗначение(График.УстановитьТочку(ФорматЧГ(Детали.Год)), График.УстановитьСерию("Пропущено"), Детали.КоличествоПропущено);
			Иначе
				График.УстановитьЗначение(График.УстановитьТочку(ФорматЧГ(Детали.Год)), УстановитьСерию(Детали.Команда), Детали.КоличествоОчков);
			КонецЕсли;
		КонецЦикла;
	Иначе
		График.Очистить();
		График.ОбластьЛегенды.Расположение	= РасположениеЛегендыДиаграммы.Авто;
		Год			= 0;
		мКоманды	= Новый Соответствие;
		Для Каждого Детали Из Отчет.Данные Цикл
			Серия		= мКоманды.Получить(Детали.Команда);
			Если Серия = Неопределено Тогда
				Серия		= УстановитьСерию(Детали.Команда);
				Серия.Расшифровка	= Детали.Команда;
				
				мКоманды.Вставить(Детали.Команда, Серия);
			КонецЕсли;
			Если Год <> Детали.Год Тогда
				Год			= Детали.Год;
				Точка		= График.УстановитьТочку(ФорматЧГ(Детали.Год));
			КонецЕсли;
			График.УстановитьЗначение(Точка, Серия, ?(ТипГрафика = 1, Детали.КоличествоЗабито, Детали.КоличествоОчков));
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КартинкиЗагрузить() Экспорт
	НаКлиенте.КартинкиЗагрузить(Элементы.Команда.СписокВыбора, Кеш);
КонецПроцедуры

&НаСервере
Процедура ЛигаПриИзмененииНаСервере()
	КомандыЛиги.ЗагрузитьЗначения(?(ЗначениеЗаполнено(Отчет.Лига), СерверныйФункции.КомандыЛиги(Отчет.Лига), Новый Массив));
	Элементы.Команда.СписокВыбора.ЗагрузитьЗначения(?(ЗначениеЗаполнено(Отчет.Лига), СерверныйФункции.КомандыЛиги(Отчет.Лига, НЕ Отчет.Лига.ОлимпийскаяСистема), Новый Массив));
КонецПроцедуры

&НаКлиенте
Процедура ЛигаПриИзменении(Элемент=Неопределено)
	ЛигаПриИзмененииНаСервере();
	ПодключитьОбработчикОжидания("КартинкиЗагрузить", 0.1, Истина);
	ГрафикОбновить();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЛигаПриИзменении();
	ОтображатьТаблицуДанныхПриИзменении();
	ВидимостьДоступностьУстановить();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Лига") Тогда
		Отчет.Лига		= Параметры.Лига;
		ПростойОтчет	= Истина;
		ОбщегоНазначения.ЗаголовокСкрыть(ЭтаФорма, Элементы.ГруппаПараметры);
		Элементы.График.Видимость		= Ложь;
		Элементы.Результат.Видимость	= Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьТаблицуДанныхПриИзменении(Элемент=Неопределено)
	График.ОбластьПостроения.ОтображатьТаблицуДанных	= ОтображатьТаблицуДанных;
КонецПроцедуры

&НаКлиенте
Процедура ТипГрафикаПриИзменении(Элемент)
	ГрафикОбновить(Истина);
КонецПроцедуры

&НаКлиенте
Процедура КомандаПриИзменении(Элемент)
	ГрафикОбновить();
КонецПроцедуры
