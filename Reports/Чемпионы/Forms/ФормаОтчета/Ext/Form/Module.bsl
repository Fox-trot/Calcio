
&НаСервере
Процедура ГрафикОбновитьНаСервере()
	Если НЕ ЗначениеЗаполнено(Лига()) Тогда Возврат; КонецЕсли;
	
	Отчет.Данные.Очистить();
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 13
	                      |	Туры.Владелец КАК Ссылка,
	                      |	ГОД(Чемпионаты.ДатаОкончания) КАК Год
	                      |ПОМЕСТИТЬ Чемпионаты
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
	                      |				ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
	                      |			ПО Туры.Владелец = ЧемпионатыКоманды.Ссылка
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |ГДЕ
	                      |	Чемпионаты.Владелец = &Лига
	                      |	И ТИПЗНАЧЕНИЯ(ТурнирнаяТаблица.Регистратор) = ТИП(Документ.Матч)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	Туры.Владелец,
	                      |	ГОД(Чемпионаты.ДатаОкончания)
	                      |
	                      |ИМЕЮЩИЕ
	                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТурнирнаяТаблица.Регистратор) = (КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЧемпионатыКоманды.Команда) - 1) * КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЧемпионатыКоманды.Команда)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Год УБЫВ
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Туры.Владелец КАК Чемпионат,
	                      |	Чемпионаты.Год КАК Год,
	                      |	ТурнирнаяТаблица.Команда КАК Команда,
	                      |	СУММА(ТурнирнаяТаблица.КоличествоОчков) КАК КоличествоОчков,
	                      |	СУММА(ТурнирнаяТаблица.КоличествоГолов) КАК КоличествоГолов
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Чемпионаты КАК Чемпионаты
	                      |			ПО Туры.Владелец = Чемпионаты.Ссылка
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |ГДЕ
	                      |	ТИПЗНАЧЕНИЯ(ТурнирнаяТаблица.Регистратор) = ТИП(Документ.Матч)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ТурнирнаяТаблица.Команда,
	                      |	Чемпионаты.Год,
	                      |	Туры.Владелец
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Год,
	                      |	КоличествоОчков УБЫВ,
	                      |	КоличествоГолов УБЫВ");
	Запрос.УстановитьПараметр("Лига",			Лига());
	Выборка		= Запрос.Выполнить().Выбрать();
	Чемпионаты	= Новый Массив;
	
	Если ПростойОтчет Тогда
		Пока Выборка.Следующий() Цикл
			Если Чемпионаты.Найти(Выборка.Чемпионат) = Неопределено Тогда
				Чемпионаты.Добавить(Выборка.Чемпионат);
				
				ЗаполнитьЗначенияСвойств(Отчет.Данные.Добавить(), Выборка);
			КонецЕсли;
		КонецЦикла;

	Иначе
		Кондуит		= Новый Массив;
		Пока Выборка.Следующий() Цикл
			Если Чемпионаты.Найти(Выборка.Чемпионат) = Неопределено Тогда
				Чемпионаты.Добавить(Выборка.Чемпионат);
				Если Кондуит.Найти(Выборка.Команда) = Неопределено Тогда
					Кондуит.Добавить(Выборка.Команда);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Запрос.Текст	= "ВЫБРАТЬ
		            	  |	ГОД(Чемпионаты.ДатаОкончания) КАК Год,
		            	  |	ТурнирнаяТаблица.Команда КАК Команда,
		            	  |	СУММА(ТурнирнаяТаблица.КоличествоОчков) КАК КоличествоОчков
		            	  |ИЗ
		            	  |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		            	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
		            	  |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
		            	  |			ПО Туры.Владелец = Чемпионаты.Ссылка
		            	  |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
		            	  |ГДЕ
		            	  |	ТурнирнаяТаблица.Команда В(&Команды)
		            	  |	И Туры.Владелец В(&Чемпионаты)
		            	  |
		            	  |СГРУППИРОВАТЬ ПО
		            	  |	ТурнирнаяТаблица.Команда,
		            	  |	ГОД(Чемпионаты.ДатаОкончания)
		            	  |
		            	  |УПОРЯДОЧИТЬ ПО
		            	  |	Год,
		            	  |	Команда
		            	  |АВТОУПОРЯДОЧИВАНИЕ";
		Запрос.УстановитьПараметр("Чемпионаты",		Чемпионаты);
		Запрос.УстановитьПараметр("Команды",		Кондуит);
		Выборка		= Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Отчет.Данные.Добавить(), Выборка);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция Лига()
	Если НЕ ЗначениеЗаполнено(Отчет.Лига) Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
		                      |	Чемпионаты.Владелец КАК Лига
		                      |ИЗ
		                      |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
		                      |		ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
		                      |ГДЕ
		                      |	ЧемпионатыКоманды.Команда = &Команда
		                      |
		                      |УПОРЯДОЧИТЬ ПО
		                      |	Чемпионаты.ДатаОкончания УБЫВ");
		Запрос.УстановитьПараметр("Команда",			СерверныйФункции.МояКомандаПолучить());
		Выборка	= Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Отчет.Лига	= Выборка.Лига;
		КонецЕсли;
	КонецЕсли;
	Возврат Отчет.Лига;
КонецФункции

&НаСервере
Процедура СформироватьНаСервере()
	Если ЗначениеЗаполнено(Отчет.Лига) Тогда
		Результат = РеквизитФормыВЗначение("Отчет").ОтчетСформировать();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьДоступностьУстановить()
	Элементы.ОтображатьТаблицуДанных.Доступность	= (НЕ ПростойОтчет);
	Элементы.График.Видимость						= (НЕ ПростойОтчет);
	Элементы.Результат.Видимость					= ПростойОтчет;
КонецПроцедуры

&НаКлиенте
Процедура ГрафикОбновить(ТолькоГрафик=Ложь)
	Если НЕ ТолькоГрафик Тогда
		ГрафикОбновитьНаСервере();
	КонецЕсли;
	Если ПростойОтчет Тогда
		СформироватьНаСервере();
	Иначе
		График.ОбластьПостроения.ОтображатьТаблицуДанных	= ОтображатьТаблицуДанных;
		График.Очистить();
		Для Каждого Детали Из Отчет.Данные Цикл
			Серия		= График.УстановитьСерию(Детали.Команда);
			Точка		= График.УстановитьТочку(Детали.Год);
			Точка.Текст	= ФорматЧГ(Детали.Год);
			График.УстановитьЗначение(Точка, Серия, Детали.КоличествоОчков);
		КонецЦикла;
	КонецЕсли;
	ВидимостьДоступностьУстановить();
КонецПроцедуры

&НаКлиенте
Процедура ЛигаПриИзменении(Элемент)
	ГрафикОбновить();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ГрафикОбновить();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Лига") Тогда
		ЭтаФорма.АвтоматическоеСохранениеДанныхВНастройках = АвтоматическоеСохранениеДанныхФормыВНастройках.НеИспользовать;
		Отчет.Лига		= Параметры.Лига;
		ПростойОтчет	= Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьТаблицуДанныхПриИзменении(Элемент)
	ГрафикОбновить(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПростойОтчетПриИзменении(Элемент)
	ГрафикОбновить();
КонецПроцедуры
