
&НаКлиенте
Процедура Сформировать(Команда=Неопределено)
	Если ПроверитьЗаполнение() Тогда
		СформироватьНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
	Если ЗначениеЗаполнено(Отчет.Город) Тогда
		Результат = РеквизитФормыВЗначение("Отчет").ОтчетСформировать(Отчет);
		ГрафикОбновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ГрафикОбновить()
	СерверныйФункции.ГрафикОбновить(График, Отчет.Данные);
КонецПроцедуры

&НаСервере
Процедура ГородаЗаполнить()
	Запрос	= Новый Запрос("ВЫБРАТЬ
	      	               |	Города.Ссылка КАК Ссылка
	      	               |ИЗ
	      	               |	Справочник.Города КАК Города
	      	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Команды КАК Команды
	      	               |		ПО Города.Ссылка = Команды.Город
	      	               |
	      	               |СГРУППИРОВАТЬ ПО
	      	               |	Города.Ссылка
	      	               |
	      	               |ИМЕЮЩИЕ
	      	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Команды.Ссылка) >= 2");
	Города.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0));
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ГородЗаполнить();
	ТипГрафикаЗаполнить();
	ТипГрафикаПриИзменении();
	Сформировать();
КонецПроцедуры

&НаСервере
Процедура ГородЗаполнить(Второй=Ложь)
	Если НЕ ЗначениеЗаполнено(Отчет.Город) Тогда
		Для Каждого Город Из Города Цикл
			Если Второй Или СтрСравнить(Город.Значение, "Лондон") = 0 Тогда
				Отчет.Город	= Город.Значение;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		ГородЗаполнить(Истина);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Город") Тогда
		Отчет.Город	= Параметры.Город;
		ОбщегоНазначения.ЗаголовокСкрыть(ЭтаФорма, Элементы.ГруппаПараметры);
	Иначе
		ГородаЗаполнить();
	КонецЕсли;
	
	СерииЗаполнить();
КонецПроцедуры

&НаСервере
Процедура СерииЗаполнить()
	СерверныйФункции.СерииЗаполнить(График);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораМатча(Элемент, ПараметрКоманды=Неопределено) Экспорт
	НаКлиенте.Показать(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ГрафикВыбор(Элемент, ЗначениеДиаграммы, СтандартнаяОбработка)
	СтандартнаяОбработка	= Ложь;
	Если ТипЗнч(ЗначениеДиаграммы) = Тип("ЗначениеДиаграммы") Тогда
		Матчи	= МатчиПолучить(Новый Структура("Команда,Результат", ЗначениеДиаграммы.Точка.Значение, ЗначениеДиаграммы.Серия.Значение));
		Если Матчи.Количество() = 1 Тогда
			ПослеВыбораМатча(Матчи.Получить(0));
		ИначеЕсли Матчи.Количество() > 0 Тогда
			ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ПослеВыбораМатча", ЭтотОбъект), Матчи);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция МатчиПолучить(Отбор)
	Запрос	= Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	      	               |	ТурнирнаяТаблица.Регистратор КАК Значение,
	      	               |	Матч.Счет КАК Представление,
	      	               |	ТурнирнаяТаблица.Период КАК Период
	      	               |ИЗ
	      	               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	      	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч КАК Матч
	      	               |		ПО ТурнирнаяТаблица.Регистратор = Матч.Ссылка
	      	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК Матчи
	      	               |		ПО ТурнирнаяТаблица.Регистратор = Матчи.Регистратор
	      	               |			И ТурнирнаяТаблица.НомерСтроки <> Матчи.НомерСтроки
	      	               |ГДЕ
	      	               |	ТурнирнаяТаблица.Команда = &Команда
	      	               |	И ТурнирнаяТаблица.КоличествоОчков = &КоличествоОчков
	      	               |	И ТурнирнаяТаблица.Тур.Владелец = &Чемпионат
	      	               |	И Матчи.Команда В(&Команды)
	      	               |
	      	               |УПОРЯДОЧИТЬ ПО
	      	               |	Период УБЫВ");
	Запрос.УстановитьПараметр("Команды",			Отчет.Данные.Выгрузить().ВыгрузитьКолонку("Команда"));
	Запрос.УстановитьПараметр("Чемпионат",			Отчет.Чемпионат);
	Запрос.УстановитьПараметр("Команда",			Отбор.Команда);
	Запрос.УстановитьПараметр("КоличествоОчков",	?(СтрСравнить(Отбор.Результат, "Проигрыш")=0, 0, 1));
	Если СтрСравнить(Отбор.Результат, "Выигрыш") = 0 Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ТурнирнаяТаблица.Регистратор КАК Значение,
		               |	Матч.Счет КАК Представление,
		               |	ТурнирнаяТаблица.Период КАК Период
		               |ИЗ
		               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч КАК Матч
		               |		ПО ТурнирнаяТаблица.Регистратор = Матч.Ссылка
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК Матчи
		               |		ПО ТурнирнаяТаблица.Регистратор = Матчи.Регистратор
		               |			И ТурнирнаяТаблица.НомерСтроки <> Матчи.НомерСтроки
		               |ГДЕ
		               |	ТурнирнаяТаблица.Команда = &Команда
		               |	И ТурнирнаяТаблица.КоличествоОчков >= 2
		               |	И ТурнирнаяТаблица.Тур.Владелец = &Чемпионат
		               |	И Матчи.Команда В(&Команды)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Период УБЫВ";
	КонецЕсли;
	Возврат СерверныйФункции.Выборка2СписокЗначений(Запрос.Выполнить().Выбрать());
КонецФункции

&НаКлиенте
Процедура ТипГрафикаЗаполнить()
	Элементы.ТипГрафика.СписокВыбора.Добавить(0, ТипДиаграммы.ГистограммаСНакоплением);
	Элементы.ТипГрафика.СписокВыбора.Добавить(1, ТипДиаграммы.РадарныйГрафикСОбластямиИНакоплением);
КонецПроцедуры

&НаКлиенте
Процедура ТипГрафикаПриИзменении(Элемент=Неопределено)
	Если ТипГрафика = 1 Тогда
		График.ТипДиаграммы	= ТипДиаграммы.РадарныйГрафикСОбластямиИНакоплением;
	Иначе
		График.ТипДиаграммы	= ТипДиаграммы.ГистограммаСНакоплением;
	КонецЕсли;
КонецПроцедуры
