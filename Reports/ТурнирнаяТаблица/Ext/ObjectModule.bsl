
Функция ОтчетСформировать(Объект, ПоказыватьРазницуМячей, ОставшиесяМатчи=Ложь) Экспорт
	ТабДокумент = Новый ТабличныйДокумент;
	
	Лига	= Чемпионат.Владелец;
	
	ТабДокумент.Вывести(ЗаголовокПолучить(Лига));
	
	Макет  = ПолучитьОбщийМакет("ТурнирнаяТаблица");
	//ТабДокумент.ФиксацияСлева	= 10;
	
	Если Лига.ОлимпийскаяСистема Тогда
		Туры = ТурнирнаяТаблица(Истина);
		//КоличествоМатчей	= 1;
		//Пока Туры.Следующий() Цикл
		//	КоличествоМатчей	= Макс(КоличествоМатчей, Туры.КоличествоМатчей);
		//КонецЦикла;
		
		ТабДокумент.Вывести(Макет.ПолучитьОбласть("Пробел"));
		Делитель	= 4;
		Пусто		= Макет.ПолучитьОбласть("Детали_|Пусто");
		Пока Туры.Следующий() Цикл
			ОбластьМакета = Макет.ПолучитьОбласть("Детали_|Тур");
			ОбластьМакета.Параметры.Заполнить(Туры.Тур);
			ТабДокумент.Вывести(ОбластьМакета);
			
			Выборка		= Туры.Выбрать();
			Итератор	= 1;
			Шагомер		= 0;
			Пока Выборка.Следующий() Цикл
				Шагомер		= Шагомер + 1;
				
				ТабДокумент.Присоединить(Пусто);
				ОбластьМакета = Макет.ПолучитьОбласть("Детали_|Матч");
				ОбластьМакета.Параметры.Заполнить(Выборка);
				Если Выборка.Пенальти + Выборка.Пенальти2 > 0 Тогда
					ОбластьМакета.Параметры.КоличествоГолов = СтрШаблон("%1/%2", Формат(Выборка.КоличествоГолов, "ЧН=0; ЧГ=0"), Формат(Выборка.Пенальти, "ЧН=0; ЧГ=0"));
					ОбластьМакета.Параметры.КоличествоГолов2 = СтрШаблон("%1/%2", Формат(Выборка.КоличествоГолов2, "ЧН=0; ЧГ=0"), Формат(Выборка.Пенальти2, "ЧН=0; ЧГ=0"));
				КонецЕсли;
				ТабДокумент.Присоединить(ОбластьМакета);
				
				Если Выборка.Количество() = Шагомер Тогда
					//
				ИначеЕсли Итератор = Делитель Тогда
					Итератор	= 1;
					ТабДокумент.Вывести(Макет.ПолучитьОбласть("Пробел"));
					ТабДокумент.Вывести(Макет.ПолучитьОбласть("Детали_|Тур"));
				Иначе
					Итератор	= Итератор + 1;
				КонецЕсли;
			КонецЦикла;
			ТабДокумент.Вывести(Макет.ПолучитьОбласть("Пробел"));
		КонецЦикла;
		
		Если НЕ ЕстьКвалификация() Тогда Возврат ТабДокумент; КонецЕсли;
		ТабДокумент.Вывести(Макет.ПолучитьОбласть("Пробел"));
	КонецЕсли;
		
	Объект.Данные.Очистить();
	Выборка = ТурнирнаяТаблица();
	Итого		= Новый Структура("НомерСтроки", 0);
	Если ТурнирнаяТаблицаКакНаBBC() Тогда
		ТабДокумент.Вывести(Макет.ПолучитьОбласть("Шапка1"));
		//ТабДокумент.ФиксацияСверху	= 2 + Выборка.Количество();
		Пока Выборка.Следующий() Цикл
			Итого.НомерСтроки	= Итого.НомерСтроки + 1;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Детали1|Начало");
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ОбластьМакета.Параметры.Место	= Итого.НомерСтроки;
			ТабДокумент.Вывести(ОбластьМакета);
			
			Пятерка		= 1;
			Матчи = МатчиПоследние5(Выборка.Команда);
			Для Каждого Детали Из Матчи Цикл
				ОбластьМакета = Макет.ПолучитьОбласть("Детали1|" + Детали.Результат);
				ОбластьМакета.Параметры.Заполнить(Детали);
				ТабДокумент.Присоединить(ОбластьМакета);
				Пятерка		= Пятерка + 1;
			КонецЦикла;
			Для Шаг = Пятерка По 5 Цикл
				ОбластьМакета = Макет.ПолучитьОбласть("Детали1|NN");
				ТабДокумент.Присоединить(ОбластьМакета);
			КонецЦикла;
			
			ЗаполнитьЗначенияСвойств(Объект.Данные.Добавить(), Выборка);
		КонецЦикла;
	Иначе
		
		ТабДокумент.Вывести(Макет.ПолучитьОбласть("Шапка"));
		НаВылет			= Выборка.Количество() - Лига.КоличествоРотация;
		Пятерка			= 0;
		Пока Выборка.Следующий() Цикл
			Итого.НомерСтроки	= Итого.НомерСтроки + 1;
			
			Если Итого.НомерСтроки > Лига.Квалификация Тогда
				Если Итого.НомерСтроки > НаВылет Тогда
					ОбластьМакета = ПолучитьОбласть(Макет, 5);
					
				ИначеЕсли Пятерка = Выборка.КоличествоОчков Тогда
					ОбластьМакета = ПолучитьОбласть(Макет, 5);

				Иначе
					ОбластьМакета = ПолучитьОбласть(Макет);
				КонецЕсли;
				
			Иначе
				ОбластьМакета = ПолучитьОбласть(Макет, 5);
				Если Пятерка >= 0 Тогда
					Пятерка = Выборка.КоличествоОчков;
				КонецЕсли;
			КонецЕсли;
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ОбластьМакета.Параметры.Место	= Итого.НомерСтроки;
			Если НЕ ПоказыватьРазницуМячей Тогда
				ОбластьМакета.Параметры.Разница	= СтрШаблон("%1-%2", Выборка.КоличествоЗабито, Выборка.КоличествоПропущено);
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			ЗаполнитьЗначенияСвойств(Объект.Данные.Добавить(), Выборка);
		КонецЦикла;
		
		Выборка = КомментарииПолучить();
		ОбластьМакета = Неопределено;
		Пока Выборка.Следующий() Цикл
			Если ОбластьМакета = Неопределено Тогда
				ТабДокумент.Вывести(Макет.ПолучитьОбласть("Пробел"));
				ОбластьМакета = Макет.ПолучитьОбласть("Комментарий");
			КонецЕсли;
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		
		Если ОставшиесяМатчи Тогда
			Выборка = ОставшиесяМатчи();
			Если Выборка.Количество() > 0 Тогда
				Сегодня	= КонецДня(ТекущаяДатаСеанса());
				ТабДокумент.Вывести(Макет.ПолучитьОбласть("Пробел"));
				Пока Выборка.Следующий() Цикл
					ОбластьМакета = Макет.ПолучитьОбласть(?(Выборка.Дата > Сегодня, "Матчи", "Сегодня") + ?(Выборка.МояКоманда, "1", ""));
					ОбластьМакета.Параметры.Заполнить(Выборка);
					ТабДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат ТабДокумент;
КонецФункции

Функция ПолучитьОбласть(Макет, Параметр=0)
	Возврат Макет.ПолучитьОбласть(?(Параметр = 0, "Детали", "Пятерка"));
КонецФункции

Функция ЗаголовокПолучить(Лига)
	Возврат СерверныйФункции.ЗаголовокПолучить(Новый Структура("Лига,Чемпионат", Лига, Чемпионат));
КонецФункции

Функция КомментарииПолучить()
	Возврат СерверныйФункции.КомментарииПолучить(Чемпионат);
КонецФункции

Функция МатчиПоследние5(Команда)
	Возврат СерверныйФункции.МатчиПоследние5(Команда, Чемпионат);
КонецФункции

Функция ТурнирнаяТаблица(Олимпийская=Ложь)
	Возврат ?(Олимпийская, СерверныйФункции.ТурнирнаяТаблица2(Чемпионат), СерверныйФункции.ТурнирнаяТаблица(Чемпионат, ТипМатчей));
КонецФункции

Функция ТурнирнаяТаблицаКакНаBBC() Экспорт
	Возврат (НЕ Чемпионат.Владелец.ОлимпийскаяСистема И СерверныйФункции.ТурнирнаяТаблицаКакНаBBC());
КонецФункции

Функция ОставшиесяМатчи()
	Запрос	= Новый Запрос("ВЫБРАТЬ
	      	               |	Матч.Ссылка.Дата КАК Дата,
	      	               |	Матч.Ссылка.Счет КАК Счет,
	      	               |	Матч.Ссылка.Ссылка КАК Матч,
	      	               |	МАКСИМУМ(Матч.Команда = &Команда) КАК МояКоманда
	      	               |ИЗ
	      	               |	Документ.Матч.Команды КАК Матч
	      	               |ГДЕ
	      	               |	Матч.Ссылка.Дата МЕЖДУ &ДатаН И &ДатаК
	      	               |	И Матч.Ссылка.Проведен = ЛОЖЬ
	      	               |	И Матч.Ссылка.ПометкаУдаления = ЛОЖЬ
	      	               |	И Матч.Ссылка.Тур.Владелец = &Владелец
	      	               |
	      	               |СГРУППИРОВАТЬ ПО
	      	               |	Матч.Ссылка.Дата,
	      	               |	Матч.Ссылка.Счет,
	      	               |	Матч.Ссылка.Ссылка
	      	               |
	      	               |ИМЕЮЩИЕ
	      	               |	МАКСИМУМ(Матч.НомерСтроки) = 2
	      	               |
	      	               |УПОРЯДОЧИТЬ ПО
	      	               |	Дата,
	      	               |	Счет");
	Запрос.УстановитьПараметр("ДатаН",				НачалоДня(ТекущаяУниверсальнаяДата()));
	Запрос.УстановитьПараметр("ДатаК",				КонецДня(Запрос.Параметры.ДатаН + Сутки(2)));
	Запрос.УстановитьПараметр("Владелец",			Чемпионат);
	Запрос.УстановитьПараметр("Команда",			МояКоманда());
	Возврат Запрос.Выполнить().Выбрать();
КонецФункции

Функция МояКоманда()
	Возврат СерверныйФункции.МояКомандаПолучить();
КонецФункции

Функция ЕстьКвалификация()
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Туры.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Туры КАК Туры
	                      |ГДЕ
	                      |	Туры.Владелец = &Чемпионат
	                      |	И Туры.ОлимпийскаяСистема = ЛОЖЬ");
	Запрос.УстановитьПараметр("Чемпионат",		Чемпионат);
	Возврат (НЕ Запрос.Выполнить().Пустой());
КонецФункции
