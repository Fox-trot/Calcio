
Функция ОтчетСформировать(Объект, ПоказыватьРазницуМячей, ОставшиесяМатчи=Ложь, Сравнить=Ложь) Экспорт
	ТабДокумент = Новый ТабличныйДокумент;
	
	Лига	= Чемпионат.Владелец;
	
	ТабДокумент.Вывести(ЗаголовокПолучить(Лига));
	
	Макет  = ПолучитьОбщийМакет("ТурнирнаяТаблица");
	//ТабДокумент.ФиксацияСлева	= 10;
	
	Если Лига.ОлимпийскаяСистема Тогда
		Туры = ТурнирнаяТаблица(Истина);
		
		ТабДокумент.Вывести(Макет.ПолучитьОбласть("Пробел"));
		Делитель	= 4;
		Пусто		= Макет.ПолучитьОбласть("Детали_|Пусто");
		Пока Туры.Следующий() Цикл
			ОбластьМакета = Макет.ПолучитьОбласть("Детали_|Тур");
			ОбластьМакета.Параметры.Заполнить(Туры.Тур);
			ТабДокумент.Вывести(ОбластьМакета);
			
			Выборка		= Туры.Выбрать();
			Итератор	= 1;
			Шагомер		= 0;
			Пока Выборка.Следующий() Цикл
				Шагомер		= Шагомер + 1;
				
				ТабДокумент.Присоединить(Пусто);
				ОбластьМакета = Макет.ПолучитьОбласть("Детали_|Матч");
				ОбластьМакета.Параметры.Заполнить(Выборка);
				Если Выборка.Пенальти + Выборка.Пенальти2 > 0 Тогда
					ОбластьМакета.Параметры.КоличествоГолов = СтрШаблон("%1/%2", Формат(Выборка.КоличествоГолов, "ЧН=0; ЧГ=0"), Формат(Выборка.Пенальти, "ЧН=0; ЧГ=0"));
					ОбластьМакета.Параметры.КоличествоГолов2 = СтрШаблон("%1/%2", Формат(Выборка.КоличествоГолов2, "ЧН=0; ЧГ=0"), Формат(Выборка.Пенальти2, "ЧН=0; ЧГ=0"));
				КонецЕсли;
				ТабДокумент.Присоединить(ОбластьМакета);
				
				Если Выборка.Количество() = Шагомер Тогда
					//
				ИначеЕсли Итератор = Делитель Тогда
					Итератор	= 1;
					ТабДокумент.Вывести(Макет.ПолучитьОбласть("Пробел"));
					ТабДокумент.Вывести(Макет.ПолучитьОбласть("Детали_|Тур"));
				Иначе
					Итератор	= Итератор + 1;
				КонецЕсли;
			КонецЦикла;
			ТабДокумент.Вывести(Макет.ПолучитьОбласть("Пробел"));
		КонецЦикла;
		
		Если НЕ ЕстьКвалификация() Тогда Возврат ТабДокумент; КонецЕсли;
		ТабДокумент.Вывести(Макет.ПолучитьОбласть("Пробел"));
	КонецЕсли;
		
	Объект.Данные.Очистить();
	Выборка = ТурнирнаяТаблица();
	Итого		= Новый Структура("Место", 0);
	Если ТурнирнаяТаблицаКакНаBBC() Тогда
		ТабДокумент.Вывести(Макет.ПолучитьОбласть("Шапка1"));
		//ТабДокумент.ФиксацияСверху	= 2 + Выборка.Количество();
		Пока Выборка.Следующий() И Выборка.Разница > 0 Цикл
			Делитель	= Мин(5, Выборка.КоличествоИгр);
		КонецЦикла;
		Выборка.Сбросить();
		
		Пока Выборка.Следующий() Цикл
			Итого.Место	= Итого.Место + 1;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Детали1|Начало");
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ОбластьМакета.Параметры.Место	= Итого.Место;
			ТабДокумент.Вывести(ОбластьМакета);
			
			Пятерка		= 1;
			Матчи = МатчиПоследние5(Выборка.Команда);
			Для Каждого Детали Из Матчи Цикл
				ОбластьМакета = Макет.ПолучитьОбласть("Детали1|" + Детали.Результат);
				ОбластьМакета.Параметры.Заполнить(Детали);
				ТабДокумент.Присоединить(ОбластьМакета);
				Пятерка		= Пятерка + 1;
			КонецЦикла;
			Для Шаг = Пятерка По Делитель Цикл
				ОбластьМакета = Макет.ПолучитьОбласть("Детали1|NN");
				ТабДокумент.Присоединить(ОбластьМакета);
			КонецЦикла;
			
			ЗаполнитьЗначенияСвойств(Объект.Данные.Добавить(), Выборка);
		КонецЦикла;
	Иначе
		
		ТабДокумент.Вывести(Макет.ПолучитьОбласть("Шапка|Основная"));
		Если Сравнить Тогда
			ПрошлыйСезон	= ПрошлыйСезон();
			Сравнить		= (ПрошлыйСезон.Количество() > 0);
			Если Сравнить Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Год");
				ОбластьМакета.Параметры.Заполнить(ПрошлыйСезон.Получить(0));
				ТабДокумент.Присоединить(ОбластьМакета);
			КонецЕсли;
		КонецЕсли;
		НаВылет			= Выборка.Количество() - Лига.КоличествоРотация;
		Пятерка			= 0;
		Пока Выборка.Следующий() Цикл
			Итого.Место	= Итого.Место + 1;
			
			Выделен	= 0;
			Если Итого.Место > Лига.Квалификация Тогда
				Если Итого.Место > НаВылет Тогда
					Выделен	= 5;
				ИначеЕсли Пятерка = Выборка.КоличествоОчков Тогда
					Выделен	= 5;
				КонецЕсли;
				
			Иначе
				Выделен	= 5;
				Если Пятерка >= 0 Тогда
					Пятерка = Выборка.КоличествоОчков;
				КонецЕсли;
			КонецЕсли;
			ОбластьМакета = ПолучитьОбласть(Макет, Выделен);
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ОбластьМакета.Параметры.Место	= Итого.Место;
			Если НЕ ПоказыватьРазницуМячей Тогда
				ОбластьМакета.Параметры.Разница	= Разница(Выборка);
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			Если Сравнить Тогда
				ОбластьМакета = Макет.ПолучитьОбласть(?(Выделен = 0, "Детали", "Пятерка") + "|Год");
				Прошлое	= ПрошлыйСезон.НайтиСтроки(Новый Структура("Команда", Выборка.Команда));
				Если Прошлое.Количество() = 0 Тогда
					//
				ИначеЕсли ПоказыватьРазницуМячей Тогда
					ОбластьМакета.Параметры.Заполнить(Прошлое.Получить(0));
				Иначе
					ОбластьМакета.Параметры.КоличествоОчков	= Разница(Прошлое.Получить(0));
				КонецЕсли;
				ТабДокумент.Присоединить(ОбластьМакета);
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(Объект.Данные.Добавить(), Выборка);
		КонецЦикла;
		
		Выборка = КомментарииПолучить();
		ОбластьМакета = Неопределено;
		Пока Выборка.Следующий() Цикл
			Если ОбластьМакета = Неопределено Тогда
				ТабДокумент.Вывести(Макет.ПолучитьОбласть("Пробел"));
				ОбластьМакета = Макет.ПолучитьОбласть("Комментарий");
			КонецЕсли;
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		
		Если ОставшиесяМатчи Тогда
			Выборка = ОставшиесяМатчи();
			Если Выборка.Количество() > 0 Тогда
				Сегодня	= КонецДня(ТекущаяДатаСеанса());
				ТабДокумент.Вывести(Макет.ПолучитьОбласть("Пробел"));
				Пока Выборка.Следующий() Цикл
					ОбластьМакета = Макет.ПолучитьОбласть(?(Выборка.Дата > Сегодня, "Матчи", "Сегодня") + ?(Выборка.МояКоманда, "1", ""));
					ОбластьМакета.Параметры.Заполнить(Выборка);
					ТабДокумент.Вывести(ОбластьМакета);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат ТабДокумент;
КонецФункции

Функция Разница(Данные)
	Возврат СтрШаблон("%1-%2", Данные.КоличествоЗабито, Данные.КоличествоПропущено);
КонецФункции

Функция ПолучитьОбласть(Макет, Параметр=0)
	Возврат Макет.ПолучитьОбласть(?(Параметр = 0, "Детали|Основная", "Пятерка|Основная"));
КонецФункции

Функция ЗаголовокПолучить(Лига)
	Возврат СерверныйФункции.ЗаголовокПолучить(Новый Структура("Лига,Чемпионат", Лига, Чемпионат));
КонецФункции

Функция КомментарииПолучить()
	Возврат СерверныйФункции.КомментарииПолучить(Чемпионат);
КонецФункции

Функция МатчиПоследние5(Команда)
	Возврат СерверныйФункции.МатчиПоследние5(Команда, Чемпионат);
КонецФункции

Функция ТурнирнаяТаблица(Олимпийская=Ложь)
	Возврат ?(Олимпийская, СерверныйФункции.ТурнирнаяТаблица2(Чемпионат), СерверныйФункции.ТурнирнаяТаблица(Чемпионат, ТипМатчей));
КонецФункции

Функция ТурнирнаяТаблицаКакНаBBC() Экспорт
	Возврат (НЕ Чемпионат.Владелец.ОлимпийскаяСистема И СерверныйФункции.ТурнирнаяТаблицаКакНаBBC());
КонецФункции

Функция ОставшиесяМатчи()
	Запрос	= Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 5
	      	               |	НАЧАЛОПЕРИОДА(Матч.Ссылка.Дата, ДЕНЬ) КАК Дата,
	      	               |	Матч.Ссылка.Счет КАК Счет,
	      	               |	Матч.Ссылка.Ссылка КАК Матч,
	      	               |	МАКСИМУМ(Матч.Команда = &Команда) КАК МояКоманда
	      	               |ИЗ
	      	               |	Документ.Матч.Команды КАК Матч
	      	               |ГДЕ
	      	               |	Матч.Ссылка.Дата МЕЖДУ &ДатаН И &ДатаК
	      	               |	И Матч.Ссылка.Проведен = ЛОЖЬ
	      	               |	И Матч.Ссылка.ПометкаУдаления = ЛОЖЬ
	      	               |	И Матч.Ссылка.Тур.Владелец = &Владелец
	      	               |
	      	               |СГРУППИРОВАТЬ ПО
	      	               |	Матч.Ссылка.Дата,
	      	               |	Матч.Ссылка.Счет,
	      	               |	Матч.Ссылка.Ссылка
	      	               |
	      	               |ИМЕЮЩИЕ
	      	               |	МАКСИМУМ(Матч.НомерСтроки) = 2
	      	               |
	      	               |УПОРЯДОЧИТЬ ПО
	      	               |	Дата,
	      	               |	МояКоманда УБЫВ");
	Запрос.УстановитьПараметр("ДатаН",				НачалоДня(ТекущаяУниверсальнаяДата()));
	Запрос.УстановитьПараметр("ДатаК",				КонецДня(Запрос.Параметры.ДатаН + Сутки(21)));
	Запрос.УстановитьПараметр("Владелец",			Чемпионат);
	Запрос.УстановитьПараметр("Команда",			МояКоманда());
	Возврат Запрос.Выполнить().Выбрать();
КонецФункции

Функция МояКоманда()
	Возврат СерверныйФункции.МояКомандаПолучить();
КонецФункции

Функция ЕстьКвалификация()
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Туры.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Туры КАК Туры
	                      |ГДЕ
	                      |	Туры.Владелец = &Чемпионат
	                      |	И Туры.ОлимпийскаяСистема = ЛОЖЬ");
	Запрос.УстановитьПараметр("Чемпионат",		Чемпионат);
	Возврат (НЕ Запрос.Выполнить().Пустой());
КонецФункции

Функция ПрошлыйСезон()
	Запрос	= Новый Запрос("ВЫБРАТЬ
	      	               |	ТурнирнаяТаблица.Команда КАК Команда,
	      	               |	СУММА(ВЫБОР
	      	               |			КОГДА ТИПЗНАЧЕНИЯ(ТурнирнаяТаблица.Регистратор) = ТИП(Документ.Матч)
	      	               |				ТОГДА 1
	      	               |			ИНАЧЕ 0
	      	               |		КОНЕЦ) КАК КоличествоИгр,
	      	               |	ЕСТЬNULL(СУММА(ТурнирнаяТаблица.КоличествоГолов), 0) КАК КоличествоЗабито,
	      	               |	ЕСТЬNULL(СУММА(ТурнирнаяТаблица.КоличествоОчков), 0) КАК КоличествоОчков,
	      	               |	СУММА(ВЫБОР
	      	               |			КОГДА ТурнирнаяТаблица.КоличествоОчков > Противник.КоличествоОчков
	      	               |				ТОГДА 1
	      	               |			ИНАЧЕ 0
	      	               |		КОНЕЦ) КАК Выигрыш,
	      	               |	СУММА(ВЫБОР
	      	               |			КОГДА ТурнирнаяТаблица.КоличествоОчков = Противник.КоличествоОчков
	      	               |				ТОГДА 1
	      	               |			ИНАЧЕ 0
	      	               |		КОНЕЦ) КАК Ничья,
	      	               |	СУММА(ВЫБОР
	      	               |			КОГДА ТурнирнаяТаблица.КоличествоОчков < Противник.КоличествоОчков
	      	               |				ТОГДА 1
	      	               |			ИНАЧЕ 0
	      	               |		КОНЕЦ) КАК Проигрыш,
	      	               |	ЕСТЬNULL(СУММА(Противник.КоличествоГолов), 0) КАК КоличествоПропущено,
	      	               |	ЕСТЬNULL(СУММА(ТурнирнаяТаблица.КоличествоГолов), 0) - ЕСТЬNULL(СУММА(Противник.КоличествоГолов), 0) КАК Разница,
	      	               |	МАКСИМУМ(ГОД(Прошлое.ДатаОкончания)) КАК Год
	      	               |ИЗ
	      	               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	      	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК Противник
	      	               |		ПО ТурнирнаяТаблица.Регистратор = Противник.Регистратор
	      	               |			И ТурнирнаяТаблица.НомерСтроки <> Противник.НомерСтроки
	      	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	      	               |			ТурнирнаяТаблица.Тур КАК Тур,
	      	               |			ТурнирнаяТаблица.Тур.Владелец.ДатаОкончания КАК ДатаОкончания
	      	               |		ИЗ
	      	               |			РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	      	               |		ГДЕ
	      	               |			ТурнирнаяТаблица.Тур.Владелец В
	      	               |					(ВЫБРАТЬ ПЕРВЫЕ 1
	      	               |						Чемпионаты2.Ссылка
	      	               |					ИЗ
	      	               |						Справочник.Чемпионаты КАК Чемпионаты
	      	               |							ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты2
	      	               |							ПО
	      	               |								Чемпионаты.Владелец = Чемпионаты2.Владелец
	      	               |									И Чемпионаты.ДатаОкончания > Чемпионаты2.ДатаОкончания
	      	               |					ГДЕ
	      	               |						Чемпионаты.Ссылка = &Чемпионат
	      	               |					УПОРЯДОЧИТЬ ПО
	      	               |						Чемпионаты2.ДатаОкончания УБЫВ)
	      	               |			И ТурнирнаяТаблица.Тур.Код В
	      	               |					(ВЫБРАТЬ
	      	               |						ТурнирнаяТаблица.Тур.Код
	      	               |					ИЗ
	      	               |						РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	      	               |					ГДЕ
	      	               |						ТурнирнаяТаблица.Тур.Владелец = &Чемпионат)) КАК Прошлое
	      	               |		ПО ТурнирнаяТаблица.Тур = Прошлое.Тур
	      	               |ГДЕ
	      	               |	ТурнирнаяТаблица.НомерСтроки = &НомерСтроки
	      	               |
	      	               |СГРУППИРОВАТЬ ПО
	      	               |	ТурнирнаяТаблица.Команда
	      	               |
	      	               |УПОРЯДОЧИТЬ ПО
	      	               |	КоличествоОчков УБЫВ,
	      	               |	Разница УБЫВ,
	      	               |	КоличествоЗабито УБЫВ,
	      	               |	Команда
	      	               |АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("Чемпионат",			Чемпионат);
	Запрос.УстановитьПараметр("НомерСтроки",		ТипМатчей);
	Если НЕ (ТипМатчей = 1 Или ТипМатчей = 2) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТурнирнаяТаблица.НомерСтроки = &НомерСтроки", "ИСТИНА");
	КонецЕсли;
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции
