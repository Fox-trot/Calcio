
&НаСервере
Процедура СформироватьНаСервере()
	Если ЗначениеЗаполнено(Отчет.Чемпионат) Тогда
		Результат = РеквизитФормыВЗначение("Отчет").ОтчетСформировать(Отчет);
		ГрафикОбновить();
		ХронологияОбновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ХронологияОбновить()
	Хронология.Очистить();
	
	Лига	= Отчет.Чемпионат.Владелец;
	
	Хронология.Вывести(РеквизитФормыВЗначение("Отчет").ЗаголовокПолучить(Лига, Лига));
	Хронология.ФиксацияСлева	= 8;
	Макет  = РеквизитФормыВЗначение("Отчет").МакетПолучить();
	
	Запрос	= Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 11
	      	               |	Туры.Владелец КАК Чемпионат,
	      	               |	ГОД(Туры.Владелец.ДатаОкончания) КАК Год
	      	               |ПОМЕСТИТЬ Чемпионаты
	      	               |ИЗ
	      	               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	      	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	      	               |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	      	               |ГДЕ
	      	               |	Туры.Владелец.Владелец = &Лига
	      	               |	И ГОД(Туры.Владелец.ДатаОкончания) > 2000
	      	               |
	      	               |УПОРЯДОЧИТЬ ПО
	      	               |	Год УБЫВ
	      	               |;
	      	               |
	      	               |////////////////////////////////////////////////////////////////////////////////
	      	               |ВЫБРАТЬ
	      	               |	Чемпионаты.Год КАК Год,
	      	               |	ТурнирнаяТаблица.Команда КАК Команда,
	      	               |	СУММА(ВЫБОР
	      	               |			КОГДА ТИПЗНАЧЕНИЯ(ТурнирнаяТаблица.Регистратор) = ТИП(Документ.Матч)
	      	               |				ТОГДА 1
	      	               |			ИНАЧЕ 0
	      	               |		КОНЕЦ) КАК КоличествоИгр,
	      	               |	СУММА(ТурнирнаяТаблица.КоличествоГолов) КАК КоличествоЗабито,
	      	               |	СУММА(ТурнирнаяТаблица.КоличествоОчков) КАК КоличествоОчков,
	      	               |	СУММА(ВЫБОР
	      	               |			КОГДА Противник.Регистратор ЕСТЬ NULL
	      	               |				ТОГДА 0
	      	               |			КОГДА ТурнирнаяТаблица.КоличествоОчков > Противник.КоличествоОчков
	      	               |				ТОГДА 1
	      	               |			ИНАЧЕ 0
	      	               |		КОНЕЦ) КАК Выигрыш,
	      	               |	СУММА(ВЫБОР
	      	               |			КОГДА Противник.Регистратор ЕСТЬ NULL
	      	               |				ТОГДА 0
	      	               |			КОГДА ТурнирнаяТаблица.КоличествоОчков = Противник.КоличествоОчков
	      	               |				ТОГДА 1
	      	               |			ИНАЧЕ 0
	      	               |		КОНЕЦ) КАК Ничья,
	      	               |	СУММА(ВЫБОР
	      	               |			КОГДА Противник.Регистратор ЕСТЬ NULL
	      	               |				ТОГДА 0
	      	               |			КОГДА ТурнирнаяТаблица.КоличествоОчков < Противник.КоличествоОчков
	      	               |				ТОГДА 1
	      	               |			ИНАЧЕ 0
	      	               |		КОНЕЦ) КАК Проигрыш,
	      	               |	ЕСТЬNULL(СУММА(Противник.КоличествоГолов), 0) КАК КоличествоПропущено,
	      	               |	СУММА(ТурнирнаяТаблица.КоличествоГолов) - ЕСТЬNULL(СУММА(Противник.КоличествоГолов), 0) КАК Разница
	      	               |ИЗ
	      	               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	      	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	      	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Чемпионаты КАК Чемпионаты
	      	               |			ПО Туры.Владелец = Чемпионаты.Чемпионат
	      	               |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	      	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК Противник
	      	               |		ПО ТурнирнаяТаблица.Регистратор = Противник.Регистратор
	      	               |			И ТурнирнаяТаблица.НомерСтроки <> Противник.НомерСтроки
	      	               |
	      	               |СГРУППИРОВАТЬ ПО
	      	               |	ТурнирнаяТаблица.Команда,
	      	               |	Чемпионаты.Год
	      	               |
	      	               |УПОРЯДОЧИТЬ ПО
	      	               |	Год УБЫВ,
	      	               |	КоличествоОчков УБЫВ,
	      	               |	Разница УБЫВ,
	      	               |	КоличествоЗабито УБЫВ");
	Запрос.УстановитьПараметр("Лига",				Лига);
	Выборка	= Запрос.Выполнить().Выбрать();
	
	//Хронология.НачатьАвтогруппировкуКолонок();
	Область = Макет.ПолучитьОбласть("Шапка|Начало");
	Хронология.Вывести(Область, 1);
	
	Область	= Макет.ПолучитьОбласть("Шапка|Год");
	Тимз	= Новый Массив;
	Годы	= Новый Массив;
	ГруппаМ	= 1;
	Пока Выборка.Следующий() Цикл
		Если Годы.Найти(Выборка.Год) = Неопределено Тогда
			ГруппаМ = ГруппаМ + 1;
			Область.Параметры.Заполнить(Выборка);
			Хронология.Присоединить(Область, ГруппаМ);
			
			Годы.Добавить(Выборка.Год);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ТекСтрока Из Лига.Команды Цикл
		ГруппаТ	= 1;
		Год		= 0;
		Место	= 1;
		Выборка.Сбросить();
		Пока Выборка.Следующий() Цикл
			Если Год = Выборка.Год Тогда
				Место	= Место + 1;
			Иначе
				Год		= Выборка.Год;
				Место	= 1;
			КонецЕсли;
			Если ТекСтрока.Команда = Выборка.Команда Тогда
				Если ГруппаТ = 1 Тогда
					Область = Макет.ПолучитьОбласть("Детали|Начало");
					Область.Параметры.Заполнить(Выборка);
					Хронология.Вывести(Область, 1);
				КонецЕсли;
				ГруппаТ = ГруппаТ + 1;
				Область	= Макет.ПолучитьОбласть("Детали|Год");
				Область.Параметры.Заполнить(Выборка);
				Область.Параметры.Место	= Место;
				Хронология.Присоединить(Область, ГруппаТ);
				
			ИначеЕсли ГруппаТ = ГруппаМ Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	//Хронология.ЗакончитьАвтогруппировкуКолонок();
КонецПроцедуры

&НаСервере
Функция ГрафикиПолучить(КакЭлементы=Ложь)
	мГрафики = Новый Массив;
	Если КакЭлементы Тогда
		мГрафики.Добавить(Элементы.ГрафикРаздельно1);
		мГрафики.Добавить(Элементы.ГрафикРаздельно2);
		мГрафики.Добавить(Элементы.ГрафикРаздельно3);
		мГрафики.Добавить(Элементы.ГрафикРаздельно4);
		мГрафики.Добавить(Элементы.ГрафикРаздельно5);
		мГрафики.Добавить(Элементы.ГрафикРаздельно6);
	Иначе
		мГрафики.Добавить(ГрафикРаздельно1);
		мГрафики.Добавить(ГрафикРаздельно2);
		мГрафики.Добавить(ГрафикРаздельно3);
		мГрафики.Добавить(ГрафикРаздельно4);
		мГрафики.Добавить(ГрафикРаздельно5);
		мГрафики.Добавить(ГрафикРаздельно6);
	КонецЕсли;
	Возврат мГрафики;
КонецФункции

&НаСервере
Процедура ГрафикОбновить()
	Если Элементы.ГруппаГрафики.Видимость Тогда
		СерверныйФункции.ГрафикОбновить(График, Отчет.Данные);
		
		мГрафики	= ГрафикиПолучить(Истина);
		_Команды	= Отчет.Чемпионат.Владелец.Команды;
		Для Итератор = 0 По 5 Цикл
			мГрафики.Получить(Итератор).Видимость	= (Итератор < _Команды.Количество());
		КонецЦикла;
		
		мГрафики	= ГрафикиПолучить();
		Итератор	= 0;
		Для Каждого ТекСтрока Из _Команды Цикл
			мГрафики.Получить(Итератор).ОбластьЗаголовка.Текст	= ТекСтрока.Команда;
			СерверныйФункции.ГрафикОбновить(мГрафики.Получить(Итератор), Отчет.Данные.НайтиСтроки(Новый Структура("Команда", ТекСтрока.Команда)));
			Если Итератор = мГрафики.ВГраница() Тогда Прервать; КонецЕсли;
			Итератор	= Итератор + 1;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда=Неопределено)
	Если ПроверитьЗаполнение() Тогда
		СформироватьНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ТипГрафикаЗаполнить();
	ТипГрафикаПриИзменении();
	Сформировать();
КонецПроцедуры

&НаКлиенте
Процедура ЧемпионатПриИзменении(Элемент)
	СформироватьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ТипЗнч(Параметр) = Тип("СправочникСсылка.Чемпионаты") И Параметр = Отчет.Чемпионат Тогда
		СформироватьНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Лиги.ЗагрузитьЗначения(ЛигиПолучить());
	Если Параметры.Свойство("Чемпионат") Тогда
		Отчет.Чемпионат	= Параметры.Чемпионат;
		ОбщегоНазначения.ЗаголовокСкрыть(ЭтаФорма, Элементы.ГруппаПараметры);
		
	ИначеЕсли Параметры.Свойство("Лига") И Параметры.Лига.ОлимпийскаяСистема Тогда
		Отказ	= Истина;
	ИначеЕсли Параметры.Свойство("Лига") Тогда
		Отчет.Чемпионат	= ЧемпионатЛигиПоследний(Параметры.Лига);
		ОбщегоНазначения.ЗаголовокСкрыть(ЭтаФорма, Элементы.ГруппаПараметры);
		
	ИначеЕсли НЕ Параметры.Свойство("График") Тогда
		Элементы.ГруппаГрафики.Видимость	= Ложь;
	КонецЕсли;
	
	СерииЗаполнить();
КонецПроцедуры

&НаСервере
Процедура СерииЗаполнить()
	СерверныйФункции.СерииЗаполнить(График);
	Для Каждого Граф Из ГрафикиПолучить() Цикл
		СерверныйФункции.СерииЗаполнить(Граф);
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЧемпионатЛигиПоследний(Лига)
	Возврат СерверныйФункции.ЧемпионатЛигиПоследний(Лига);
КонецФункции

&НаСервереБезКонтекста
Функция ЛигиПолучить()
	Возврат СерверныйФункции.ЛигиНациональные();
КонецФункции

&НаКлиенте
Процедура ТипГрафикаЗаполнить()
	Элементы.ТипГрафика.СписокВыбора.Добавить(0, ТипДиаграммы.ГистограммаСНакоплением);
	Элементы.ТипГрафика.СписокВыбора.Добавить(1, ТипДиаграммы.РадарныйГрафикСОбластямиИНакоплением);
КонецПроцедуры

&НаКлиенте
Процедура ТипГрафикаПриИзменении(Элемент=Неопределено)
	Если ТипГрафика = 1 Тогда
		График.ТипДиаграммы	= ТипДиаграммы.РадарныйГрафикСОбластямиИНакоплением;
	Иначе
		График.ТипДиаграммы	= ТипДиаграммы.ГистограммаСНакоплением;
	КонецЕсли;
КонецПроцедуры
