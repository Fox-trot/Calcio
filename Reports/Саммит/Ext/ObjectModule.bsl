
Функция ОтчетСформировать(Объект) Экспорт
	ТабДокумент = Новый ТабличныйДокумент;
	Объект.Данные.Очистить();
	
	Лига		= Чемпионат.Владелец;
	Команды		= КомандыЛиги(Лига);
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТурнирнаяТаблица.Регистратор КАК Регистратор,
	                      |	ТурнирнаяТаблица.НомерСтроки КАК НомерСтроки,
	                      |	ТурнирнаяТаблица.Команда КАК Команда,
	                      |	ТурнирнаяТаблица.КоличествоГолов КАК КоличествоГолов,
	                      |	ТурнирнаяТаблица.КоличествоОчков КАК КоличествоОчков
	                      |ПОМЕСТИТЬ ТурнирнаяТаблица
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК Противник
	                      |		ПО ТурнирнаяТаблица.Регистратор = Противник.Регистратор
	                      |			И ТурнирнаяТаблица.НомерСтроки <> Противник.НомерСтроки
	                      |ГДЕ
	                      |	ТурнирнаяТаблица.Тур.Владелец = &Чемпионат
	                      |	И ТурнирнаяТаблица.Команда В(&Команды)
	                      |	И Противник.Команда В(&Команды)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Команды.Ссылка КАК Команда,
	                      |	СУММА(ВЫБОР
	                      |			КОГДА ТурнирнаяТаблица.Регистратор ЕСТЬ NULL
	                      |				ТОГДА 0
	                      |			ИНАЧЕ 1
	                      |		КОНЕЦ) КАК КоличествоИгр,
	                      |	ЕСТЬNULL(СУММА(ТурнирнаяТаблица.КоличествоГолов), 0) КАК КоличествоЗабито,
	                      |	ЕСТЬNULL(СУММА(Противник.КоличествоГолов), 0) КАК КоличествоПропущено,
	                      |	ЕСТЬNULL(СУММА(ТурнирнаяТаблица.КоличествоОчков), 0) КАК КоличествоОчков,
	                      |	СУММА(ВЫБОР
	                      |			КОГДА ТурнирнаяТаблица.КоличествоОчков > Противник.КоличествоОчков
	                      |				ТОГДА 1
	                      |			ИНАЧЕ 0
	                      |		КОНЕЦ) КАК Выигрыш,
	                      |	СУММА(ВЫБОР
	                      |			КОГДА ТурнирнаяТаблица.КоличествоОчков = Противник.КоличествоОчков
	                      |				ТОГДА 1
	                      |			ИНАЧЕ 0
	                      |		КОНЕЦ) КАК Ничья,
	                      |	СУММА(ВЫБОР
	                      |			КОГДА ТурнирнаяТаблица.КоличествоОчков < Противник.КоличествоОчков
	                      |				ТОГДА 1
	                      |			ИНАЧЕ 0
	                      |		КОНЕЦ) КАК Проигрыш,
	                      |	ЕСТЬNULL(СУММА(Противник.КоличествоГолов), 0) КАК Пропущено,
	                      |	ЕСТЬNULL(СУММА(ТурнирнаяТаблица.КоличествоГолов) - СУММА(Противник.КоличествоГолов), 0) КАК Разница
	                      |ИЗ
	                      |	Справочник.Команды КАК Команды
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТурнирнаяТаблица КАК Противник
	                      |			ПО ТурнирнаяТаблица.Регистратор = Противник.Регистратор
	                      |				И ТурнирнаяТаблица.НомерСтроки <> Противник.НомерСтроки
	                      |		ПО Команды.Ссылка = ТурнирнаяТаблица.Команда
	                      |ГДЕ
	                      |	Команды.Ссылка В(&Команды)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	Команды.Ссылка
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	КоличествоОчков УБЫВ,
	                      |	Разница УБЫВ,
	                      |	КоличествоЗабито УБЫВ,
	                      |	Команда
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("Чемпионат",		Чемпионат);
	Запрос.УстановитьПараметр("Команды",		Команды);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТабДокумент.Вывести(ЗаголовокПолучить(Лига, Чемпионат));
	
	Макет  = ПолучитьОбщийМакет("ТурнирнаяТаблица");
	
	Хозяева		= Неопределено;
	МояКоманда	= МояКомандаПолучить();
	Пока НЕ ЗначениеЗаполнено(Хозяева) И Выборка.Следующий() Цикл
		Если Выборка.Команда = МояКоманда Тогда
			Хозяева = Выборка.Команда;
		КонецЕсли;
	КонецЦикла;
	Выборка.Сбросить();
	
	Итого		= Новый Структура("Место,Делитель", 0, 5);
	Если ТурнирнаяТаблицаКакНаBBC() Тогда
		ТабДокумент.Вывести(Макет.ПолучитьОбласть("Шапка1"));
		//ТабДокумент.ФиксацияСверху	= 2 + Выборка.Количество();
		
		Пока Выборка.Следующий() Цикл
			Итого.Место	= Итого.Место + 1;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Детали1|Начало");
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ОбластьМакета.Параметры.Место	= Итого.Место;
			ТабДокумент.Вывести(ОбластьМакета);
			
			Пятерка		= 1;
			Матчи = ВстречиПоследние5(Выборка.Команда, Команды);
			Для Каждого Детали Из Матчи Цикл
				ОбластьМакета = Макет.ПолучитьОбласть("Детали1|" + Детали.Результат);
				ОбластьМакета.Параметры.Заполнить(Детали);
				ТабДокумент.Присоединить(ОбластьМакета);
				Пятерка		= Пятерка + 1;
			КонецЦикла;
			Для Шаг = Пятерка По Итого.Делитель Цикл
				ТабДокумент.Присоединить(Макет.ПолучитьОбласть("Детали1|NN"));
			КонецЦикла;
			
			ЗаполнитьЗначенияСвойств(Объект.Данные.Добавить(), Выборка);
		КонецЦикла;
	Иначе
		ПоказыватьРазницуМячей = ПоказыватьРазницуМячей();
		ТабДокумент.Вывести(Макет.ПолучитьОбласть("Шапка|Основная"));
		Пока Выборка.Следующий() Цикл
			Если Итого.Место = 0 И НЕ ЗначениеЗаполнено(Хозяева) Тогда
				Хозяева = Выборка.Команда;
			КонецЕсли;
			Итого.Место	= Итого.Место + 1;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Детали|Основная");
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ОбластьМакета.Параметры.Место	= Итого.Место;
			Если НЕ ПоказыватьРазницуМячей Тогда
				ОбластьМакета.Параметры.Разница	= СтрШаблон("%1-%2", Выборка.КоличествоЗабито, Выборка.КоличествоПропущено);
			КонецЕсли;
			ТабДокумент.Вывести(ОбластьМакета);
			
			ЗаполнитьЗначенияСвойств(Объект.Данные.Добавить(), Выборка);
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Матч.Дата КАК Дата,
	               |	Матч.Счет КАК Счет,
	               |	Матч.Ссылка КАК Матч,
	               |	ТурнирнаяТаблица.Команда = &Хозяева
	               |		ИЛИ МатчКоманды.Команда = &Хозяева КАК Хозяева
	               |ИЗ
	               |	Документ.Матч КАК Матч
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	               |		ПО Матч.Ссылка = ТурнирнаяТаблица.Регистратор
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК МатчКоманды
	               |		ПО Матч.Ссылка = МатчКоманды.Регистратор
	               |ГДЕ
	               |	МатчКоманды.Команда В(&Команды)
	               |	И МатчКоманды.НомерСтроки = 2
	               |	И Матч.Тур.Владелец = &Чемпионат
	               |	И ТурнирнаяТаблица.Команда В(&Команды)
	               |	И ТурнирнаяТаблица.НомерСтроки = 1
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата УБЫВ,
	               |	Счет";
	Запрос.УстановитьПараметр("Хозяева",		Хозяева);
	Выборка = Запрос.Выполнить().Выбрать();
	ТабДокумент.Вывести(Макет.ПолучитьОбласть("Пробел"));
	Пока Выборка.Следующий() Цикл
		Область = Макет.ПолучитьОбласть(?(Выборка.Хозяева, "Хозяева", "Матчи"));
		Область.Параметры.Заполнить(Выборка);
		ТабДокумент.Вывести(Область);
	КонецЦикла;
	
	Возврат ТабДокумент;
КонецФункции

Функция ВстречиПоследние5(Команда, Команды)
	Возврат СерверныйФункции.ВстречиПоследние5(Команда, Команды, Чемпионат);
КонецФункции

Функция МояКомандаПолучить()
	Возврат СерверныйФункции.МояКомандаПолучить();
КонецФункции

Функция ЗаголовокПолучить(Лига, Чемп) Экспорт
	Возврат СерверныйФункции.ЗаголовокПолучить(Новый Структура("Лига,Чемпионат", Лига, Чемп));
КонецФункции

Функция МакетПолучить() Экспорт
	Возврат ПолучитьМакет("Хронология");
КонецФункции

Функция ПоказыватьРазницуМячей()
	Возврат СерверныйФункции.ПоказыватьРазницуМячей();
КонецФункции

Функция ТурнирнаяТаблицаКакНаBBC()
	Возврат СерверныйФункции.ТурнирнаяТаблицаКакНаBBC();
КонецФункции

Функция КомандыЛиги(Лига)
	Возврат СерверныйФункции.КомандыЛиги(Лига, Истина);
КонецФункции
