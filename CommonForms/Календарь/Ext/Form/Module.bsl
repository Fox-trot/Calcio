
&НаКлиенте
Процедура ТолькоДниРожденияПриИзменении(Элемент)
	СписокУстановитьЗначениеПараметра("ТолькоДниРождения",	ТолькоДниРождения);
КонецПроцедуры

&НаКлиенте
Процедура ДатыУстановить()
	Период.Вариант		= ВариантСтандартногоПериода.ДоКонцаЭтогоМесяца;
	Если День(Период.ДатаОкончания) - День(Период.ДатаНачала) <= 3 Тогда
		Период.ДатаОкончания	= КонецМесяца(Период.ДатаОкончания + Сутки());
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСегодня(Команда)
	ДатыУстановить();
	КомандаОбновить();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ТипЗнч(Параметр) = Тип("СправочникСсылка.Игроки")
	И Параметр = ТекущийИгрок
	Тогда
		ТекущийИгрок	= Неопределено;
		ИзображениеУстановить(Элементы.Список.ТекущиеДанные.ИгрокИлиМатч);
	ИначеЕсли СтрСравнить(ИмяСобытия, "Матчи") = 0 Тогда
		КомандаОбновить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаПриИзменении(Элемент)
	СписокУстановитьЗначениеПараметра("Команда",			?(ЗначениеЗаполнено(МояКоманда), МояКоманда, Неопределено));
	ФотоПолучить();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Список.Параметры.УстановитьЗначениеПараметра("ТолькоДниРождения",	ТолькоДниРождения);
	ДатыУстановить();
	Если НЕ ЗначениеЗаполнено(МояКоманда) Тогда
		МояКоманда		= МояКоманда();
	КонецЕсли;
	КомандаОбновить();
КонецПроцедуры

&НаСервереБезКонтекста
Функция МояКоманда()
	Возврат СерверныйФункции.МояКомандаПолучить();
КонецФункции

&НаСервере
Функция ИзображениеПолучить(Команда=Неопределено)
	Если Команда = Неопределено Тогда
		Возврат СерверныйФункции.ИзображениеДефолтПолучить();
	КонецЕсли;
	Возврат СерверныйФункции.ИзображениеПолучить(Команда);
КонецФункции

&НаСервереБезКонтекста
Функция Сегодня()
	Возврат НачалоДня(ТекущаяДатаСеанса());
КонецФункции

&НаКлиенте
Процедура КомандаОбновить(Команда=Неопределено)
	Элементы.Период.Подсказка	= Строка(Период);
	
	Если ЗначениеЗаполнено(МояКоманда) Тогда
		СписокУстановитьЗначениеПараметра("Команда",			МояКоманда);
		СписокУстановитьЗначениеПараметра("ДатаН",				Период.ДатаНачала);
		СписокУстановитьЗначениеПараметра("ДатаК",				Период.ДатаОкончания);
		СписокУстановитьЗначениеПараметра("ТолькоДниРождения",	ТолькоДниРождения);
	Иначе
		СписокУстановитьЗначениеПараметра("Команда",			Неопределено);
	КонецЕсли;
	ФотоПолучить();
КонецПроцедуры

&НаКлиенте
Процедура СписокУстановитьЗначениеПараметра(ПараметрИмя, Значение)
	ШалостьУдалась = Ложь;
	Для Каждого Параметр Из Список.Параметры.Элементы Цикл
		Если СтрСравнить(Параметр.Параметр, ПараметрИмя) = 0 Тогда
			Если Параметр.Значение <> Значение Тогда
				Список.Параметры.УстановитьЗначениеПараметра(ПараметрИмя, Значение);
			КонецЕсли;
			ШалостьУдалась		= Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если НЕ ШалостьУдалась Тогда
		Список.Параметры.УстановитьЗначениеПараметра(ПараметрИмя, Значение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Показать(Элемент.ТекущиеДанные, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ФотоПолучить() Экспорт
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Изображение	= ИзображениеПолучить(МояКоманда);
	ИначеЕсли Элементы.Список.ТекущиеДанные.ЭтоИгрок Тогда
		ИзображениеУстановить(Элементы.Список.ТекущиеДанные.ИгрокИлиМатч);
	Иначе
		Изображение	= ИзображениеПолучить(МояКоманда);
		ТекущийИгрок	= Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ФотоПолучить", 0.1, Истина);
КонецПроцедуры

&НаСервере
Процедура ИзображениеУстановить(ИгрокИлиМатч)
	Если ИгрокИлиМатч = ТекущийИгрок Тогда
		//
	Иначе
		Изображение	= ИзображениеПолучить(ИгрокИлиМатч);
		ТекущийИгрок	= ИгрокИлиМатч;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокОбновить() Экспорт
	КомандаОбновить();
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("СписокОбновить", 0.1, Истина);
КонецПроцедуры

&НаСервере
Функция ИмпортИгрПоКалендарюНаСервере(Текст)
	Возврат СерверныйФункции.ИмпортИгрПоКалендарю(Текст, МояКоманда);
КонецФункции

&НаКлиенте
Процедура ИмпортИгрПоКалендарю(Текст)
	Ответ	= ИмпортИгрПоКалендарюНаСервере(Текст);
	Если Ответ > 0 Тогда
		Оповестить("Матчи");
		Сообщить(СтрШаблон("Добавлено/изменено событий  %1", Ответ));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаИмпорт(Команда)
	Гиперссылка	= УРЛ;
	ПоказатьВводСтроки(Новый ОписаниеОповещения("Импорт", ЭтотОбъект), Гиперссылка, "Импорт календаря (iCal)");
КонецПроцедуры

&НаКлиенте
Процедура ТекстовыйДокументПрочитан(ДополнительныеПараметры=Неопределено) Экспорт
	ИмпортИгрПоКалендарю(ТекстовыйДокумент.ПолучитьТекст());
КонецПроцедуры

&НаКлиенте
Процедура Импорт(Гиперссылка, ДополнительныеПараметры=Неопределено) Экспорт
	Если ЭтоУРЛ(Гиперссылка) Тогда
		УРЛ		= Гиперссылка;
		Текст	= СкачатьПоСсылке(Гиперссылка);
		ИмпортИгрПоКалендарю(Текст);
		
	ИначеЕсли НЕ ПустаяСтрока(Гиперссылка) Тогда
		Попытка
			ТекстовыйДокумент.НачатьЧтение(Новый ОписаниеОповещения("ТекстовыйДокументПрочитан", ЭтотОбъект), Гиперссылка);
		Исключение
			СерверныйФункции.Логировать("Календарь.ТекстовыйДокументПрочитать", ОписаниеОшибки(), Гиперссылка);
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СкачатьПоСсылке(Гиперссылка)
	Возврат СерверныйФункции.СкачатьПоСсылке(Гиперссылка);
КонецФункции

&НаКлиенте
Процедура ИзображениеНажатие(Элемент, СтандартнаяОбработка)
	Показать(Элементы.Список.ТекущиеДанные, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Показать(ТекущиеДанные, СтандартнаяОбработка=Ложь)
	НаКлиенте.Показать(ТекущиеДанные.ИгрокИлиМатч, СтандартнаяОбработка);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИзображениеДефолт	= ИзображениеПолучить();
КонецПроцедуры
