
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
	Иначе
		КомандыЛигиЗагрузить();
	КонецЕсли;
	Изображение	= СерверныйФункции.ИзображениеПолучить(Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура КомандыЛигиЗагрузить()
	КомандыСтраны.ЗагрузитьЗначения(СерверныйФункции.КомандыЛиги(Объект.Ссылка));
КонецПроцедуры

&НаСервере
Функция ЕстьИстория()
	Возврат СерверныйФункции.ЕстьИстория(Объект.Ссылка);
КонецФункции

&НаКлиенте
Функция ПараметрыДиалога()
	Возврат ОбщегоНазначения.ПараметрыДиалога();
КонецФункции

&НаКлиенте
Процедура ВыбратьИзображение(Команда)
	Если СтрСравнить(Команда.Имя, "ВыбратьИзображение") = 0 Тогда
		НачатьПомещениеФайлаНаСервер(Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект),,,, ПараметрыДиалога());
	ИначеЕсли СтрСравнить(Команда.Имя, "УдалитьИзображение") = 0 Тогда
		Изображение = ИзображениеДефолтПолучить();
		Модифицированность	= Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ИзображениеДефолтПолучить()
	Возврат СерверныйФункции.ИзображениеДефолтПолучить();
КонецФункции

&НаКлиенте
Процедура ОбработатьВыборФайла(Результат, ДополнительныеПараметры=Неопределено) Экспорт
	Если ТипЗнч(Результат) = Тип("ОписаниеПомещенногоФайла") Тогда
		Если ОбщегоНазначения.РасширениеФайлаВерно(Результат.СсылкаНаФайл.Расширение) Тогда
			Изображение = Результат.Адрес;
			Модифицированность	= Истина;
		Иначе
			ОбщегоНазначения.СообщитьОбОшибке("Данные тип файла не поддерживается");
		КонецЕсли;
	ИначеЕсли ТипЗнч(Результат) = Тип("Строка") И НЕ ПустаяСтрока(Результат) Тогда
		Изображение			= ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Результат), УникальныйИдентификатор);
		Модифицированность	= Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Модифицированность Тогда
		СерверныйФункции.ПередЗаписьюНаСервереИзображение(ТекущийОбъект, Изображение, Отказ);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтранаПриИзменении(Элемент)
	ДоступностьВидимостьУстановить();
КонецПроцедуры

&НаСервере
Процедура ДоступностьВидимостьУстановить()
	Если ЕстьИстория() Тогда
		Элементы.Владелец.ТолькоПросмотр			= Истина;
		Элементы.ОлимпийскаяСистема.Видимость		= Ложь;
		Элементы.ГруппаУЕФА.Видимость				= Ложь;
	КонецЕсли;
	Элементы.КоличествоРотация.ТолькоПросмотр	= Объект.ОлимпийскаяСистема Или НЕ ЗначениеЗаполнено(Объект.Страна);
	Элементы.ОлимпийскаяСистема.ТолькоПросмотр	= (Объект.КоличествоРотация > 0);
	Элементы.ГруппаУЕФА.Доступность				= НЕ Объект.ОлимпийскаяСистема Или ЗначениеЗаполнено(Объект.Страна);
	
	Элементы.СтраницаКоманды.Доступность		= ЗначениеЗаполнено(Объект.Страна);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ДоступностьВидимостьУстановить();
КонецПроцедуры

&НаКлиенте
Процедура ИзображениеПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	Если ЭтоУРЛ(ПараметрыПеретаскивания.Значение) Тогда
		НачатьКопированиеФайла(Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект), ПараметрыПеретаскивания.Значение, КаталогВременныхФайлов() + ИмяФайла(ПараметрыПеретаскивания.Значение));
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("СсылкаНаФайл") Тогда
		Если ОбщегоНазначения.РасширениеФайлаВерно(ПараметрыПеретаскивания.Значение.Расширение) Тогда
			Изображение			= ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПараметрыПеретаскивания.Значение.Файл.ПолноеИмя), УникальныйИдентификатор);
			Модифицированность	= Истина;
			СтандартнаяОбработка= Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	КомандыЛигиЗагрузить();
КонецПроцедуры
