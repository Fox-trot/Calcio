
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
	Иначе
		КомандыЛигиЗагрузить();
	КонецЕсли;
	Изображение	= СерверныйФункции.ИзображениеПолучить(Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура КомандыЛигиЗагрузить()
	КомандыЛиги.ЗагрузитьЗначения(СерверныйФункции.КомандыЛиги(Объект.Ссылка));
КонецПроцедуры

&НаСервере
Функция ЕстьИстория()
	Если НЕ ЕстьИстория Тогда
		ЕстьИстория	= СерверныйФункции.ЕстьИстория(Объект.Ссылка);
	КонецЕсли;
	Возврат ЕстьИстория;
КонецФункции

&НаКлиенте
Функция ПараметрыДиалога()
	Возврат НаКлиенте.ПараметрыДиалога();
КонецФункции

&НаКлиенте
Процедура ВыбратьИзображение(Команда)
	Если СтрСравнить(Команда.Имя, "ВыбратьИзображение") = 0 Тогда
		НачатьПомещениеФайлаНаСервер(Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект),,,, ПараметрыДиалога());
	ИначеЕсли СтрСравнить(Команда.Имя, "УдалитьИзображение") = 0 Тогда
		Изображение = ИзображениеДефолтПолучить();
		Модифицированность	= Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ИзображениеДефолтПолучить()
	Возврат СерверныйФункции.ИзображениеДефолтПолучить();
КонецФункции

&НаКлиенте
Процедура ОбработатьВыборФайла(Результат, ДополнительныеПараметры=Неопределено) Экспорт
	Если ТипЗнч(Результат) = Тип("ОписаниеПомещенногоФайла") Тогда
		Если ОбщегоНазначения.РасширениеФайлаВерно(Результат.СсылкаНаФайл.Расширение) Тогда
			Изображение = Результат.Адрес;
			Модифицированность	= Истина;
		Иначе
			ОбщегоНазначения.СообщитьОбОшибке("Данные тип файла не поддерживается");
		КонецЕсли;
	ИначеЕсли ТипЗнч(Результат) = Тип("Строка") И НЕ ПустаяСтрока(Результат) Тогда
		Изображение			= ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Результат), УникальныйИдентификатор);
		Модифицированность	= Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Модифицированность Тогда
		СерверныйФункции.ПередЗаписьюНаСервереИзображение(ТекущийОбъект, Изображение, Отказ);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтранаПриИзменении(Элемент)
	ДоступностьВидимостьУстановить();
КонецПроцедуры

&НаСервере
Процедура ДоступностьВидимостьУстановить()
	Если ЕстьИстория() Тогда
		Элементы.Владелец.ТолькоПросмотр			= Истина;
		Элементы.ОлимпийскаяСистема.ТолькоПросмотр	= Истина;
	Иначе
		Элементы.ОлимпийскаяСистема.Доступность		= (Объект.КоличествоРотация = 0);
	КонецЕсли;
	Элементы.КоличествоРотация.ТолькоПросмотр	= Объект.ОлимпийскаяСистема Или НЕ ЗначениеЗаполнено(Объект.Страна);
	
	Элементы.СтраницаКоманды.Доступность		= ЗначениеЗаполнено(Объект.Страна);
	Элементы.Хронология.Доступность				= НЕ Объект.ОлимпийскаяСистема Или ЗначениеЗаполнено(Объект.Страна);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ДоступностьВидимостьУстановить();
КонецПроцедуры

&НаКлиенте
Процедура ИзображениеПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	Если ЭтоУРЛ(ПараметрыПеретаскивания.Значение) Тогда
		НачатьКопированиеФайла(Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект), ПараметрыПеретаскивания.Значение, СерверныйФункции.КаталогаФайлов() + ИмяФайла(ПараметрыПеретаскивания.Значение));
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("СсылкаНаФайл") Тогда
		Если ОбщегоНазначения.РасширениеФайлаВерно(ПараметрыПеретаскивания.Значение.Расширение) Тогда
			Изображение			= ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПараметрыПеретаскивания.Значение.Файл.ПолноеИмя), УникальныйИдентификатор);
			Модифицированность	= Истина;
			СтандартнаяОбработка= Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	КомандыЛигиЗагрузить();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если СтрСравнить(ИмяСобытия, "Матчи") = 0
	И Параметр = Объект.Владелец
	Тогда
		ОбновитьОтображениеДанных();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаПриИзменении(Элемент)
	ГрафикОбновить();
КонецПроцедуры

&НаСервере
Процедура ГрафикОбновитьНаСервере()
	Данные.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Команда",		Тим);
	Запрос.УстановитьПараметр("Лига",			Объект.Ссылка);
	Если Объект.Ссылка.Пустая() Тогда
		//
	ИначеЕсли ЗначениеЗаполнено(Тим) Тогда
		Если ТипГрафика = 2 Тогда
			Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 13
			               |	Туры.Владелец.ДатаОкончания КАК Период,
			               |	Туры.Владелец КАК Чемпионат
			               |ПОМЕСТИТЬ Чемпионаты
			               |ИЗ
			               |	Справочник.Туры КАК Туры
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
			               |		ПО Туры.Ссылка = ТурнирнаяТаблица.Тур
			               |ГДЕ
			               |	Туры.Владелец.Владелец = &Лига
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	Период УБЫВ
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ЧемпионатыКоманды.Команда КАК Команда,
			               |	Чемпионаты.Период КАК Период,
			               |	Чемпионаты.Чемпионат КАК Чемпионат,
			               |	Туры.Ссылка КАК Тур
			               |ПОМЕСТИТЬ Команды
			               |ИЗ
			               |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Чемпионаты КАК Чемпионаты
			               |		ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Чемпионат
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
			               |		ПО ЧемпионатыКоманды.Ссылка = Туры.Владелец
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	Команды.Команда КАК Команда,
			               |	ЕСТЬNULL(СУММА(ТурнирнаяТаблица.КоличествоГолов), 0) КАК Забито,
			               |	ЕСТЬNULL(СУММА(ТурнирнаяТаблица.КоличествоОчков), 0) КАК КоличествоОчков,
			               |	ЕСТЬNULL(СУММА(ТурнирнаяТаблица.КоличествоГолов), 0) - ЕСТЬNULL(СУММА(Игра.КоличествоГолов), 0) КАК Разница,
			               |	Команды.Период КАК Период,
			               |	Команды.Чемпионат КАК Чемпионат
			               |ИЗ
			               |	Команды КАК Команды
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
			               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК Игра
			               |			ПО ТурнирнаяТаблица.Регистратор = Игра.Регистратор
			               |				И ТурнирнаяТаблица.НомерСтроки <> Игра.НомерСтроки
			               |		ПО Команды.Тур = ТурнирнаяТаблица.Тур
			               |			И Команды.Команда = ТурнирнаяТаблица.Команда
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	Команды.Команда,
			               |	Команды.Период,
			               |	Команды.Чемпионат
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	Период,
			               |	КоличествоОчков УБЫВ,
			               |	Разница УБЫВ,
			               |	Забито УБЫВ";
		Иначе
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 13
			               |	СУММА(ЕСТЬNULL(ТурнирнаяТаблица.КоличествоГолов, 0)) КАК КоличествоЗабито,
			               |	СУММА(ЕСТЬNULL(ТурнирнаяТаблица.КоличествоОчков, 0)) КАК КоличествоПропущено,
			               |	Туры.Владелец.ДатаОкончания КАК Период,
			               |	Туры.Владелец КАК Чемпионат
			               |ИЗ
			               |	Справочник.Туры КАК Туры
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
			               |		ПО Туры.Ссылка = ТурнирнаяТаблица.Тур
			               |			И (ТурнирнаяТаблица.Команда = &Команда)
			               |ГДЕ
			               |	Туры.Владелец.Владелец = &Лига
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	Туры.Владелец,
			               |	Туры.Владелец.ДатаОкончания
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	Период УБЫВ";
		КонецЕсли;
	ИначеЕсли ТипГрафика = 1 Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 13
		               |	СУММА(ЕСТЬNULL(ТурнирнаяТаблица.КоличествоГолов, 0)) КАК КоличествоЗабито,
		               |	СУММА(ЕСТЬNULL(ТурнирнаяТаблица.КоличествоОчков, 0)) КАК КоличествоПропущено,
		               |	ТурнирнаяТаблица.Тур.Владелец.ДатаОкончания КАК Период,
		               |	ТурнирнаяТаблица.Тур.Владелец КАК Чемпионат
		               |ИЗ
		               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |ГДЕ
		               |	ТурнирнаяТаблица.Тур.Владелец.Владелец = &Лига
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ТурнирнаяТаблица.Тур.Владелец,
		               |	ТурнирнаяТаблица.Тур.Владелец.ДатаОкончания
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Период УБЫВ";
	КонецЕсли;
	Если ПустаяСтрока(Запрос.Текст) Тогда
		//
	ИначеЕсли ТипГрафика = 2 Тогда
		ШалостьУдалась	= Ложь;
		Чемпионат		= Неопределено;
		Период			= Дата(1,1,1);
		Место			= 0;
		Детали	= Запрос.Выполнить().Выбрать();
		Пока Детали.Следующий() Цикл
			Если Чемпионат = Детали.Чемпионат Тогда
				Место	= Место + 1;
			Иначе
				Если НЕ ШалостьУдалась И ЗначениеЗаполнено(Чемпионат) Тогда
					ЗаполнитьЗначенияСвойств(Данные.Добавить(), Новый Структура("Период,Чемпионат", Период, Чемпионат));
				КонецЕсли;
				ШалостьУдалась	= Ложь;
				Место	= 1;
			КонецЕсли;
			Если Детали.Команда = Тим Тогда
				Деталь = Данные.Добавить();
				ЗаполнитьЗначенияСвойств(Деталь, Детали);
				Деталь.КоличествоЗабито	= Место;
				
				ШалостьУдалась = Истина;
			КонецЕсли;
			Чемпионат	= Детали.Чемпионат;
			Период		= Детали.Период;
		КонецЦикла;
	Иначе
		Детали	= Запрос.Выполнить().Выбрать();
		Пока Детали.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Данные.Добавить(), Детали);
		КонецЦикла;
		Данные.Сортировать("Период");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГрафикОбновить(Команда=Неопределено)
	ГрафикОбновитьНаСервере();
	
	График.Очистить();
	Итого	= 0;
	Серия	= График.УстановитьСерию(Тим);
	Цвет	= Цвет(Тим);
	Если ЗначениеЗаполнено(Цвет) Тогда
		Серия.Цвет			= Цвет;
	КонецЕсли;
	Если ТипГрафика = 2 Тогда
		Для Каждого Детали Из Данные Цикл
			Если Детали.КоличествоЗабито = 0 И Итого = 0 Тогда Продолжить; КонецЕсли;
			График.УстановитьЗначение(График.УстановитьТочку(ФорматЧГ(Детали.Период)), Серия, Детали.КоличествоЗабито, Детали.Чемпионат);
			Итого	= Итого + Детали.КоличествоЗабито;
		КонецЦикла;
	Иначе
		Для Каждого Детали Из Данные Цикл
			Значение	= ?(ТипГрафика=0, Детали.КоличествоПропущено, Детали.КоличествоЗабито);
			Если Значение = 0 И Итого = 0 Тогда Продолжить; КонецЕсли;
			Точка			= График.УстановитьТочку(ФорматЧГ(Детали.Период));
			График.УстановитьЗначение(Точка, Серия, Значение, Детали.Чемпионат);
			Итого	= Итого + Значение;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция Цвет(Тим)
	Возврат Тим.Цвет.Получить();
КонецФункции

&НаКлиенте
Процедура ТипГрафикаПриИзменении(Элемент)
	ГрафикОбновить();
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если НЕ ЗначениеЗаполнено(Тим) И Данные.Количество() = 0 Тогда
		ТимУстановить();
		ГрафикОбновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ТимУстановить()
	МояКоманда = СерверныйФункции.МояКомандаПолучить();
	Если НЕ КомандыЛиги.НайтиПоЗначению(МояКоманда) = Неопределено Тогда
		Тим	= МояКоманда;
	ИначеЕсли КомандыЛиги.Количество() > 0 Тогда
		Тим	= КомандыЛиги.Получить(0);
	КонецЕсли;
КонецПроцедуры
