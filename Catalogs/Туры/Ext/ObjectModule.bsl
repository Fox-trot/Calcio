
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если ДатаНачала > ДатаОкончания Тогда
		Отказ = Истина;
	ИначеЕсли ДатаНачала < Владелец.ДатаНачала Тогда
		Отказ = Истина;
	ИначеЕсли ДатаНачала > Владелец.ДатаОкончания Тогда
		Отказ = Истина;
	ИначеЕсли ДатаОкончания < Владелец.ДатаНачала Тогда
		Отказ = Истина;
	ИначеЕсли ДатаОкончания > Владелец.ДатаОкончания Тогда
		Отказ = Истина;
	//ИначеЕсли ОлимпийскаяСистема Тогда
	//	//
	//Иначе
	//	Запрос = Новый Запрос("ВЫБРАТЬ
	//	                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Команды.Команда) КАК Количество
	//	                      |ИЗ
	//	                      |	Справочник.Чемпионаты.Команды КАК Команды
	//	                      |ГДЕ
	//	                      |	Команды.Ссылка = &Владелец");
	//	Запрос.УстановитьПараметр("Владелец", Владелец);
	//	Выборка = Запрос.Выполнить().Выбрать();
	//	Если Выборка.Следующий() И Выборка.Количество * 2 - 2 < Код Тогда
	//		Отказ = Истина;
	//	КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Чемпионаты") Тогда
		Владелец			= ДанныеЗаполнения;
		ОлимпийскаяСистема	= ДанныеЗаполнения.Владелец.ОлимпийскаяСистема;
		
		ТурПоследний = ТурПоследний();
		Если ТурПоследний.Код = 0 Тогда
			Код	= 1;
		Иначе
			Если ОлимпийскаяСистема Тогда
				УстановитьНовыйКод(ТурПоследний.Код + 1);
				Наименование	= НаименованиеПолучить(ТурПоследний.Финал);
			ИначеЕсли ТурПоследний.Код < Владелец.Команды.Количество() * 2 - 2 Тогда
				УстановитьНовыйКод(ТурПоследний.Код + 1);
				Наименование	= НаименованиеПолучить();
				ДатаНачала		= ДатаНачала(ТурПоследний.ДатаОкончания);
				ДатаОкончания	= ДатаНачала + Сутки();
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Туры") Тогда
		ОбработкаЗаполнения(ДанныеЗаполнения.Владелец, ТекстЗаполнения, Ложь);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		Если ЗначениеЗаполнено(Владелец) Тогда
			ОлимпийскаяСистема	= Владелец.Владелец.ОлимпийскаяСистема;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция ДатаНачала(Знач Дата)
	Дата	= Дата + Сутки();
	Пока ДеньНедели(Дата) <> 6 Цикл
		Дата	= Дата + Сутки();
	КонецЦикла;
	Возврат Дата;
КонецФункции

Процедура ПриКопировании(ОбъектКопирования)
	Код				= КодНовыйПолучить();
	Наименование	= "";
	Комментарий		= "";
	ДатаНачала		= Дата(1,1,1);
	ДатаОкончания	= Дата(1,1,1);
	
	Заполнить(ОбъектКопирования.Владелец);
КонецПроцедуры

Процедура ПриУстановкеНовогоКода(СтандартнаяОбработка, Префикс)
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Новый Структура("Код", Префикс));
КонецПроцедуры

Функция КодНовыйПолучить() Экспорт
	Если НЕ ЗначениеЗаполнено(Владелец) Тогда
		Владелец = СерверныйФункции.ЧемпионатЛигиПоследний(Владелец.Владелец);
	КонецЕсли;
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЕСТЬNULL(МАКСИМУМ(Туры.Код), 0) КАК Код
	                      |ИЗ
	                      |	Справочник.Туры КАК Туры
	                      |ГДЕ
	                      |	Туры.Владелец = &Чемпионат
	                      |	И Туры.ПометкаУдаления = ЛОЖЬ");
	Запрос.УстановитьПараметр("Чемпионат",						Владелец);
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат ?(Выборка.Следующий(), Выборка.Код + 1, 1);
КонецФункции

Функция НаименованиеПолучить(Знач Финал=Неопределено) Экспорт
	Если НЕ ОлимпийскаяСистема Тогда
		Возврат Строка(Макс(1, Код)) + "-й тур";
	КонецЕсли;
	
	Ответ = "Финал";
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЕСТЬNULL(МАКСИМУМ(Туры.Код), -1) КАК Код,
	                      |	МАКСИМУМ(ЧемпионатыКоманды.Количество) КАК Количество
	                      |ИЗ
	                      |	(ВЫБРАТЬ
	                      |		ЧемпионатыКоманды.Ссылка КАК Ссылка,
	                      |		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЧемпионатыКоманды.Команда) КАК Количество
	                      |	ИЗ
	                      |		Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |	ГДЕ
	                      |		ЧемпионатыКоманды.Ссылка = &Чемпионат
	                      |	
	                      |	СГРУППИРОВАТЬ ПО
	                      |		ЧемпионатыКоманды.Ссылка) КАК ЧемпионатыКоманды
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |		ПО ЧемпионатыКоманды.Ссылка = Туры.Владелец
	                      |			И (Туры.ОлимпийскаяСистема = ИСТИНА)
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	0,
	                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЧемпионатыКоманды.Команда)
	                      |ИЗ
	                      |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |ГДЕ
	                      |	ЧемпионатыКоманды.Ссылка = &Чемпионат
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Код УБЫВ");
	Запрос.УстановитьПараметр("Чемпионат",			Владелец);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()
	И НЕ (Выборка.Код = 0 И Выборка.Количество = 2)
	Тогда
		Номер = Выборка.Количество / Pow(2, Выборка.Код + 1);
		Если Номер = 4 Тогда
			Ответ = "Полуфиналы";
		ИначеЕсли Номер > 4 Тогда
			Ответ = СтрШаблон("1/%1 финала", Номер);
		КонецЕсли;
	КонецЕсли;
	Возврат Ответ;
КонецФункции

Функция ТурПоследний()
	Ответ = Новый Структура("Код,ДатаНачала,ДатаОкончания,Финал", 0, Дата(1,1,1), Дата(1,1,1));
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Туры.Код КАК Код,
	                      |	Туры.ДатаНачала КАК ДатаНачала,
	                      |	Туры.ДатаОкончания КАК ДатаОкончания,
	                      |	Туры.Ссылка КАК Финал
	                      |ИЗ
	                      |	Справочник.Туры КАК Туры
	                      |ГДЕ
	                      |	Туры.Владелец = &Владелец
	                      |	И Туры.ПометкаУдаления = ЛОЖЬ
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ДатаОкончания УБЫВ,
	                      |	Код УБЫВ");
	Запрос.УстановитьПараметр("Владелец", Владелец);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Ответ, Выборка);
	КонецЕсли;
	Возврат Ответ;
КонецФункции

Процедура ДатыУстановить(Объект=Неопределено) Экспорт
	Если Объект = Неопределено Тогда Объект = ЭтотОбъект; КонецЕсли;
	Если Объект.Ссылка.Пустая() Тогда Возврат; КонецЕсли;
	Запрос	= Новый Запрос("ВЫБРАТЬ
	      	               |	Туры.ОлимпийскаяСистема КАК ОлимпийскаяСистема,
	      	               |	МИНИМУМ(Матч.Период) КАК ДатаНачала,
	      	               |	МАКСИМУМ(Матч.Период) КАК ДатаОкончания
	      	               |ИЗ
	      	               |	РегистрНакопления.ТурнирнаяТаблица КАК Матч
	      	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	      	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	      	               |			ПО Туры.Владелец = ЧемпионатыКоманды.Ссылка
	      	               |		ПО Матч.Тур = Туры.Ссылка
	      	               |ГДЕ
	      	               |	Матч.Тур = &Тур
	      	               |	И ТИПЗНАЧЕНИЯ(Матч.Регистратор) = ТИП(Документ.Матч)
	      	               |
	      	               |СГРУППИРОВАТЬ ПО
	      	               |	Туры.ОлимпийскаяСистема
	      	               |
	      	               |ИМЕЮЩИЕ
	      	               |	МАКСИМУМ(ЧемпионатыКоманды.НомерСтроки) >= КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Матч.Регистратор) * ВЫБОР
	      	               |		КОГДА Туры.ОлимпийскаяСистема = ИСТИНА
	      	               |			ТОГДА 1
	      	               |		ИНАЧЕ 2
	      	               |	КОНЕЦ");
	Запрос.УстановитьПараметр("Тур",			Объект.Ссылка);
	Выборка	= Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()
	И (Объект.ДатаНачала <> Выборка.ДатаНачала Или Объект.ДатаОкончания <> Выборка.ДатаОкончания)
	Тогда
		ОбщегоНазначения.УстановитьЗначение(Объект.ДатаНачала, Выборка.ДатаНачала);
		ОбщегоНазначения.УстановитьЗначение(Объект.ДатаОкончания, Выборка.ДатаОкончания);
	КонецЕсли;
КонецПроцедуры
