
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Команда", Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура МатчиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПоказатьЗначение(, Элемент.ТекущиеДанные.Матч);
КонецПроцедуры

&НаСервере
Процедура ПараметрыУстановить()
	Матчи.Параметры.УстановитьЗначениеПараметра("Ссылка", Объект.Ссылка);
	ТекущийСостав.Параметры.УстановитьЗначениеПараметра("Ссылка", Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Владелец	= СерверныйФункции.Футбол();
		//Изображение	= ИзображениеДефолтПолучить();
	Иначе
		ПараметрыУстановить();

		Если Объект.Ссылка.Изображение.Получить() = Неопределено Тогда
			//Изображение	= ИзображениеДефолтПолучить();
		Иначе
			Изображение	= ПолучитьНавигационнуюСсылку(Объект.Ссылка, "Изображение");
		КонецЕсли;
		
		Если ЕстьИстория() Тогда
			Элементы.Владелец.ТолькоПросмотр	= Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ИзображениеДефолтПолучить()
	Возврат СерверныйФункции.ИзображениеДефолтПолучить();
КонецФункции

&НаСервере
Функция ЕстьИстория()
	Возврат СерверныйФункции.ЕстьИстория(Объект.Ссылка);
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Объект.Ссылка.Пустая() Тогда
		Элементы.Группа1.ТекущаяСтраница = Элементы.ОсновнаяИнформация;
	Иначе
		Если ТекущийСоставПустой() Тогда
			Элементы.Группа1.ТекущаяСтраница = Элементы.ГруппаТекущийСостав;
		Иначе
			Элементы.Группа1.ТекущаяСтраница = Элементы.ГруппаМатчи;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ТекущийСоставПустой()
	Запрос = Новый Запрос(ТекущийСостав.ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Возврат Запрос.Выполнить().Пустой();
КонецФункции

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПараметрыУстановить();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ТипЗнч(Параметр) = Тип("СправочникСсылка.Команды")
	И Параметр = Объект.Ссылка
	Тогда
		Прочитать();
		Элементы.ТекущийСостав.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ИсключитьНаСервере(Ссылка)
	Ответ = Ложь;
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Игроки") Тогда
		Ссылка.ПолучитьОбъект().УстановитьПометкуУдаления(НЕ Ссылка.ПометкаУдаления);
		Ответ = Истина;
	КонецЕсли;
	Возврат Ответ;
КонецФункции

&НаКлиенте
Процедура Исключить(Команда)
	Если Элементы.ТекущийСостав.ТекущиеДанные = Неопределено Тогда
		//
	ИначеЕсли ИсключитьНаСервере(Элементы.ТекущийСостав.ТекущиеДанные.Игрок) Тогда
		Элементы.ТекущийСостав.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СезонНаСервере()
	Сезон.Очистить();
	Чемпионат = СерверныйФункции.ЧемпионатПолучитьПоследнее(Объект.Ссылка);
	Если ЗначениеЗаполнено(Чемпионат) Тогда
		МестоВЧемпионате = СерверныйФункции.МестоВЧемпионате(Объект.Ссылка, Чемпионат);
		Если МестоВЧемпионате <> 0 Тогда
			нСтрока = Сезон.Добавить();
			нСтрока.Ключ		= "Место";
			нСтрока.Значение	= МестоВЧемпионате;
		КонецЕсли;
	КонецЕсли;
	Стат	= СерверныйФункции.СтатистикаИгр(Объект.Ссылка, Чемпионат);
	Для Каждого ТекЭлемент Из Стат Цикл
		ЗаполнитьЗначенияСвойств(Сезон.Добавить(), ТекЭлемент);
	КонецЦикла;
	Возврат ?(ЗначениеЗаполнено(Чемпионат), Чемпионат.ПолноеНаименование(), "");
КонецФункции

&НаКлиенте
Процедура СезонОбновить(Команда=Неопределено)
	Если Объект.Ссылка.Пустая() Тогда Возврат; КонецЕсли;

	Слово = СезонНаСервере();
	Если ПустаяСтрока(Слово) Тогда
		Элементы.ГруппаСезон.Заголовок = "Сезон";
	Иначе
		Элементы.ГруппаСезон.Заголовок = "Сезон (" + Слово + ")";
		Предыдущие5Обновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура Предыдущие5Обновить()
	ЭлементыУдалить();
	Запрос	= Новый Запрос("ВЫБРАТЬ
	      	               |	ТурнирнаяТаблица.Период КАК Период,
	      	               |	ТурнирнаяТаблица.КоличествоОчков КАК КоличествоОчков
	      	               |ИЗ
	      	               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
						   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
						   |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
						   |ГДЕ
						   |	ТурнирнаяТаблица.Команда = &Команда
						   |	И ТИПЗНАЧЕНИЯ(ТурнирнаяТаблица.Регистратор) = ТИП(Документ.Матч)
						   |	И Туры.Владелец = &Чемпионат
	      	               |
	      	               |УПОРЯДОЧИТЬ ПО
	      	               |	Период");
	Запрос.УстановитьПараметр("Команда",	Объект.Ссылка);
	Запрос.УстановитьПараметр("Чемпионат",	Чемпионат);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ИграУстановить2(Элементы.ГруппаПредыдущие5, Выборка);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ИграУстановить2(Родитель, Выборка)
	Элемент = Элементы.Добавить("_" + Лев(Новый УникальныйИдентификатор, 8), Тип("ДекорацияФормы"), Родитель);
	Если Выборка.КоличествоОчков = 0 Тогда
		Элемент.Заголовок	= "L";
		Элемент.ЦветТекста	= ЦветаСтиля.ЦветОтрицательногоЧисла;
	ИначеЕсли Выборка.КоличествоОчков = 1 Тогда
		Элемент.Заголовок	= "D";
		Элемент.ЦветТекста	= ЦветаСтиля.ЦветТекстаПоля;
		//Элемент.ЦветФона	= ЦветаСтиля.ЦветРамки;
	Иначе
		Элемент.Заголовок	= "W";
		Элемент.ЦветТекста	= ЦветаСтиля.ЦветАкцента;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЭлементыУдалить2(Викимз)
	Пока Викимз.Количество() > 0 Цикл
		Для Каждого Элемент Из Викимз Цикл
			Элементы.Удалить(Элемент);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЭлементыУдалить()
	ЭлементыУдалить2(Элементы.ГруппаПредыдущие5.ПодчиненныеЭлементы);
КонецПроцедуры

&НаКлиенте
Процедура Группа1ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница.Имя = "ГруппаСезон" И Сезон.Количество() = 0 Тогда
		СезонОбновить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТекущийСоставВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Элемент.ТекущиеДанные.Игрок);
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзображение(Команда)
	Если СтрСравнить(Команда.Имя, "ВыбратьИзображение") = 0 Тогда
		НачатьПомещениеФайлаНаСервер(Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект));
	ИначеЕсли СтрСравнить(Команда.Имя, "УдалитьИзображение") = 0 Тогда
		Изображение = ИзображениеДефолтПолучить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайла(Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) = Тип("ОписаниеПомещенногоФайла") Тогда
		Если ОбщегоНазначения.РасширениеФайлаВерно(Результат.СсылкаНаФайл.Расширение) Тогда
			Изображение = Результат.Адрес;
		Иначе
			ОбщегоНазначения.СообщитьОбОшибке("Данные тип файла не поддерживается");
		КонецЕсли;
	ИначеЕсли ТипЗнч(Результат) = Тип("Строка") И НЕ ПустаяСтрока(Результат) Тогда
		Изображение			= ПоместитьВоВременноеХранилище(Новый Картинка(Результат), УникальныйИдентификатор);
		Модифицированность	= Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервереИзображение(Объект, Адрес="", Отказ=Ложь) Экспорт
	Если Отказ Тогда
		//
	ИначеЕсли ЭтоАдресВременногоХранилища(Адрес) Тогда
		тИзображение = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(Адрес));
		Если Объект.Изображение.Получить() <> тИзображение.Получить() Тогда
			Объект.Изображение = тИзображение;
		КонецЕсли;
	ИначеЕсли ПустаяСтрока(Адрес) И ЗначениеЗаполнено(Объект.Изображение.Получить()) Тогда
		Объект.Изображение = NULL;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Модифицированность Тогда
		ПередЗаписьюНаСервереИзображение(ТекущийОбъект, Изображение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТекущийСоставПередУдалением(Элемент, Отказ)
	Отказ = Истина;

	Если ИсключитьНаСервере(Элементы.ТекущийСостав.ТекущиеДанные.Игрок) Тогда
		Элементы.ТекущийСостав.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзображениеПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	Если ЭтоУРЛ(ПараметрыПеретаскивания.Значение) Тогда
		НачатьКопированиеФайла(Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект), ПараметрыПеретаскивания.Значение, КаталогВременныхФайлов() + ИмяФайла(ПараметрыПеретаскивания.Значение));
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("СсылкаНаФайл") Тогда
		Изображение			= ПоместитьВоВременноеХранилище(Новый Картинка(ПараметрыПеретаскивания.Значение.Файл.ПолноеИмя), УникальныйИдентификатор);
		Модифицированность	= Истина;
		СтандартнаяОбработка= Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Уволить(Команда)
	Если Элементы.ТекущийСостав.ТекущиеДанные = Неопределено Тогда
		//
	ИначеЕсли УволитьНаСервере(Элементы.ТекущийСостав.ТекущиеДанные.Игрок) Тогда
		Элементы.ТекущийСостав.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция УволитьНаСервере(Ссылка)
	Ответ = Ложь;
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Игроки") Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	СрезПоследних.Период КАК Период,
		                      |	СрезПоследних.Команда КАК Команда
		                      |ИЗ
		                      |	РегистрСведений.ПеремещенияИгроков.СрезПоследних(, Игрок = &Игрок) КАК СрезПоследних");
		Запрос.УстановитьПараметр("Игрок",			Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() И Выборка.Команда = Объект.Ссылка Тогда
			Запись = РегистрыСведений.ПеремещенияИгроков.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись, Новый Структура("Период,Игрок", КонецМесяца(ДобавитьМесяц(Выборка.Период, 4)), Ссылка));
			Если Запись.ПроверитьЗаполнение() Тогда
				Попытка
					Запись.Записать();
					Ответ = Истина;
				Исключение
					ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат Ответ;
КонецФункции
