
&НаКлиенте
Процедура ФотоПолучить() Экспорт
	ТекущиеДанные	= Элементы.ТекущийСостав.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ТекущийИгрок = Неопределено;
	ИначеЕсли ТекущийИгрок = ТекущиеДанные.Игрок Тогда
		Если Кеш.НайтиПоЗначению(ТекущийИгрок) = Неопределено Тогда
			ФотоПолучитьНаСервере();
		КонецЕсли;
	Иначе
		ТекущийИгрок = ТекущиеДанные.Игрок;
		ФотоПолучитьНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ФотоПолучитьНаСервере()
	Элемент	= Кеш.НайтиПоЗначению(ТекущийИгрок);
	Если Элемент = Неопределено Тогда
		ИЗО	= СерверныйФункции.ИзображениеПолучить(ТекущийИгрок);
		Кеш.Добавить(ТекущийИгрок, ИЗО);
	Иначе
		ИЗО	= Элемент.Представление;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТекущийСоставПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ФотоПолучить", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ДомаПриИзменении(Элемент)
	ПараметрыУстановить();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Команда", Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура МатчиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	НаКлиенте.Показать(Элемент.ТекущиеДанные.Матч, СтандартнаяОбработка);
КонецПроцедуры

&НаСервере
Процедура ПараметрыУстановить(Все=Ложь)
	Матчи.Параметры.УстановитьЗначениеПараметра("Ссылка",	Объект.Ссылка);
	Матчи.Параметры.УстановитьЗначениеПараметра("Дома",		Дома);
	Матчи.Параметры.УстановитьЗначениеПараметра("Лига",		Лига);
	Если Все Тогда
		ТекущийСостав.Параметры.УстановитьЗначениеПараметра("Ссылка", Объект.Ссылка);
		ТекущийСоставОбновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЦветКоманды(ТекущийОбъект)
	Возврат ТекущийОбъект.Цвет.Получить();
КонецФункции

&НаСервереБезКонтекста
Функция ИзображениеПолучить(Ссылка)
	Возврат СерверныйФункции.ИзображениеПолучить(Ссылка);
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Владелец	= СерверныйФункции.Футбол();
	Иначе

		Изображение	= ИзображениеПолучить(Объект.Ссылка);
		
		Если ЕстьИстория() Тогда
			Элементы.Владелец.ТолькоПросмотр	= Истина;
		КонецЕсли;
		
		Цвет		= ЦветКоманды(Объект.Ссылка);
		Элементы.Цвет.ЦветФона	= ?(ЗначениеЗаполнено(Цвет), Цвет, ЦветПустой());
	КонецЕсли;
	СерверныйФункции.СерииЗаполнить(Показатели);
	Показатели.Точки.Очистить();
	Показатели.Точки.Добавить("Всего");
КонецПроцедуры

&НаСервере
Функция ИзображениеДефолтПолучить()
	Возврат СерверныйФункции.ИзображениеДефолтПолучить();
КонецФункции

&НаСервере
Функция ЕстьИстория()
	Возврат СерверныйФункции.ЕстьИстория(Объект.Ссылка);
КонецФункции

&НаКлиенте
Процедура ПослеОткрытия() Экспорт
	Страна.ЗагрузитьЗначения(Страны(Объект.Ссылка));
	ЛигиЗагрузить();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПараметрыУстановить(Истина);
	ДоступностьВидимостьУстановить();
	Если Объект.Ссылка.Пустая() Тогда
		//
	Иначе
		Если НЕ ЗначениеЗаполнено(Объект.Город) Тогда
			//
		ИначеЕсли НЕ ПустаяСтрока(ТекущаяСтраницаИмя) Тогда
			Элемент	= Элементы.Найти(ТекущаяСтраницаИмя);
			Если Элемент = Неопределено Тогда
				ТекущаяСтраницаИмя	= "";
			ИначеЕсли Элемент.Доступность Тогда
				ПодключитьОбработчикОжидания("ФотоПолучить", 0.1, Истина);
				Элементы.Страницы.ТекущаяСтраница = Элемент;
				СтраницыПриСменеСтраницы(Элементы.Страницы, Элемент);
			КонецЕсли;
		КонецЕсли;
		ПодключитьОбработчикОжидания("ПослеОткрытия", 0.1, Истина);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЛигиЗагрузить()
	Лиги.ЗагрузитьЗначения(Лиги(Объект.Ссылка));
	Элементы.Лига.СписокВыбора.ЗагрузитьЗначения(Лиги.ВыгрузитьЗначения());
КонецПроцедуры

&НаСервереБезКонтекста
Функция Лиги(Ссылка)
	Возврат СерверныйФункции.ЛигиКоманды(Ссылка);
КонецФункции

&НаСервереБезКонтекста
Функция Страны(Данные)
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	Лига.Страна КАК Страна
	                      |ИЗ
	                      |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
	                      |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Страны КАК Страны
	                      |				ПО Лига.Страна = Страны.Ссылка
	                      |			ПО Чемпионаты.Владелец = Лига.Ссылка
	                      |		ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
	                      |ГДЕ
	                      |	ЧемпионатыКоманды.Команда = &Данные");
	Если ТипЗнч(Данные) = Тип("СправочникСсылка.Города") Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	Страны.Ссылка КАК Страна
		               |ИЗ
		               |	Справочник.Страны КАК Страны
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
		               |		ПО Страны.Ссылка = Города.Владелец
		               |ГДЕ
		               |	Страны.ПометкаУдаления = ЛОЖЬ
		               |	И Города.Ссылка = &Данные";
	КонецЕсли;
	Запрос.УстановитьПараметр("Данные",			Данные);
	Ризалт = Запрос.Выполнить();
	Если Ризалт.Пустой() Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	Страны.Ссылка КАК Страна
		               |ИЗ
		               |	Справочник.Страны КАК Страны
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
		               |		ПО Страны.Ссылка = Города.Владелец
		               |ГДЕ
		               |	Страны.ПометкаУдаления = ЛОЖЬ
		               |	И Города.ПометкаУдаления = ЛОЖЬ";
		Ризалт = Запрос.Выполнить();
	КонецЕсли;
	Возврат Ризалт.Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

&НаСервере
Функция ТекущийСоставПустой()
	Запрос = Новый Запрос(ТекущийСостав.ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Возврат Запрос.Выполнить().Пустой();
КонецФункции

&НаСервере
Процедура ТекущийСоставОбновить()
	Запрос = Новый Запрос(ТекущийСостав.ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	ТекущийСоставКоличество	= Запрос.Выполнить().Выбрать().Количество();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПараметрыУстановить(Истина);
КонецПроцедуры

&НаСервере
Процедура ДоступностьВидимостьУстановить(Перечитать=Ложь)
	Если Объект.Ссылка.Пустая() Тогда
		Элементы.ГруппаТекущийСостав.Доступность	= Ложь;
	Иначе
		Элементы.ГруппаТекущийСостав.Доступность	= Истина;
		Если Перечитать Тогда
			Прочитать();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ТипЗнч(Параметр) = Тип("СправочникСсылка.Города") Тогда
		Страна.ЗагрузитьЗначения(Страны(Параметр));
		Если НЕ ЗначениеЗаполнено(Объект.Город)
		//И ЗначениеЗаполнено(Страна.НайтиПоЗначению(Параметр))
		Тогда
			Объект.Город	= Параметр;
		КонецЕсли;
	ИначеЕсли ТипЗнч(Параметр) = Тип("СправочникСсылка.Команды")
	И Параметр = Объект.Ссылка
	Тогда
		ЛигиЗагрузить();
		Элементы.ТекущийСостав.Обновить();
		ТекущийСоставОбновить();
		
		ДоступностьВидимостьУстановить(Истина);
		
	ИначеЕсли ТипЗнч(Параметр) = Тип("СправочникСсылка.Игроки") Тогда
		КешОчистить(Параметр);
		Если ТекущийИгрок = Параметр Тогда
			ФотоПолучить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ИсключитьНаСервере(Ссылка, ПометкаУдаления=Неопределено)
	Ответ = Ложь;
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Игроки") Тогда
		Ссылка.ПолучитьОбъект().УстановитьПометкуУдаления(?(ПометкаУдаления = Неопределено, НЕ Ссылка.ПометкаУдаления, ПометкаУдаления));
		Ответ = Истина;
	ИначеЕсли ТипЗнч(Ссылка) = Тип("Массив") Тогда
		ЧтоНужно	= Неопределено;
		Для Каждого Игрок Из Ссылка Цикл
			Если ЧтоНужно = Неопределено Тогда
				ЧтоНужно	= НЕ Игрок.ПометкаУдаления;
			КонецЕсли;
			Ответ = Макс(Ответ, ИсключитьНаСервере(Игрок, ЧтоНужно));
		КонецЦикла;
	КонецЕсли;
	Возврат Ответ;
КонецФункции

&НаКлиенте
Процедура Исключить(Команда)
	Если Элементы.ТекущийСостав.ВыделенныеСтроки.Количество() > 1 Тогда
		Результат = Новый Массив;
		Для Каждого Проверка Из Элементы.ТекущийСостав.ВыделенныеСтроки Цикл
			ДанныеПроверки = Элементы.ТекущийСостав.ДанныеСтроки(Проверка);
			Если ДанныеПроверки <> Неопределено Тогда
				Результат.Добавить(ДанныеПроверки.Игрок);
			КонецЕсли;
		КонецЦикла;
		Если ИсключитьНаСервере(Результат) Тогда
			Элементы.ТекущийСостав.Обновить();
		КонецЕсли;
	ИначеЕсли Элементы.ТекущийСостав.ТекущиеДанные = Неопределено Тогда
		//
	ИначеЕсли ИсключитьНаСервере(Элементы.ТекущийСостав.ТекущиеДанные.Игрок) Тогда
		Элементы.ТекущийСостав.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СезонНаСервере()
	Сезон.Очистить();
	Если Чемпионат.Пустая() Тогда
		Чемпионат = СерверныйФункции.ЧемпионатПолучитьПоследнее(Объект.Ссылка);
		Если Чемпионат.Пустая() Тогда
			Чемпионат = СерверныйФункции.ЧемпионатПолучитьПоследнее(Объект.Ссылка, Истина);
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(Чемпионат) Тогда
		Если НЕ СерверныйФункции.ЛигаОлимпийскаяСистема(Чемпионат.Владелец) Тогда
			МестоВЧемпионате = СерверныйФункции.МестоВЧемпионате(Объект.Ссылка, Чемпионат);
			Если МестоВЧемпионате <> 0 Тогда
				нСтрока = Сезон.Добавить();
				нСтрока.Ключ		= "Место";
				нСтрока.Значение	= МестоВЧемпионате;
			КонецЕсли;
		КонецЕсли;
		Стат	= СерверныйФункции.СтатистикаИгр(Объект.Ссылка, Чемпионат);
		Для Каждого ТекЭлемент Из Стат Цикл
			ЗаполнитьЗначенияСвойств(Сезон.Добавить(), ТекЭлемент);
			Если СтрСравнить(ТекЭлемент.Ключ, "Проигрышей") = 0 Тогда
				ПоказательУстановить(ТекЭлемент.Значение);
			ИначеЕсли СтрСравнить(ТекЭлемент.Ключ, "Ничьих") = 0 Тогда
				ПоказательУстановить(ТекЭлемент.Значение, 1);
			ИначеЕсли СтрСравнить(ТекЭлемент.Ключ, "Побед") = 0 Тогда
				ПоказательУстановить(ТекЭлемент.Значение, 2);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат ?(ЗначениеЗаполнено(Чемпионат), Чемпионат.ПолноеНаименование(), "");
КонецФункции

&НаСервере
Процедура ПоказательУстановить(Значение, Серия=0)
	Показатели.УстановитьЗначение(Показатели.Точки.Получить(0), Серия, Значение);
КонецПроцедуры

&НаКлиенте
Процедура СезонОбновить(Команда=Неопределено)
	Если Объект.Ссылка.Пустая() Тогда Возврат; КонецЕсли;

	Слово = СезонНаСервере();
	Если ПустаяСтрока(Слово) Тогда
		Элементы.СтраницаСезон.Заголовок = "Сезон";
	Иначе
		Элементы.СтраницаСезон.Заголовок = "Сезон (" + Слово + ")";
		Предыдущие5Обновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура Предыдущие5Обновить()
	ЭлементыУдалить();
	Запрос	= Новый Запрос("ВЫБРАТЬ
	      	               |	ТурнирнаяТаблица.Регистратор КАК Матч,
	      	               |	ТурнирнаяТаблица.Период КАК Период,
	      	               |	ТурнирнаяТаблица.КоличествоОчков КАК КоличествоОчков
	      	               |ИЗ
	      	               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	      	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	      	               |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	      	               |ГДЕ
	      	               |	ТурнирнаяТаблица.Команда = &Команда
	      	               |	И ТурнирнаяТаблица.Регистратор ССЫЛКА Документ.Матч
	      	               |	И Туры.Владелец = &Чемпионат
	      	               |
	      	               |УПОРЯДОЧИТЬ ПО
	      	               |	Период");
	Запрос.УстановитьПараметр("Команда",	Объект.Ссылка);
	Запрос.УстановитьПараметр("Чемпионат",	Чемпионат);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ИграУстановить2(Выборка);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура МатчОткрыть(Элемент)
	НаКлиенте.ПоНавигационнойСсылкеПерейти(Элемент.Подсказка);
КонецПроцедуры

&НаСервере
Процедура ИграУстановить2(Выборка)
	Элемент = Элементы.Добавить("_" + Лев(Новый УникальныйИдентификатор, 8), Тип("ДекорацияФормы"), Элементы.ГруппаПредыдущие5);
	Элемент.Гиперссылка						= Истина;
	Элемент.Подсказка						= ПолучитьНавигационнуюСсылку(Выборка.Матч);
	Элемент.РасширеннаяПодсказка.Заголовок	= Выборка.Матч;
	Элемент.УстановитьДействие("Нажатие", "МатчОткрыть");
	Если Выборка.КоличествоОчков = 0 Тогда
		Элемент.Заголовок	= "L";
		Элемент.ЦветТекста	= ЦветаСтиля.ЦветОтрицательногоЧисла;
	ИначеЕсли Выборка.КоличествоОчков = 1 Тогда
		Элемент.Заголовок	= "D";
	Иначе
		Элемент.Заголовок	= "W";
		Элемент.ЦветТекста	= ЦветаСтиля.ЦветАкцента;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЭлементыУдалить2(Викимз)
	Пока Викимз.Количество() > 0 Цикл
		Для Каждого Элемент Из Викимз Цикл
			Элементы.Удалить(Элемент);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЭлементыУдалить()
	ЭлементыУдалить2(Элементы.ГруппаПредыдущие5.ПодчиненныеЭлементы);
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ТекущаяСтраницаИмя	= ТекущаяСтраница.Имя;
	
	Если Элементы.СтраницаСезон = ТекущаяСтраница Тогда
		Если Сезон.Количество() = 0 Тогда
			СезонОбновить();
		КонецЕсли;
	ИначеЕсли Элементы.ГруппаБиоритмы = ТекущаяСтраница Тогда
		Если График2.КоличествоСерий = 0
		И ТекущийСоставКоличество > 0
		Тогда
			График2Обновить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТекущийСоставВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	НаКлиенте.Показать(Элемент.ТекущиеДанные.Игрок, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Функция ПараметрыДиалога()
	Возврат НаКлиенте.ПараметрыДиалога();
КонецФункции

&НаКлиенте
Процедура ВыбратьИзображение(Команда)
	Если СтрСравнить(Команда.Имя, "ВыбратьИзображение") = 0 Тогда
		НачатьПомещениеФайлаНаСервер(Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект),,,, ПараметрыДиалога());
	ИначеЕсли СтрСравнить(Команда.Имя, "УдалитьИзображение") = 0 Тогда
		Изображение = ИзображениеДефолтПолучить();
		Модифицированность	= Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайла(Результат, ДополнительныеПараметры=Неопределено) Экспорт
	Если ТипЗнч(Результат) = Тип("ОписаниеПомещенногоФайла") Тогда
		Если ОбщегоНазначения.РасширениеФайлаВерно(Результат.СсылкаНаФайл.Расширение)
		И Результат.СсылкаНаФайл.Размер() >= ОбщегоНазначения.РазмерКартинкиМинимальный()
		Тогда
			Изображение = Результат.Адрес;
			Модифицированность	= Истина;
		Иначе
			ОбщегоНазначения.СообщитьОбОшибке("Данный тип файла не поддерживается");
		КонецЕсли;
	ИначеЕсли ТипЗнч(Результат) = Тип("Строка") И НЕ ПустаяСтрока(Результат) Тогда
		Данные				= Новый ДвоичныеДанные(Результат);
		Если Данные.Размер() >= ОбщегоНазначения.РазмерКартинкиМинимальный() Тогда
			Изображение			= ПоместитьВоВременноеХранилище(Данные, УникальныйИдентификатор);
			Модифицированность	= Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзображениеПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	Если ЭтоУРЛ(ПараметрыПеретаскивания.Значение) Тогда
		ИмяФайлаПриемника	= СерверныйФункции.КаталогаФайлов() + ИмяФайла(ПараметрыПеретаскивания.Значение);
		НачатьКопированиеФайла(Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект), ПараметрыПеретаскивания.Значение, ИмяФайлаПриемника);
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("СсылкаНаФайл") Тогда
		Если ОбщегоНазначения.РасширениеФайлаВерно(ПараметрыПеретаскивания.Значение.Расширение) Тогда
			Изображение			= ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПараметрыПеретаскивания.Значение.Файл.ПолноеИмя), УникальныйИдентификатор);
			Модифицированность	= Истина;
			СтандартнаяОбработка= Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Модифицированность Тогда
		СерверныйФункции.ПередЗаписьюНаСервереИзображение(ТекущийОбъект, Изображение, Отказ);
		Если Отказ Тогда
			//
		ИначеЕсли ЗначениеЗаполнено(Цвет) Тогда
			ТекущийОбъект.Цвет = Новый ХранилищеЗначения(Цвет);
		ИначеЕсли ЗначениеЗаполнено(ЦветКоманды(ТекущийОбъект)) Тогда
			ТекущийОбъект.Цвет = NULL;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТекущийСоставПередУдалением(Элемент, Отказ)
	Отказ = Истина;

	Если ИсключитьНаСервере(Элементы.ТекущийСостав.ТекущиеДанные.Игрок) Тогда
		Элементы.ТекущийСостав.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Уволить(Команда)
	Если Элементы.ТекущийСостав.ТекущиеДанные = Неопределено Тогда
		//
	ИначеЕсли УволитьНаСервере(Элементы.ТекущийСостав.ТекущиеДанные.Игрок) Тогда
		Элементы.ТекущийСостав.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция УволитьНаСервере(Ссылка)
	Ответ = Ложь;
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Игроки") Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	СрезПоследних.Период КАК Период,
		                      |	СрезПоследних.Команда КАК Команда
		                      |ИЗ
		                      |	РегистрСведений.ПеремещенияИгроков.СрезПоследних(, Игрок = &Игрок) КАК СрезПоследних");
		Запрос.УстановитьПараметр("Игрок",			Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() И Выборка.Команда = Объект.Ссылка Тогда
			Запись = РегистрыСведений.ПеремещенияИгроков.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись, Новый Структура("Период,Игрок", КонецМесяца(ДобавитьМесяц(Выборка.Период, 4)), Ссылка));
			Если Запись.ПроверитьЗаполнение() Тогда
				Попытка
					Запись.Записать();
					Ответ = Истина;
				Исключение
					ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		Если Ссылка.ПометкаУдаления Тогда
			СправочникОбъект	= Ссылка.ПолучитьОбъект();
			СправочникОбъект.УстановитьПометкуУдаления(Ложь);
		КонецЕсли;
	КонецЕсли;
	Возврат Ответ;
КонецФункции

&НаКлиенте
Процедура ЧемпионатПриИзменении(Элемент)
	СезонОбновить();
КонецПроцедуры

&НаКлиенте
Процедура ГородНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Объект.Город) Тогда
		Страна.ЗагрузитьЗначения(Страны(Объект.Город));
	Иначе
		Объект.Город = ГородНайти(Объект.Наименование);
		Если ЗначениеЗаполнено(Объект.Город) Тогда
			СтандартнаяОбработка = Ложь;
		Иначе
			Страна.ЗагрузитьЗначения(Страны(Объект.Ссылка));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ГородНайти(Наименование)
	Возврат СерверныйФункции.ГородНайти(Наименование);
КонецФункции

&НаСервере
Процедура График2ОбновитьНаСервере()
	График2.Очистить();
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	РАЗНОСТЬДАТ(Игроки.ДатаРождения, &Дата, ДЕНЬ) КАК Количество,
	                      |	Игроки.Ссылка КАК Игрок,
	                      |	ЕСТЬNULL(Перемещения.Амплуа.Ссылка, Игроки.Амплуа) КАК Амплуа
	                      |ИЗ
	                      |	РегистрСведений.ПеремещенияИгроков.СрезПоследних(
	                      |			&Дата,
	                      |			Игрок.ПометкаУдаления = ЛОЖЬ
	                      |				И ГОД(Игрок.ДатаРождения) >= 1900) КАК Перемещения
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Игроки КАК Игроки
	                      |		ПО Перемещения.Игрок = Игроки.Ссылка
	                      |ГДЕ
	                      |	Перемещения.Команда = &Команда
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ЕСТЬNULL(Перемещения.Амплуа.Код, Игроки.Амплуа.Код),
	                      |	Игрок
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("Дата",			ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("Команда",		Объект.Ссылка);
	Если ЗначениеЗаполнено(Амплуа) Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	РАЗНОСТЬДАТ(Игроки.ДатаРождения, &Дата, ДЕНЬ) КАК Количество,
		               |	Игроки.Ссылка КАК Игрок
		               |ИЗ
		               |	РегистрСведений.ПеремещенияИгроков.СрезПоследних(
		               |			&Дата,
		               |			Игрок.ПометкаУдаления = ЛОЖЬ
		               |				И ГОД(Игрок.ДатаРождения) >= 1900) КАК Перемещения
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Игроки КАК Игроки
		               |		ПО Перемещения.Игрок = Игроки.Ссылка
		               |ГДЕ
		               |	Перемещения.Команда = &Команда
		               |	И ЕСТЬNULL(Перемещения.Амплуа.Ссылка, Игроки.Амплуа) = &Амплуа
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Игрок
		               |АВТОУПОРЯДОЧИВАНИЕ";
		Запрос.УстановитьПараметр("Амплуа",			Амплуа);
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Для Фаза = 1 По 3 Цикл
			Серия	= График2.УстановитьСерию(ФЭИ(Фаза));
			Серия.Цвет	= Цвет(Фаза);
			График2.УстановитьЗначение(График2.УстановитьТочку(Выборка.Игрок), Серия, ФазаРасчитать2(Выборка.Количество, Фаза), Выборка.Игрок);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ФЭИ(Элемент)
	Возврат Биоритмы.ФЭИ(Элемент);
КонецФункции

&НаСервере
Функция Цвет(Фаза)
	Возврат Биоритмы.Цвет(Фаза);
КонецФункции

&НаСервере
Функция ФазаРасчитать2(Количество, Фаза)
	Возврат Биоритмы.ФазаРасчитать2(Количество, Фаза);
КонецФункции

&НаКлиенте
Процедура График2Обновить(Команда=Неопределено)
	График2ОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура АмплуаПриИзменении(Элемент)
	График2Обновить();
КонецПроцедуры

&НаСервере
Функция НаименованиеСтрана()
	Возврат РеквизитФормыВЗначение("Объект").НаименованиеСтрана();
КонецФункции

&НаКлиенте
Процедура КомментарийДополнить(Команда)
	Слово	= НаименованиеСтрана();
	Если НЕ ПустаяСтрока(Слово) И СтрНайти(Объект.Комментарий, Слово) = 0 Тогда
		Объект.Комментарий	= ?(ПустаяСтрока(Объект.Комментарий), Слово, Слово + Символы.ВК + Объект.Комментарий);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЦветПриИзменении(Элемент)
	Элемент.ЦветФона	= Цвет;
КонецПроцедуры

&НаКлиенте
Процедура ЦветОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка	= Ложь;
	Модифицированность		= Истина;
	Цвет					= Неопределено;
	Элементы.Цвет.ЦветФона	= ЦветПустой();
КонецПроцедуры

&НаСервере
Функция ЦветПустой()
	Возврат ЦветаСтиля.ЦветФонаПоля;
КонецФункции

&НаКлиенте
Процедура ЧемпионатНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	СтандартнаяОбработка	= Ложь;
	
	ОткрытьФорму("Справочник.Чемпионаты.ФормаВыбора", Новый Структура("Отбор", Новый Структура("Ссылка", ЧемпионатыПолучить())), Элемент);
КонецПроцедуры

&НаСервере
Функция ЧемпионатыПолучить()
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЧемпионатыКоманды.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |ГДЕ
	                      |	ЧемпионатыКоманды.Команда = &Команда");
	Запрос.УстановитьПараметр("Команда",		Объект.Ссылка);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

&НаКлиенте
Процедура КешОчистить(Игрок=Неопределено)
	Если ЗначениеЗаполнено(Игрок) Тогда
		Элемент = Кеш.НайтиПоЗначению(Игрок);
		Если Элемент <> Неопределено Тогда
			Кеш.Удалить(Элемент);
		КонецЕсли;
	Иначе
		Кеш.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЛигаПриИзменении(Элемент)
	ПараметрыУстановить();
КонецПроцедуры

&НаКлиенте
Процедура ИЗОНажатие(Элемент, СтандартнаяОбработка)
	Показать(ТекущийИгрок, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Показать(ТекущиеДанные, СтандартнаяОбработка=Ложь)
	НаКлиенте.Показать(ТекущиеДанные, СтандартнаяОбработка);
КонецПроцедуры
