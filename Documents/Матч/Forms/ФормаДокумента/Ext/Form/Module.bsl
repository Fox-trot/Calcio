
&НаКлиенте
Процедура КомандыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Объект.Команды.Количество() > 1;
КонецПроцедуры

&НаСервере
Функция КомандыПолучить()
	Возврат Объект.Команды.Выгрузить().ВыгрузитьКолонку("Команда");
КонецФункции

&НаСервере
Процедура СоставыЗаполнитьНаСервере()
	Объект.СоставыКоманд.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", 		НачалоДня(Объект.Дата));
	мКоманды = Новый Массив;
	Если Объект.Команды.Количество() > 0 Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	МатчСоставыКоманд.Игрок КАК Игрок,
		               |	Матч.Дата КАК Дата
		               |ПОМЕСТИТЬ ВТ
		               |ИЗ
		               |	Документ.Матч.СоставыКоманд КАК МатчСоставыКоманд
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч КАК Матч
		               |		ПО МатчСоставыКоманд.Ссылка = Матч.Ссылка
		               |ГДЕ
		               |	Матч.Дата < &Дата
		               |	И Матч.Проведен = ИСТИНА
		               |	И МатчСоставыКоманд.Команда = &Команда
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	МатчСоставыКоманд.Игрок,
		               |	Матч.Дата
		               |
		               |ИМЕЮЩИЕ
		               |	МАКСИМУМ(Матч.Дата) = Матч.Дата
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	Перемещения.Игрок КАК Игрок,
		               |	Перемещения.Команда КАК Команда,
		               |	ЕСТЬNULL(Роли.Ссылка, Перемещения.Амплуа) КАК Амплуа
		               |ИЗ
		               |	РегистрСведений.ПеремещенияИгроков.СрезПоследних(
		               |			&Дата,
		               |			Команда = &Команда
		               |				И Игрок В
		               |					(ВЫБРАТЬ
		               |						ВТ.Игрок
		               |					ИЗ
		               |						ВТ)) КАК Перемещения
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Игроки КАК Игроки
		               |		ПО Перемещения.Игрок = Игроки.Ссылка
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Амплуа КАК Роли
		               |		ПО Перемещения.Амплуа = Роли.Ссылка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Амплуа,
		               |	Игрок
		               |АВТОУПОРЯДОЧИВАНИЕ";
		Для Каждого ТекКоманда Из Объект.Команды Цикл
			Запрос.УстановитьПараметр("Команда",	ТекКоманда.Команда);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Количество() = 0 Тогда
				мКоманды.Добавить(ТекКоманда.Команда);
			Иначе
				СоставыКомандДобавить(Выборка);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если мКоманды.Количество() > 0 Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	Перемещения.Игрок КАК Игрок,
		               |	Перемещения.Команда КАК Команда,
		               |	Перемещения.Амплуа КАК Амплуа,
		               |	Перемещения.Команда = &Гости КАК Порядок
		               |ИЗ
		               |	РегистрСведений.ПеремещенияИгроков.СрезПоследних(
		               |			&Дата,
		               |			Игрок.ПометкаУдаления = ЛОЖЬ
		               |				И Команда В (&Команды)) КАК Перемещения
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Игроки КАК Игроки
		               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Амплуа КАК Роли
		               |			ПО Игроки.Амплуа = Роли.Ссылка
		               |		ПО Перемещения.Игрок = Игроки.Ссылка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Порядок,
		               |	Амплуа,
		               |	Игрок
		               |АВТОУПОРЯДОЧИВАНИЕ";
		Запрос.УстановитьПараметр("Команды",	мКоманды);
		Запрос.УстановитьПараметр("Гости",	?(Объект.Команды.Количество()=2, Объект.Команды.Получить(1).Команда, Неопределено));
		СоставыКомандДобавить(Запрос.Выполнить().Выбрать());
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СоставыКомандДобавить(Выборка)
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Объект.СоставыКоманд.Добавить(), Выборка);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ГрафикОбновитьНаСервере(Команда, Колонка=0)
	Запрос = Новый Запрос("ВЫБРАТЬ
		               |	РАЗНОСТЬДАТ(Игроки.ДатаРождения, &Дата, ДЕНЬ) КАК Количество,
		               |	Игроки.ДатаРождения КАК ДатаРождения
		               |ИЗ
		               |	Документ.Матч.СоставыКоманд КАК Матч
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПеремещенияИгроков.СрезПоследних(&Дата, ГОД(Игрок.ДатаРождения) > 1900) КАК Перемещения
		               |		ПО Матч.Игрок = Перемещения.Игрок
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Игроки КАК Игроки
		               |		ПО Матч.Игрок = Игроки.Ссылка
		               |ГДЕ
		               |	Матч.Ссылка = &Ссылка
		               |	И Матч.Команда = &Команда");
	Запрос.УстановитьПараметр("Дата",	Объект.Дата);
	Запрос.УстановитьПараметр("Ссылка",		Объект.Ссылка);
	Запрос.УстановитьПараметр("Команда",	Команда);
	Если ЗначениеЗаполнено(Амплуа) Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	РАЗНОСТЬДАТ(Игроки.ДатаРождения, &Дата, ДЕНЬ) КАК Количество,
		               |	Игроки.ДатаРождения КАК ДатаРождения
		               |ИЗ
		               |	Документ.Матч.СоставыКоманд КАК Матч
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПеремещенияИгроков.СрезПоследних(&Дата, ГОД(Игрок.ДатаРождения) > 1900) КАК Перемещения
		               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Амплуа КАК Роли
		               |			ПО Перемещения.Амплуа = Роли.Ссылка
		               |		ПО Матч.Игрок = Перемещения.Игрок
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Игроки КАК Игроки
		               |		ПО Матч.Игрок = Игроки.Ссылка
		               |ГДЕ
		               |	Матч.Ссылка = &Ссылка
		               |	И Матч.Команда = &Команда
		               |	И ЕСТЬNULL(Роли.Ссылка, Игроки.Амплуа) = &Амплуа";
		Запрос.УстановитьПараметр("Амплуа",		Амплуа);
	КонецЕсли;
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(Колонка);
КонецФункции

//СерияЦвет()
//Возврат ЦветаСтиля.ЦветОтрицательногоЧисла

&НаКлиенте
Процедура АнонсОбновить(Команда=Неопределено)
	Если КомандыДве() Тогда
		АнонсОбновитьНаСервере();
	КонецЕсли;
КонецПроцедуры
	
&НаКлиенте
Процедура ГрафикОбновить(Команда=Неопределено)
	График.Очистить();
	Если КомандыДве() Тогда
		Если ЗначениеЗаполнено(Амплуа) Тогда
			Для Каждого тКоманда Из Объект.Команды Цикл
				мСтроки = ГрафикОбновитьНаСервере(тКоманда.Команда);
				Для тФаза = 1 По 3 Цикл
					Серия	= График.УстановитьСерию(Биоритмы.ФЭИ(тФаза));
					//Серия.Цвет = СерияЦвет(тФаза);
					
					КолИтого	= 0;
					ВесИтого	= 0;
					Для Каждого тЭлемент Из мСтроки Цикл
						КолИтого	= КолИтого + 1;
						ВесИтого	= ВесИтого + Биоритмы.ФазаРасчитать2(тЭлемент, тФаза);
					КонецЦикла;
					Если КолИтого > 0 Тогда
						Точка	= График.УстановитьТочку(тКоманда.Команда);
						График.УстановитьЗначение(Точка, Серия, Окр(ВесИтого / КолИтого, 1));
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		Иначе
			Для Каждого тКоманда Из Объект.Команды Цикл
				мСтроки = ГрафикОбновитьНаСервере(тКоманда.Команда, "ДатаРождения");
				Для тФаза = 1 По 3 Цикл
					Серия	= График.УстановитьСерию(Биоритмы.ФЭИ(тФаза));
					
					КолИтого	= 0;
					ВесИтого	= 0;
					Для Каждого тЭлемент Из мСтроки Цикл
						КолИтого	= КолИтого + 1;
						ВесИтого	= ВесИтого + Биоритмы.ФазаРасчитать1(тЭлемент, тФаза, Объект.Дата);
					КонецЦикла;
					Если КолИтого > 0 Тогда
						Точка	= График.УстановитьТочку(тКоманда.Команда);
						График.УстановитьЗначение(Точка, Серия, Окр(ВесИтого / КолИтого, 1));
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоставыЗаполнить(Команда=Неопределено)
	Если КомандыДве() Тогда
		СоставыЗаполнитьНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция КомандыДве()
	Если Объект.Команды.Количество() = 2 Тогда Возврат Истина; КонецЕсли;
	ОбщегоНазначения.СообщитьОбОшибке("Сначала заполните таблицу ""Команды"" ",, Объект.Ссылка);
	Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаКоманды;
	Возврат Ложь;
КонецФункции

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если Элементы.Сравнение = ТекущаяСтраница Тогда
		//Если График.КоличествоСерий < 3 И Объект.СоставыКоманд.Количество() > 0 Тогда
		//	ГрафикОбновить();
		//	РаздельноПриИзменении();
		//КонецЕсли;
		
	ИначеЕсли Элементы.Анонс = ТекущаяСтраница Тогда
		//Если Элементы.ТабДок.автом = ФиксацияВТаблице.Нет Тогда
			АнонсОбновитьНаСервере();
		//КонецЕсли;
	ИначеЕсли Элементы.ПредыдущиеМатчи = ТекущаяСтраница Тогда
		ОтборДобавить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОтборДобавить()
	Хозяева = Хозяева();
	Если ЗначениеЗаполнено(Хозяева) Тогда
	//Условное = ПрошлыеМатчи.УсловноеОформление.Элементы.Добавить()
	//ОформлениеЭлемент = Условное.Оформление.Элементы.Найти("ЦветФона");
	//ОформлениеЭлемент.Значение = ЦветаСтиля.ЦветФонаГруппировкиОтчета1;
	//ОформлениеЭлемент.Использование	= Истина;
	
	//ЭлементОтбора = Условное.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Команда");
	Для Каждого ЭлементОтбора Из ПрошлыеМатчи.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы Цикл
		Для Каждого Элемент Из ЭлементОтбора.Отбор.Элементы Цикл
			Если ТипЗнч(Элемент.ПравоеЗначение) = Тип("СправочникСсылка.Команды") Тогда
				Элемент.ПравоеЗначение = Хозяева;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция Хозяева()
	Возврат ?(Объект.Команды.Количество() = 0, Неопределено, Объект.Команды.Получить(0).Команда);
КонецФункции

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	Если Объект.Команды.Количество() = 2 Тогда
		СерверныйФункции.МатчОбработкаПроверкиЗаполнения(Объект, Отказ);
		Если Отказ Тогда
			Твит = Новый СообщениеПользователю;
			Твит.КлючДанных	= Объект.Ссылка;
			Твит.Поле		= "СоставыКоманд.Команда";
			Твит.Текст		= "ТЧ ""СоставыКоманд"" заполнена неверно";
			Твит.Сообщить();
		КонецЕсли;
		
	Иначе
		Отказ	= Истина;
		
		Твит = Новый СообщениеПользователю;
		Твит.КлючДанных	= Объект.Ссылка;
		Твит.Поле		= "Команды";
		Твит.Текст		= "ТЧ ""Команды"" заполнена неверно";
		Твит.Сообщить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СтадионПриИзмененииНаСервере()
	Команда = Объект.Стадион.Владелец;
	Если ЗначениеЗаполнено(Команда) И ТипЗнч(Команда) = Тип("СправочникСсылка.Команды") Тогда
		мКоманды = Объект.Команды.НайтиСтроки(Новый Структура("Команда", Команда));
		Если мКоманды.Количество() = 0 Тогда
			Если Объект.Команды.Количество() = 0 Тогда
				тСтрока = Объект.Команды.Добавить();
			Иначе
				тСтрока = Объект.Команды.Получить(0);
			КонецЕсли;
			тСтрока.Команда = Команда;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтадионПриИзменении(Элемент)
	СтадионПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СоставыКомандИгрокПриИзменении(Элемент)
	Элементы.СоставыКоманд.ТекущиеДанные.Команда = СерверныйФункции.Команда(Элементы.СоставыКоманд.ТекущиеДанные.Игрок, Объект.Дата);
КонецПроцедуры

&НаКлиенте
Процедура АмплуаПриИзменении(Элемент)
	ГрафикОбновить();
КонецПроцедуры

&НаКлиенте
Процедура РаздельноПриИзменении(Элемент=Неопределено)
	График.ТипДиаграммы	= ?(Раздельно, ТипДиаграммы.ГистограммаОбъемная, ТипДиаграммы.ГистограммаСНакоплениемОбъемная);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		ПрошлыеВстречи.Параметры.УстановитьЗначениеПараметра("Команды", Новый Массив);
		ПрошлыеМатчи.Параметры.УстановитьЗначениеПараметра("Команды", Новый Массив);
	Иначе
		мКоманды = КомандыПолучить();
		ПрошлыеВстречи.Параметры.УстановитьЗначениеПараметра("Команды", мКоманды);
		ПрошлыеМатчи.Параметры.УстановитьЗначениеПараметра("Команды", мКоманды);
	КонецЕсли;
	ПрошлыеВстречи.Параметры.УстановитьЗначениеПараметра("Дата", НачалоДня(Объект.Дата) - 1);
	ПрошлыеМатчи.Параметры.УстановитьЗначениеПараметра("ДатаН", НачалоМесяца(ДобавитьМесяц(Объект.Дата, -2)));
	ПрошлыеМатчи.Параметры.УстановитьЗначениеПараметра("ДатаК", НачалоДня(Объект.Дата) - 1);
	
	ЭтоДерби="ДЕРБИ";
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОтборДобавить();

	ГрафикОбновить();
	РаздельноПриИзменении();
	ВидимостьУстановить();
КонецПроцедуры

&НаСервере
Процедура ВидимостьУстановить()
	//Элементы.Анонс.Видимость = (НЕ Объект.Ссылка.Пустая());
	Элементы.Сравнение.Доступность	= (Объект.СоставыКоманд.Количество() > 0);
	Элементы.ЭтоДерби.Видимость		= СерверныйФункции.ЭтоДерби(Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	мКоманды = КомандыПолучить();
	ПрошлыеВстречи.Параметры.УстановитьЗначениеПараметра("Команды", мКоманды);
	ПрошлыеВстречи.Параметры.УстановитьЗначениеПараметра("Дата", Объект.Дата);
	ПрошлыеМатчи.Параметры.УстановитьЗначениеПараметра("Команды", мКоманды);
	ПрошлыеМатчи.Параметры.УстановитьЗначениеПараметра("ДатаН", НачалоДня(ДобавитьМесяц(Объект.Дата, -12)));
	ПрошлыеМатчи.Параметры.УстановитьЗначениеПараметра("ДатаК", НачалоДня(Объект.Дата) - 1);
	
	ВидимостьУстановить();
КонецПроцедуры

&НаКлиенте
Процедура СоставыКомандПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если Элемент.ТекущиеДанные.Свойство("Команда")
	И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Команда)
	Тогда
		мСтроки = Объект.Команды.НайтиСтроки(Новый Структура("Команда", Элемент.ТекущиеДанные.Команда));
		Если мСтроки.Количество() = 0 Тогда
			Отказ = Истина;
			
			Сообщить("Игрок из другой команды");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура КомандыПриИзмененииНаСервере()
	Если Объект.СоставыКоманд.Количество() > 0 Тогда
		СписокШиндлера	= Новый Массив;
		мКоманды = Новый Массив;
		Для Каждого тСтрока Из Объект.Команды Цикл
			мКоманды.Добавить(тСтрока.Команда);
			Если тСтрока.НомерСтроки = 1 Тогда
				Объект.Стадион	= Стадион(тСтрока.Команда);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого тСтрока Из Объект.СоставыКоманд Цикл
			Если мКоманды.Найти(тСтрока.Команда) = Неопределено Тогда
				СписокШиндлера.Добавить(тСтрока);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого тСтрока Из СписокШиндлера Цикл
			Объект.СоставыКоманд.Удалить(тСтрока);
		КонецЦикла;
		
	Иначе
		Для Каждого тСтрока Из Объект.Команды Цикл
			Если тСтрока.НомерСтроки = 1 Тогда
				Объект.Стадион	= Стадион(тСтрока.Команда);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандыПриИзменении(Элемент)
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Если НЕ ПустаяСтрока(Объект.Стадион) Тогда
			Объект.Стадион = Неопределено;
		КонецЕсли;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.Тур) Тогда
		Объект.Тур		= СерверныйФункции.Тур(Элемент.ТекущиеДанные.Команда, Объект.Дата);
	КонецЕсли;
	
	КомандыПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПрошлыеВстречиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Элемент.ТекущиеДанные.Матч);
КонецПроцедуры

&НаСервере
Процедура АнонсОбновитьНаСервере()
	Сезон.Очистить();
	Чемпионат = Объект.Тур.Владелец;
	Если НЕ ЗначениеЗаполнено(Чемпионат) Тогда
		Чемпионат = СерверныйФункции.ЧемпионатПолучитьПоследнее(Объект.Команды.Выгрузить().ВыгрузитьКолонку("Команда"));
	КонецЕсли;
	//Если ЗначениеЗаполнено(Чемпионат) Тогда
		Для Каждого тСтрока Из Объект.Команды Цикл
			Стат = СерверныйФункции.СтатистикаИгр(тСтрока.Команда, Чемпионат, Объект.Дата);
			Для Каждого ТекЭлемент Из Стат Цикл
				нСтрока = Сезон.Добавить();
				ЗаполнитьЗначенияСвойств(нСтрока, ТекЭлемент);
				//нСтрока.Ключ	= СтрЗаменить(нСтрока.Ключ, "_", " ");
				нСтрока.Команда	= тСтрока.Команда;
			КонецЦикла;
		КонецЦикла;
	//КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция Стадион(Тим)
	Возврат СерверныйФункции.Стадион(Тим);
КонецФункции

&НаКлиенте
Процедура СтадионНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Объект.Команды.Количество() > 0 Тогда
		Стадионы = Стадион(Объект.Команды.Получить(0).Команда);
		Если Стадионы.Количество() = 1 Тогда
			Стадион = Стадионы.Получить(0);
			Если НЕ ЗначениеЗаполнено(Объект.Стадион) Тогда
				СтандартнаяОбработка	= Ложь;
				Модифицированность		= Истина;
				Объект.Стадион			= Стадион;
			КонецЕсли;
			Если Элемент.СписокВыбора.НайтиПоЗначению(Стадион) = Неопределено Тогда
				Элемент.СписокВыбора.Добавить(Стадион);
			КонецЕсли;
		ИначеЕсли Стадионы.Количество() > 0 Тогда
			Элемент.СписокВыбора.ЗагрузитьЗначения(Стадионы);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоставыКомандИгрокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Тимз = Новый Массив;
	Для Каждого ТекСтрока Из Объект.Команды Цикл
		Тимз.Добавить(ТекСтрока.Команда);
	КонецЦикла;
	Игроки.ЗагрузитьЗначения(ИгрокиПолучить(Тимз));
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИгрокиПолучить(Тимз)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Перемещения.Игрок КАК Игрок,
	                      |	Перемещения.Команда КАК Команда
	                      |ИЗ
	                      |	РегистрСведений.ПеремещенияИгроков.СрезПоследних КАК Перемещения
	                      |ГДЕ
	                      |	Перемещения.Команда В(&Команда)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Команда,
	                      |	Игрок
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("Команда",	Тимз);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции
