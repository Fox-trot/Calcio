
&НаКлиенте
Процедура КомандыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Объект.Команды.Количество() > 1;
КонецПроцедуры

&НаСервере
Функция КомандыПолучить()
	Возврат Объект.Команды.Выгрузить().ВыгрузитьКолонку("Команда");
КонецФункции

&НаСервере
Процедура СоставыЗаполнитьНаСервере()
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	Перемещения.Игрок КАК Игрок,
	                      |	Перемещения.Команда КАК Команда,
	                      |	Перемещения.Амплуа КАК Амплуа
	                      |ИЗ
	                      |	РегистрСведений.ПеремещенияИгроков.СрезПоследних(&Дата, Игрок.ПометкаУдаления = ЛОЖЬ) КАК Перемещения
	                      |ГДЕ
	                      |	Перемещения.Команда В(&Команды)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Команда,
	                      |	Амплуа,
	                      |	Игрок
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Если Объект.Команды.Количество() = 2 Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	Перемещения.Игрок КАК Игрок,
		               |	Перемещения.Команда КАК Команда,
		               |	Перемещения.Амплуа КАК Амплуа,
		               |	Перемещения.Команда = &Гости КАК Порядок
		               |ИЗ
		               |	РегистрСведений.ПеремещенияИгроков.СрезПоследних(&Дата, Игрок.ПометкаУдаления = ЛОЖЬ) КАК Перемещения
		               |ГДЕ
		               |	Перемещения.Команда В(&Команды)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Порядок,
		               |	Амплуа,
		               |	Игрок
		               |АВТОУПОРЯДОЧИВАНИЕ";
		Запрос.УстановитьПараметр("Гости", Объект.Команды.Получить(1).Команда);
	КонецЕсли;
	Запрос.УстановитьПараметр("Дата", 		Объект.Дата);
	Запрос.УстановитьПараметр("Команды",	КомандыПолучить());
	Объект.СоставыКоманд.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

&НаСервере
Процедура ГрафикОбновитьНаСервере()
	График.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата",	Объект.Дата);
	Если ЗначениеЗаполнено(Амплуа) Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	РАЗНОСТЬДАТ(Перемещения.Игрок.ДатаРождения, &Дата, ДЕНЬ) КАК Количество
		               |ИЗ
		               |	Документ.Матч.СоставыКоманд КАК Матч
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПеремещенияИгроков.СрезПоследних(&Дата, ГОД(Игрок.ДатаРождения) > 1900) КАК Перемещения
		               |		ПО Матч.Игрок = Перемещения.Игрок
		               |ГДЕ
		               |	Матч.Ссылка = &Ссылка
		               |	И Матч.Команда = &Команда
		               |	И Перемещения.Амплуа = &Амплуа";
		Запрос.УстановитьПараметр("Ссылка",	Объект.Ссылка);
		Запрос.УстановитьПараметр("Амплуа",	Амплуа);
		Для Каждого тКоманда Из Объект.Команды Цикл
			Запрос.УстановитьПараметр("Команда",	тКоманда.Команда);
			мСтроки = Запрос.Выполнить().Выгрузить();
			//Если мСтроки.Количество() = 0 Тогда
			//	Запрос.Текст = "ВЫБРАТЬ
			//	               |	РАЗНОСТЬДАТ(Перемещения.Игрок.ДатаРождения, &Дата, ДЕНЬ) КАК Количество
			//	               |ИЗ
			//	               |	РегистрСведений.ПеремещенияИгроков.СрезПоследних(&Дата, ГОД(Игрок.ДатаРождения) > 1900) КАК Перемещения
			//	               |ГДЕ
			//	               |	Перемещения.Команда = &Команда
			//	               |	И Перемещения.Амплуа = &Амплуа";
			//	мСтроки = Запрос.Выполнить().Выгрузить();
			//КонецЕсли;
			Для тФаза = 1 По 3 Цикл
				Серия	= График.УстановитьСерию(Биоритмы.ФЭИ(тФаза));
				
				КолИтого	= 0;
				ВесИтого	= 0;
				Для Каждого тЭлемент Из мСтроки Цикл
					КолИтого	= КолИтого + 1;
					ВесИтого	= ВесИтого + Биоритмы.ФазаРасчитать2(тЭлемент.Количество, тФаза);
				КонецЦикла;
				Если КолИтого > 0 Тогда
					Точка	= График.УстановитьТочку(тКоманда.Команда);
					График.УстановитьЗначение(Точка, Серия, Окр(ВесИтого / КолИтого, 1));
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
	Иначе
		Для Каждого тКоманда Из Объект.Команды Цикл
			мСтроки = Объект.СоставыКоманд.НайтиСтроки(Новый Структура("Команда", тКоманда.Команда));
			//Если мСтроки.Количество() = 0 Тогда
			//	Запрос.Текст = "ВЫБРАТЬ
			//	               |	Перемещения.Игрок КАК Игрок
			//	               |ИЗ
			//	               |	РегистрСведений.ПеремещенияИгроков.СрезПоследних(&Дата, ГОД(Игрок.ДатаРождения) > 1900) КАК Перемещения
			//	               |ГДЕ
			//	               |	Перемещения.Команда = &Команда";
			//	Запрос.УстановитьПараметр("Команда",	тКоманда.Команда);
			//	мСтроки = Запрос.Выполнить().Выгрузить();
			//КонецЕсли;
			Для тФаза = 1 По 3 Цикл
				Серия	= График.УстановитьСерию(Биоритмы.ФЭИ(тФаза));
				
				КолИтого	= 0;
				ВесИтого	= 0;
				Для Каждого тЭлемент Из мСтроки Цикл
					КолИтого	= КолИтого + 1;
					ВесИтого	= ВесИтого + Биоритмы.ФазаРасчитать1(тЭлемент.Игрок.ДатаРождения, тФаза, Объект.Дата);
				КонецЦикла;
				Если КолИтого > 0 Тогда
					Точка	= График.УстановитьТочку(тКоманда.Команда);
					График.УстановитьЗначение(Точка, Серия, Окр(ВесИтого / КолИтого, 1));
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГрафикОбновить(Команда)
	Если Объект.Команды.Количество() = 0 Тогда
		Сообщить("Сначала заполните таблицу ""Команды"" ");
		Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаКоманды;
	ИначеЕсли Команда.Имя = "ГрафикОбновить" Тогда
		ГрафикОбновитьНаСервере();
	ИначеЕсли Команда.Имя = "АнонсОбновить" Тогда
		АнонсОбновитьНаСервере();
	ИначеЕсли Команда.Имя = "СоставыЗаполнить" Тогда
		СоставыЗаполнитьНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если Элементы.Сравнение = ТекущаяСтраница Тогда
		Если График.КоличествоСерий < 3
		И Объект.СоставыКоманд.Количество() > 0
		Тогда
			ГрафикОбновитьНаСервере();
			РаздельноПриИзменении();
		КонецЕсли;
		
	ИначеЕсли Элементы.Анонс = ТекущаяСтраница Тогда
		//Если Элементы.ТабДок.автом = ФиксацияВТаблице.Нет Тогда
			АнонсОбновитьНаСервере();
		//КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	Если Объект.Команды.Количество() = 2 Тогда
		СерверныйФункции.МатчОбработкаПроверкиЗаполнения(Объект, Отказ);
		Если Отказ Тогда
			Твит = Новый СообщениеПользователю;
			Твит.КлючДанных	= Объект.Ссылка;
			Твит.Поле		= "СоставыКоманд.Команда";
			Твит.Текст		= "ТЧ ""СоставыКоманд"" заполнена неверно";
			Твит.Сообщить();
		КонецЕсли;
		
	Иначе
		Отказ	= Истина;
		
		Твит = Новый СообщениеПользователю;
		Твит.КлючДанных	= Объект.Ссылка;
		Твит.Поле		= "Команды";
		Твит.Текст		= "ТЧ ""Команды"" заполнена неверно";
		Твит.Сообщить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СтадионПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.Стадион.Владелец) Тогда
		мКоманды = Объект.Команды.НайтиСтроки(Новый Структура("Команда", Объект.Стадион.Владелец));
		Если мКоманды.Количество() = 0 Тогда
			Если Объект.Команды.Количество() = 0 Тогда
				тСтрока = Объект.Команды.Добавить();
			Иначе
				тСтрока = Объект.Команды.Получить(0);
			КонецЕсли;
			тСтрока.Команда = Объект.Стадион.Владелец;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтадионПриИзменении(Элемент)
	СтадионПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СоставыКомандИгрокПриИзменении(Элемент)
	Элементы.СоставыКоманд.ТекущиеДанные.Команда = СерверныйФункции.Команда(Элементы.СоставыКоманд.ТекущиеДанные.Игрок, Объект.Дата);
КонецПроцедуры

&НаКлиенте
Процедура АмплуаПриИзменении(Элемент)
	ГрафикОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РаздельноПриИзменении(Элемент=Неопределено)
	График.ТипДиаграммы	= ?(Раздельно, ТипДиаграммы.ГистограммаОбъемная, ТипДиаграммы.ГистограммаСНакоплениемОбъемная);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		ПрошлыеВстречи.Параметры.УстановитьЗначениеПараметра("Команды", Новый Массив);
		ПрошлыеМатчи.Параметры.УстановитьЗначениеПараметра("Команды", Новый Массив);
	Иначе
		мКоманды = КомандыПолучить();
		ПрошлыеВстречи.Параметры.УстановитьЗначениеПараметра("Команды", мКоманды);
		ПрошлыеМатчи.Параметры.УстановитьЗначениеПараметра("Команды", мКоманды);
	КонецЕсли;
	ПрошлыеВстречи.Параметры.УстановитьЗначениеПараметра("Дата", Объект.Дата);
	ПрошлыеМатчи.Параметры.УстановитьЗначениеПараметра("Дата", НачалоМесяца(ДобавитьМесяц(Объект.Дата, -2)));
	
	ЭтоДерби="ДЕРБИ";
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ГрафикОбновитьНаСервере();
	ВидимостьУстановить();
КонецПроцедуры

&НаСервере
Процедура ВидимостьУстановить()
	//Элементы.Анонс.Видимость = (НЕ Объект.Ссылка.Пустая());
	Элементы.Сравнение.Доступность	= (Объект.СоставыКоманд.Количество() > 0);
	Элементы.ЭтоДерби.Видимость		= СерверныйФункции.ЭтоДерби(Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	мКоманды = КомандыПолучить();
	ПрошлыеВстречи.Параметры.УстановитьЗначениеПараметра("Команды", мКоманды);
	ПрошлыеВстречи.Параметры.УстановитьЗначениеПараметра("Дата", Объект.Дата);
	ПрошлыеМатчи.Параметры.УстановитьЗначениеПараметра("Команды", мКоманды);
	ПрошлыеМатчи.Параметры.УстановитьЗначениеПараметра("Дата", НачалоДня(ДобавитьМесяц(Объект.Дата, -12)));
	
	ВидимостьУстановить();
КонецПроцедуры

&НаКлиенте
Процедура СоставыКомандПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если Элемент.ТекущиеДанные.Свойство("Команда")
	И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Команда)
	Тогда
		мСтроки = Объект.Команды.НайтиСтроки(Новый Структура("Команда", Элемент.ТекущиеДанные.Команда));
		Если мСтроки.Количество() = 0 Тогда
			Отказ = Истина;
			
			Сообщить("Игрок из другой команды");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура КомандыПриИзмененииНаСервере()
	Если Объект.СоставыКоманд.Количество() > 0 Тогда
		СписокШиндлера	= Новый Массив;
		мКоманды = Новый Массив;
		Для Каждого тСтрока Из Объект.Команды Цикл
			мКоманды.Добавить(тСтрока.Команда);
			Если тСтрока.НомерСтроки = 1 Тогда
				Объект.Стадион	= СерверныйФункции.Стадион(тСтрока.Команда);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого тСтрока Из Объект.СоставыКоманд Цикл
			Если мКоманды.Найти(тСтрока.Команда) = Неопределено Тогда
				СписокШиндлера.Добавить(тСтрока);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого тЭлемент Из СписокШиндлера Цикл
			Объект.СоставыКоманд.Удалить(тЭлемент);
		КонецЦикла;
		
	Иначе
		Для Каждого тСтрока Из Объект.Команды Цикл
			Если тСтрока.НомерСтроки = 1 Тогда
				Объект.Стадион	= СерверныйФункции.Стадион(тСтрока.Команда);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандыПриИзменении(Элемент)
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Если НЕ ПустаяСтрока(Объект.Стадион) Тогда
			Объект.Стадион = Неопределено;
		КонецЕсли;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.Тур) Тогда
		Объект.Тур		= СерверныйФункции.Тур(Элемент.ТекущиеДанные.Команда, Объект.Дата);
	КонецЕсли;
	
	КомандыПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПрошлыеВстречиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьЗначение(Элемент.ТекущиеДанные.Матч);
КонецПроцедуры

&НаСервере
Процедура АнонсОбновитьНаСервере()
	Сезон.Очистить();
	ТекЧемпионат = СерверныйФункции.ЧемпионатПолучитьПоследнее(Объект.Команды.Выгрузить().ВыгрузитьКолонку("Команда"));
	//Если ЗначениеЗаполнено(ТекЧемпионат) Тогда
		Для Каждого тСтрока Из Объект.Команды Цикл
			Стат = СерверныйФункции.СтатистикаИгр(тСтрока.Команда, ТекЧемпионат);
			Для Каждого ТекЭлемент Из Стат Цикл
				нСтрока = Сезон.Добавить();
				ЗаполнитьЗначенияСвойств(нСтрока, ТекЭлемент);
				//нСтрока.Ключ	= СтрЗаменить(нСтрока.Ключ, "_", " ");
				нСтрока.Команда	= тСтрока.Команда;
			КонецЦикла;
		КонецЦикла;
	//КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция Стадион(Тим)
	Возврат СерверныйФункции.Стадион(Тим);
КонецФункции

&НаКлиенте
Процедура СтадионНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Объект.Команды.Количество() > 0 Тогда
		Команда = Стадион(Объект.Команды.Получить(0).Команда);
		Если ЗначениеЗаполнено(Команда) И Элемент.СписокВыбора.НайтиПоЗначению(Команда) = Неопределено Тогда
			Элемент.СписокВыбора.Добавить(Команда);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
