
&НаКлиенте
Процедура КомандыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = (Объект.Команды.Количество() > 1);
КонецПроцедуры

&НаКлиенте
Процедура КомандыПослеУдаления(Элемент)
	Элементы.Стадион.СписокВыбора.Очистить();
	ТЧОчистить();
КонецПроцедуры

&НаСервере
Процедура ТЧОчистить()
	ПредыдущиеВстречи.Очистить();
	ПредыдущиеМатчи.Очистить();
	Игроки.Очистить();
	Сезон.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура КомандыОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	ВидимостьДоступностьУстановить();
КонецПроцедуры

&НаСервере
Процедура СоставыЗаполнитьНаСервере()
	Если Объект.Команды.Количество() = 0 Тогда Возврат; КонецЕсли;
	
	Объект.СоставыКоманд.Очистить();
	Для Каждого ТекСтрока Из Объект.Команды Цикл
		СоставыКомандДобавить(СоставКоманды(ТекСтрока.Команда));
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция СоставКоманды(Команда)
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	СоставКоманды.Ссылка КАК Ссылка
	                      |ПОМЕСТИТЬ ВТ
	                      |ИЗ
	                      |	Документ.Матч.СоставыКоманд КАК СоставКоманды
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч КАК Матч
	                      |		ПО СоставКоманды.Ссылка = Матч.Ссылка
	                      |ГДЕ
	                      |	Матч.Дата МЕЖДУ &ДатаН И &ДатаК
	                      |	И Матч.Проведен = ИСТИНА
	                      |	И СоставКоманды.Команда = &Команда
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Матч.Дата УБЫВ
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	СоставКоманды.Игрок КАК Игрок,
	                      |	СоставКоманды.Команда КАК Команда,
	                      |	Игроки.Амплуа КАК Амплуа
	                      |ИЗ
	                      |	Документ.Матч.СоставыКоманд КАК СоставКоманды
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Игроки КАК Игроки
	                      |		ПО СоставКоманды.Игрок = Игроки.Ссылка
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ КАК ВТ
	                      |		ПО СоставКоманды.Ссылка = ВТ.Ссылка
	                      |ГДЕ
	                      |	СоставКоманды.Команда = &Команда
						  |	И Игроки.ПометкаУдаления = ЛОЖЬ
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Амплуа,
	                      |	Игрок
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("ДатаК", 		НачалоДня(Объект.Дата) - 1);
	Запрос.УстановитьПараметр("ДатаН", 		НачалоМесяца(ДобавитьМесяц(Объект.Дата, -6)));
	Запрос.УстановитьПараметр("Команда",	Команда);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() <= 10 Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	СоставКоманды.Игрок КАК Игрок,
		               |	СоставКоманды.Команда КАК Команда,
		               |	СоставКоманды.Амплуа КАК Амплуа
		               |ИЗ
		               |	РегистрСведений.ПеремещенияИгроков.СрезПоследних(&ДатаК, Игрок.ПометкаУдаления = ЛОЖЬ) КАК СоставКоманды
		               |ГДЕ
		               |	СоставКоманды.Команда = &Команда
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Амплуа,
		               |	Игрок
		               |АВТОУПОРЯДОЧИВАНИЕ";
		Выборка = Запрос.Выполнить().Выбрать();
	КонецЕсли;
	Возврат Выборка;
КонецФункции

&НаСервере
Процедура СоставыКомандДобавить(Выборка)
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Объект.СоставыКоманд.Добавить(), Выборка);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура АнонсОбновить(Команда=Неопределено)
	Если КомандыДве(Команда <> Неопределено) Тогда
		Если Элементы.ГруппаАнонс.Видимость Тогда
			АнонсОбновитьНаСервере();
		Иначе
			АнонсОбновитьНаСервере2();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция Чемпионат()
	Если НЕ ЗначениеЗаполнено(Чемпионат) Тогда
		Чемпионат	= СерверныйФункции.ЧемпионатНайти(Объект.Тур);
		Если НЕ ЗначениеЗаполнено(Чемпионат) Тогда
			Чемпионаты.ЗагрузитьЗначения(ЧемпионатыПолучить(Объект.Дата, КомандыПолучить()));
			Для Каждого Элемент Из Чемпионаты Цикл
				Чемпионат	= Элемент.Значение;
				Прервать;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Возврат Чемпионат;
КонецФункции

&НаСервере
Процедура АнонсОбновитьНаСервере()
	Хозяева		= Хозяева();
	Если ПустаяСтрока(ИзображениеХозяева) Тогда
		ИзображениеХозяева	= ИзображениеПолучить(Хозяева);
	КонецЕсли;
	Гости		= Гости();
	Если ПустаяСтрока(ИзображениеГости) Тогда
		ИзображениеГости	= ИзображениеПолучить(Гости);
	КонецЕсли;
	
	ИгрСНачалаСезона	= 0;
	Очки				= 0;
	Побед				= 0;
	Ничьих				= 0;
	Проигрышей			= 0;
	КоличествоГолов		= 0;
	Результативность	= 0;
	
	ИгрСНачалаСезонаГости	= 0;
	ОчкиГости				= 0;
	ПобедГости				= 0;
	НичьихГости				= 0;
	ПроигрышейГости			= 0;
	КоличествоГоловГости	= 0;
	РезультативностьГости	= 0;
	
	ПоследняяСерия			= 0;
	ПоследняяСерияГостевая	= 0;
	
	Элементы.ИгрСНачалаСезона.МаксимальноеЗначение	= 0;
	Элементы.Очки.МаксимальноеЗначение				= 0;
	Элементы.Побед.МаксимальноеЗначение				= 0;
	Элементы.Ничьих.МаксимальноеЗначение			= 0;
	Элементы.Проигрышей.МаксимальноеЗначение		= 0;
	Элементы.КоличествоГолов.МаксимальноеЗначение	= 0;
	Элементы.Результативность.МаксимальноеЗначение	= 0;
	Элементы.ПоследняяСерия.МаксимальноеЗначение	= 0;
	
	Тимз				= КомандыПолучить();
	Чемпионат			= Чемпионат();
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТурнирнаяТаблица.Команда КАК Команда,
	                      |	ТурнирнаяТаблица.КоличествоОчков КАК КоличествоОчков,
	                      |	СУММА(1) КАК Количество,
	                      |	СУММА(ТурнирнаяТаблица.КоличествоГолов) КАК КоличествоГолов,
	                      |	ТурнирнаяТаблица.Команда = &Хозяева КАК Хозяева
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч КАК Матч
	                      |		ПО ТурнирнаяТаблица.Регистратор = Матч.Ссылка
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |ГДЕ
	                      |	ТурнирнаяТаблица.Период МЕЖДУ &ДатаН И &ДатаК
	                      |	И ТурнирнаяТаблица.Команда В(&Команды)
	                      |	И ТИПЗНАЧЕНИЯ(ТурнирнаяТаблица.Регистратор) = ТИП(Документ.Матч)
	                      |	И Туры.Владелец = &Чемпионат
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ТурнирнаяТаблица.КоличествоОчков,
	                      |	ТурнирнаяТаблица.Команда
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Хозяева УБЫВ");
	Если НЕ ЗначениеЗаполнено(Чемпионат) Тогда
		Запрос.Текст = СтрУдалить(Запрос.Текст, "И Туры.Владелец = &Чемпионат");
		Элементы.ДекорацияИгрСНачалаСезона.Заголовок	= "Игр за последний год";
	КонецЕсли;
	Запрос.УстановитьПараметр("Команды",	Тимз);
	Запрос.УстановитьПараметр("Хозяева",	Хозяева);
	Запрос.УстановитьПараметр("Чемпионат",	Чемпионат);
	Запрос.УстановитьПараметр("ДатаК",		НачалоДня(Объект.Дата) - 1);
	Запрос.УстановитьПараметр("ДатаН",		НачалоМесяца(ДобавитьМесяц(Объект.Дата, -9)));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Элементы.ИгрСНачалаСезона.МаксимальноеЗначение	= Элементы.ИгрСНачалаСезона.МаксимальноеЗначение + Выборка.Количество;
		Элементы.Очки.МаксимальноеЗначение				= Элементы.Очки.МаксимальноеЗначение + Выборка.Количество * Выборка.КоличествоОчков;
		Если Выборка.Хозяева Тогда
			ИгрСНачалаСезона		= ИгрСНачалаСезона + Выборка.Количество;
			Очки					= Очки + Выборка.Количество * Выборка.КоличествоОчков;
		Иначе
			ИгрСНачалаСезонаГости	= ИгрСНачалаСезонаГости + Выборка.Количество;
			ОчкиГости				= ОчкиГости + Выборка.Количество * Выборка.КоличествоОчков;
		КонецЕсли;
		Если Выборка.КоличествоОчков = 0 Тогда
			Элементы.Проигрышей.МаксимальноеЗначение		= Элементы.Проигрышей.МаксимальноеЗначение + Выборка.Количество;
			Если Выборка.Хозяева Тогда
				Проигрышей			= Проигрышей + Выборка.Количество;
			Иначе
				ПроигрышейГости		= ПроигрышейГости + Выборка.Количество;
			КонецЕсли;
		ИначеЕсли Выборка.КоличествоОчков = 1 Тогда
			Элементы.Ничьих.МаксимальноеЗначение			= Элементы.Ничьих.МаксимальноеЗначение + Выборка.Количество;
			Если Выборка.Хозяева Тогда
				Ничьих				= Ничьих + Выборка.Количество;
			Иначе
				НичьихГости			= НичьихГости + Выборка.Количество;
			КонецЕсли;
		Иначе
			Элементы.Побед.МаксимальноеЗначение				= Элементы.Побед.МаксимальноеЗначение + Выборка.Количество;
			Если Выборка.Хозяева Тогда
				Побед				= Побед + Выборка.Количество;
			Иначе
				ПобедГости			= ПобедГости + Выборка.Количество;
			КонецЕсли;
		КонецЕсли;
		
		Элементы.КоличествоГолов.МаксимальноеЗначение	= Выборка.КоличествоГолов + Элементы.КоличествоГолов.МаксимальноеЗначение;
		Если Выборка.Хозяева Тогда
			КоличествоГолов				= КоличествоГолов + Выборка.КоличествоГолов;
		Иначе
			КоличествоГоловГости		= КоличествоГоловГости + Выборка.КоличествоГолов;
		КонецЕсли;
	КонецЦикла;
	Элементы.Результативность.МаксимальноеЗначение	= ?(ИгрСНачалаСезона=0, 0, Окр(КоличествоГолов / ИгрСНачалаСезона, 1)) + ?(ИгрСНачалаСезонаГости=0, 0, Окр(КоличествоГоловГости / ИгрСНачалаСезонаГости, 1));
	Результативность		= ?(ИгрСНачалаСезона=0, 0, Окр(КоличествоГолов / ИгрСНачалаСезона, 1));
	РезультативностьГости	= ?(ИгрСНачалаСезонаГости=0, 0, Окр(КоличествоГоловГости / ИгрСНачалаСезонаГости, 1));
	
	Запрос.Текст	= "ВЫБРАТЬ
	            	  |	ТурнирнаяТаблица.Команда КАК Команда,
	            	  |	МАКСИМУМ(ТурнирнаяТаблица.Период) КАК Период,
	            	  |	ТурнирнаяТаблица.КоличествоОчков = 0 КАК Проигрыш,
	            	  |	ТурнирнаяТаблица.НомерСтроки КАК НомерСтроки,
	            	  |	МИНИМУМ(ТурнирнаяТаблица.Период) КАК ПериодМин
	            	  |ПОМЕСТИТЬ Даты
	            	  |ИЗ
	            	  |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	            	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	            	  |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	            	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	            	  |			ТурнирнаяТаблица.Команда КАК Команда,
	            	  |			ТурнирнаяТаблица.КоличествоОчков = 0 КАК Проигрыш
	            	  |		ИЗ
	            	  |			РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	            	  |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	            	  |				ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	            	  |		ГДЕ
	            	  |			ТурнирнаяТаблица.Период МЕЖДУ &ДатаН И &ДатаК
	            	  |			И (ТурнирнаяТаблица.Период, ТурнирнаяТаблица.Команда) В
	            	  |					(ВЫБРАТЬ
	            	  |						МАКСИМУМ(ТурнирнаяТаблица.Период) КАК Период,
	            	  |						ТурнирнаяТаблица.Команда КАК Команда
	            	  |					ИЗ
	            	  |						РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	            	  |							ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	            	  |							ПО
	            	  |								ТурнирнаяТаблица.Тур = Туры.Ссылка
	            	  |					ГДЕ
	            	  |						ТурнирнаяТаблица.Период МЕЖДУ &ДатаН И &ДатаК
	            	  |						И ТурнирнаяТаблица.Команда В (&Команды)
	            	  |						И ВЫБОР
	            	  |							КОГДА ТурнирнаяТаблица.Команда = &Хозяева
	            	  |								ТОГДА ТурнирнаяТаблица.НомерСтроки = 1
	            	  |							КОГДА ТурнирнаяТаблица.Команда = &Гости
	            	  |								ТОГДА ТурнирнаяТаблица.НомерСтроки = 2
	            	  |							ИНАЧЕ ЛОЖЬ
	            	  |						КОНЕЦ
	            	  |						И ТИПЗНАЧЕНИЯ(ТурнирнаяТаблица.Регистратор) = ТИП(Документ.Матч)
	            	  |						И Туры.Владелец = &Чемпионат
	            	  |					СГРУППИРОВАТЬ ПО
	            	  |						ТурнирнаяТаблица.Команда)) КАК Статусы
	            	  |		ПО ТурнирнаяТаблица.Команда = Статусы.Команда
	            	  |ГДЕ
	            	  |	ТурнирнаяТаблица.Период МЕЖДУ &ДатаН И &ДатаК
	            	  |	И ТурнирнаяТаблица.Команда В(&Команды)
	            	  |	И ТИПЗНАЧЕНИЯ(ТурнирнаяТаблица.Регистратор) = ТИП(Документ.Матч)
	            	  |	И ВЫБОР
	            	  |			КОГДА ТурнирнаяТаблица.Команда = &Хозяева
	            	  |				ТОГДА ТурнирнаяТаблица.НомерСтроки = 1
	            	  |			КОГДА ТурнирнаяТаблица.Команда = &Гости
	            	  |				ТОГДА ТурнирнаяТаблица.НомерСтроки = 2
	            	  |			ИНАЧЕ ЛОЖЬ
	            	  |		КОНЕЦ
	            	  |	И Туры.Владелец = &Чемпионат
	            	  |	И Статусы.Проигрыш = ЛОЖЬ
	            	  |
	            	  |СГРУППИРОВАТЬ ПО
	            	  |	ТурнирнаяТаблица.Команда,
	            	  |	ТурнирнаяТаблица.НомерСтроки,
	            	  |	ТурнирнаяТаблица.КоличествоОчков = 0
	            	  |;
	            	  |
	            	  |////////////////////////////////////////////////////////////////////////////////
	            	  |ВЫБРАТЬ
	            	  |	Периоды.Команда КАК Команда,
	            	  |	Периоды.Хозяева КАК Хозяева,
	            	  |	СУММА(ВЫБОР
	            	  |			КОГДА ТурнирнаяТаблица.КоличествоОчков = 0
	            	  |				ТОГДА 0
	            	  |			ИНАЧЕ 1
	            	  |		КОНЕЦ) КАК Количество
	            	  |ИЗ
	            	  |	(ВЫБРАТЬ
	            	  |		Даты.Команда КАК Команда,
	            	  |		ЕСТЬNULL(Проигрыши.Период, Даты.ПериодМин) КАК ПериодМин,
	            	  |		Даты.Период КАК ПериодМакс,
	            	  |		Даты.Команда = &Хозяева КАК Хозяева,
	            	  |		Даты.НомерСтроки КАК НомерСтроки,
	            	  |		Даты.Проигрыш КАК Проигрыш
	            	  |	ИЗ
	            	  |		Даты КАК Даты
	            	  |			ЛЕВОЕ СОЕДИНЕНИЕ Даты КАК Проигрыши
	            	  |			ПО Даты.Команда = Проигрыши.Команда
	            	  |				И Даты.Период > Проигрыши.Период
	            	  |				И Даты.Проигрыш <> Проигрыши.Проигрыш
	            	  |	ГДЕ
	            	  |		Даты.Проигрыш = ЛОЖЬ) КАК Периоды
	            	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	            	  |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	            	  |			ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	            	  |		ПО Периоды.Команда = ТурнирнаяТаблица.Команда
	            	  |			И Периоды.НомерСтроки = ТурнирнаяТаблица.НомерСтроки
	            	  |ГДЕ
	            	  |	ТурнирнаяТаблица.Период МЕЖДУ Периоды.ПериодМин И Периоды.ПериодМакс
	            	  |	И ТИПЗНАЧЕНИЯ(ТурнирнаяТаблица.Регистратор) = ТИП(Документ.Матч)
	            	  |	И Туры.Владелец = &Чемпионат
	            	  |
	            	  |СГРУППИРОВАТЬ ПО
	            	  |	Периоды.Команда,
	            	  |	Периоды.Хозяева";
	Запрос.УстановитьПараметр("Гости",		Гости);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Элементы.ПоследняяСерия.МаксимальноеЗначение		= Элементы.ПоследняяСерия.МаксимальноеЗначение + Выборка.Количество;
		Если Выборка.Хозяева Тогда
			ПоследняяСерия			= Выборка.Количество;
		Иначе
			ПоследняяСерияГостевая	= Выборка.Количество;
		КонецЕсли;
	КонецЦикла;
	
	ЭлементыУдалить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 5
	               |	ИСТИНА КАК Хозяева,
	               |	ТурнирнаяТаблица.Регистратор КАК Регистратор,
	               |	ТурнирнаяТаблица.Период КАК Период,
	               |	ТурнирнаяТаблица.КоличествоОчков КАК КоличествоОчков
	               |ПОМЕСТИТЬ ВТ
	               |ИЗ
	               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	               |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	               |ГДЕ
	               |	ТурнирнаяТаблица.Период МЕЖДУ &ДатаН И &ДатаК
	               |	И ТурнирнаяТаблица.Команда = &Хозяева
	               |	И ТИПЗНАЧЕНИЯ(ТурнирнаяТаблица.Регистратор) = ТИП(Документ.Матч)
	               |	И Туры.Владелец = &Чемпионат
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 5
	               |	ЛОЖЬ,
	               |	ТурнирнаяТаблица.Регистратор,
	               |	ТурнирнаяТаблица.Период,
	               |	ТурнирнаяТаблица.КоличествоОчков
	               |ИЗ
	               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	               |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	               |ГДЕ
	               |	ТурнирнаяТаблица.Период МЕЖДУ &ДатаН И &ДатаК
	               |	И ТурнирнаяТаблица.Команда = &Гости
	               |	И ТИПЗНАЧЕНИЯ(ТурнирнаяТаблица.Регистратор) = ТИП(Документ.Матч)
	               |	И Туры.Владелец = &Чемпионат
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Период УБЫВ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ.Хозяева КАК Хозяева,
	               |	ВТ.Регистратор КАК Матч,
	               |	ВТ.Период КАК Период,
	               |	ВТ.КоличествоОчков КАК КоличествоОчков
	               |ИЗ
	               |	ВТ КАК ВТ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Хозяева УБЫВ,
	               |	Период";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "5", Формат(КоличествоМатчейВАнонсе(), "ЧН=5; ЧГ=0"));
	Запрос.УстановитьПараметр("Гости",		Гости());
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МатчУстановить(?(Выборка.Хозяева, Элементы.ГруппаПредыдущие5Хозяева, Элементы.ГруппаПредыдущие5Гости), Выборка);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЭлементыУдалить(Викимз=Неопределено)
	Если Викимз = Неопределено Тогда
		ЭлементыУдалить(Элементы.ГруппаПредыдущие5Хозяева.ПодчиненныеЭлементы);
		ЭлементыУдалить(Элементы.ГруппаПредыдущие5Гости.ПодчиненныеЭлементы);
		Гиперссылки.Очистить();
	Иначе
		Пока Викимз.Количество() > 0 Цикл
			Для Каждого Элемент Из Викимз Цикл
				Элементы.Удалить(Элемент);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МатчОткрыть(Элемент)
	НаКлиенте.ПоНавигационнойСсылкеПерейти(Гиперссылки.НайтиПоЗначению(Элемент.Имя).Представление);
КонецПроцедуры

&НаСервере
Процедура МатчУстановить(Родитель, Выборка)
	Элемент = Элементы.Добавить("_" + Лев(Новый УникальныйИдентификатор, 8), Тип("ДекорацияФормы"), Родитель);
	Элемент.Гиперссылка						= Истина;
	Элемент.Подсказка						= Выборка.Матч;
	Элемент.УстановитьДействие("Нажатие", "МатчОткрыть");
	Если Выборка.КоличествоОчков = 0 Тогда
		Элемент.Заголовок	= "L";
		Элемент.ЦветТекста	= ЦветаСтиля.ЦветОтрицательногоЧисла;
	ИначеЕсли Выборка.КоличествоОчков = 1 Тогда
		Элемент.Заголовок	= "D";
		//Элемент.ЦветТекста	= ЦветаСтиля.ЦветТекстаПоля;
	Иначе
		Элемент.Заголовок	= "W";
		Элемент.ЦветТекста	= ЦветаСтиля.ЦветАкцента;
	КонецЕсли;
	Гиперссылки.Добавить(Элемент.Имя, ПолучитьНавигационнуюСсылку(Выборка.Матч));
КонецПроцедуры

&НаСервере
Процедура АнонсОбновитьНаСервере2()
	Сезон.Очистить();
	Предыдущие5.Очистить();
	Макет	= ПолучитьОбщийМакет("Матчи");
	Сколько	= КоличествоМатчейВАнонсе();
	
	Для Каждого тСтрока Из Объект.Команды Цикл
		Стат = СтатистикаИгр(тСтрока.Команда);
		Для Каждого ТекЭлемент Из Стат Цикл
			нСтрока = Сезон.Добавить();
			ЗаполнитьЗначенияСвойств(нСтрока, ТекЭлемент);
			нСтрока.Команда	= тСтрока.Команда;
		КонецЦикла;

		Выборка = МатчиПоследние5(тСтрока.Команда, Сколько);
		Итератор = 0;
		Для Каждого Детали Из Выборка Цикл
			Область = Макет.ПолучитьОбласть("История|CC");
			Область.Параметры.Заполнить(Детали);
			Предыдущие5.Вывести(Область);
		
			Итератор = Итератор + 1;
			Прервать;
		КонецЦикла;
		Если Итератор > 0 Тогда
			Для Каждого Детали Из Выборка Цикл
				Область = Макет.ПолучитьОбласть("История|" + Детали.Результат);
				Область.Параметры.Заполнить(Детали);
				Предыдущие5.Присоединить(Область);
				Итератор = Итератор + 1;
			КонецЦикла;
			Пока Итератор <= Сколько Цикл
				Предыдущие5.Присоединить(Макет.ПолучитьОбласть("История|EE"));
				Итератор = Итератор + 1;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	Предыдущие5.ФиксацияСверху	= 2;
	Предыдущие5.ФиксацияСлева	= Сколько + 1;
КонецПроцедуры

&НаСервере
Процедура ГрафикОбновитьНаСервере()
	График.Очистить();
	Если КомандыДве(Истина) Тогда
		Если ЗначениеЗаполнено(Амплуа) Тогда
			Для Каждого тКоманда Из Объект.Команды Цикл
				мСтроки = ГрафикПолучитьНаСервере(тКоманда.Команда);
				Для Фаза = 1 По 3 Цикл
					Серия	= График.УстановитьСерию(ФЭИ(Фаза));
					//Серия.Цвет = СерияЦвет(Фаза);
					
					КолИтого	= 0;
					ВесИтого	= 0;
					Для Каждого ДатаРождения Из мСтроки Цикл
						КолИтого	= КолИтого + 1;
						ВесИтого	= ВесИтого + ФазаРасчитать2(ДатаРождения, Фаза);
					КонецЦикла;
					Если КолИтого > 0 Тогда
						Точка	= График.УстановитьТочку(тКоманда.Команда);
						График.УстановитьЗначение(Точка, Серия, Окр(ВесИтого / КолИтого, 1));
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		Иначе
			Для Каждого тКоманда Из Объект.Команды Цикл
				мСтроки = ГрафикПолучитьНаСервере(тКоманда.Команда, "ДатаРождения");
				Для Фаза = 1 По 3 Цикл
					Серия	= График.УстановитьСерию(ФЭИ(Фаза));
					Серия.Цвет	= Цвет(Фаза);
					
					КолИтого	= 0;
					ВесИтого	= 0;
					Для Каждого ДатаРождения Из мСтроки Цикл
						КолИтого	= КолИтого + 1;
						ВесИтого	= ВесИтого + ФазаРасчитать1(ДатаРождения, Фаза, Объект.Дата);
					КонецЦикла;
					Если КолИтого > 0 Тогда
						Точка	= График.УстановитьТочку(тКоманда.Команда);
						График.УстановитьЗначение(Точка, Серия, Окр(ВесИтого / КолИтого, 1));
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ГрафикПолучитьНаСервере(Команда, Колонка=0)
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 30
		               |	РАЗНОСТЬДАТ(Игроки.ДатаРождения, &Дата, ДЕНЬ) КАК Количество,
		               |	Игроки.ДатаРождения КАК ДатаРождения
		               |ИЗ
		               |	Документ.Матч.СоставыКоманд КАК Матч
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПеремещенияИгроков.СрезПоследних(&Дата, ГОД(Игрок.ДатаРождения) >= 1900) КАК Перемещения
		               |		ПО Матч.Игрок = Перемещения.Игрок
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Игроки КАК Игроки
		               |		ПО Матч.Игрок = Игроки.Ссылка
		               |ГДЕ
		               |	Матч.Ссылка = &Ссылка
		               |	И Матч.Команда = &Команда");
	Запрос.УстановитьПараметр("Дата",		Объект.Дата);
	Запрос.УстановитьПараметр("Ссылка",		Объект.Ссылка);
	Запрос.УстановитьПараметр("Команда",	Команда);
	Если ЗначениеЗаполнено(Амплуа) Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 30
		               |	РАЗНОСТЬДАТ(Игроки.ДатаРождения, &Дата, ДЕНЬ) КАК Количество,
		               |	Игроки.ДатаРождения КАК ДатаРождения
		               |ИЗ
		               |	Документ.Матч.СоставыКоманд КАК Матч
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПеремещенияИгроков.СрезПоследних(&Дата, ГОД(Игрок.ДатаРождения) >= 1900) КАК Перемещения
		               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Амплуа КАК Роли
		               |			ПО Перемещения.Амплуа = Роли.Ссылка
		               |		ПО Матч.Игрок = Перемещения.Игрок
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Игроки КАК Игроки
		               |		ПО Матч.Игрок = Игроки.Ссылка
		               |ГДЕ
		               |	Матч.Ссылка = &Ссылка
		               |	И Матч.Команда = &Команда
		               |	И ЕСТЬNULL(Роли.Ссылка, Игроки.Амплуа) = &Амплуа";
		Запрос.УстановитьПараметр("Амплуа",		Амплуа);
	КонецЕсли;
	Ризалт = Запрос.Выполнить();
	Если Ризалт.Пустой() Тогда
		Если ЗначениеЗаполнено(Амплуа) Тогда
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 30
			               |	РАЗНОСТЬДАТ(Игроки.ДатаРождения, &Дата, ДЕНЬ) КАК Количество,
			               |	Игроки.ДатаРождения КАК ДатаРождения
			               |ИЗ
			               |	РегистрСведений.ПеремещенияИгроков.СрезПоследних(
			               |			&Дата,
			               |			Игрок.ПометкаУдаления = ЛОЖЬ
			               |				И ГОД(Игрок.ДатаРождения) >= 1900) КАК Перемещения
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Амплуа КАК Роли
			               |		ПО Перемещения.Амплуа = Роли.Ссылка
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Игроки КАК Игроки
			               |		ПО Перемещения.Игрок = Игроки.Ссылка
			               |ГДЕ
			               |	Перемещения.Команда = &Команда
			               |	И ЕСТЬNULL(Роли.Ссылка, Игроки.Амплуа) = &Амплуа";
		Иначе
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 30
			               |	РАЗНОСТЬДАТ(Игроки.ДатаРождения, &Дата, ДЕНЬ) КАК Количество,
			               |	Игроки.ДатаРождения КАК ДатаРождения
			               |ИЗ
			               |	РегистрСведений.ПеремещенияИгроков.СрезПоследних(
			               |			&Дата,
			               |			Игрок.ПометкаУдаления = ЛОЖЬ
			               |				И ГОД(Игрок.ДатаРождения) >= 1900) КАК Перемещения
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Игроки КАК Игроки
			               |		ПО Перемещения.Игрок = Игроки.Ссылка
			               |ГДЕ
			               |	Перемещения.Команда = &Команда";
		КонецЕсли;
		Ризалт = Запрос.Выполнить();
	КонецЕсли;
	Возврат Ризалт.Выгрузить().ВыгрузитьКолонку(Колонка);
КонецФункции

&НаКлиенте
Процедура ГрафикОбновить(Команда)
	ГрафикОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СоставыЗаполнить(Команда)
	Если КомандыДве(Истина) Тогда
		СоставыЗаполнитьНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция КомандыДве(Сообщать=Ложь)
	Если Объект.Команды.Количество() = 2 Тогда Возврат Истина; КонецЕсли;
	Если Сообщать Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Сначала заполните таблицу 'Команды' ",, Объект.Ссылка, "Команды");
		Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаКоманды;
	КонецЕсли;
	Возврат Ложь;
КонецФункции

&НаСервере
Функция КомандыПолучить()
	Возврат Объект.Команды.Выгрузить(, "Команда").ВыгрузитьКолонку(0);
КонецФункции

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если Элементы.ГруппаСравнение = ТекущаяСтраница Тогда
		Если График.КоличествоСерий <> 3 И Объект.СоставыКоманд.Количество() > 0 Тогда
			ГрафикОбновитьНаСервере();
		КонецЕсли;
		
	ИначеЕсли Элементы.ГруппаАнонс = ТекущаяСтраница Тогда
		Если ИгрСНачалаСезона = 0 Тогда
			АнонсОбновить();
		КонецЕсли;
	ИначеЕсли Элементы.ГруппаАнонс2 = ТекущаяСтраница Тогда
		Если Сезон.Количество() = 0 Тогда
			АнонсОбновить();
		КонецЕсли;
	ИначеЕсли Элементы.ГруппаБиоритмы = ТекущаяСтраница Тогда
		Если График2.КоличествоСерий = 0 И Объект.СоставыКоманд.Количество() > 0 Тогда
			График2Обновить();
		КонецЕсли;
		
	ИначеЕсли Элементы.ГруппаМатчи = ТекущаяСтраница Тогда
		Если ПредыдущиеМатчиКоличество = 0 Тогда
			ПредыдущиеВстречиОбновитьНаСервере();
			ПредыдущиеМатчиОбновитьНаСервере();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция Хозяева()
	Возврат ?(Объект.Команды.Количество() = 0, Справочники.Команды.ПустаяСсылка(), Объект.Команды.Получить(0).Команда);
КонецФункции

&НаСервере
Функция Гости()
	Возврат ?(Объект.Команды.Количество() < 2, Справочники.Команды.ПустаяСсылка(), Объект.Команды.Получить(1).Команда);
КонецФункции

&НаСервере
Процедура СтадионПриИзмененииНаСервере()
	тКоманда = Объект.Стадион.Владелец;
	Если ЗначениеЗаполнено(тКоманда) И ТипЗнч(тКоманда) = Тип("СправочникСсылка.Команды") Тогда
		мКоманды = Объект.Команды.НайтиСтроки(Новый Структура("Команда", тКоманда));
		Если мКоманды.Количество() = 0 Тогда
			Если Объект.Команды.Количество() = 0 Тогда
				тСтрока = Объект.Команды.Добавить();
			Иначе
				тСтрока = Объект.Команды.Получить(0);
			КонецЕсли;
			тСтрока.Команда = тКоманда;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтадионПриИзменении(Элемент)
	СтадионПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СоставыКомандИгрокПриИзменении(Элемент)
	Элементы.СоставыКоманд.ТекущиеДанные.Команда = КомандаИгрока(Элементы.СоставыКоманд.ТекущиеДанные.Игрок);
КонецПроцедуры

&НаКлиенте
Процедура АмплуаПриИзменении(Элемент)
	ГрафикОбновитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВидСпортаУстановить()
	Если ЗначениеЗаполнено(Чемпионат) Тогда
		ОбщегоНазначения.УстановитьЗначение(ВидСпорта, СерверныйФункции.ВидСпорта(Чемпионат));
	ИначеЕсли ЗначениеЗаполнено(Объект.Тур) Тогда
		ОбщегоНазначения.УстановитьЗначение(ВидСпорта, СерверныйФункции.ВидСпорта(Объект.Тур));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЧемпионатУстановить()
	Если ЗначениеЗаполнено(Объект.Тур) Тогда
		ОбщегоНазначения.УстановитьЗначение(Чемпионат, СерверныйФункции.ЧемпионатНайти(Объект.Тур));
	Иначе
		Чемпионат	= Чемпионат();
	КонецЕсли;
	ВидСпортаУстановить();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Изображение	= ИзображениеПолучить(Объект.Ссылка);
	
	Если Объект.Ссылка.Пустая() Тогда
		Если НЕ ЗначениеЗаполнено(Объект.Дата) Тогда
			Объект.Дата	= НачалоДня(ТекущаяДатаСеанса());
		КонецЕсли;
	КонецЕсли;
	Если СтарыйВидАнонсов() Тогда
		Элементы.ГруппаАнонс.Видимость	= Ложь;
	Иначе
		Элементы.ГруппаАнонс2.Видимость	= Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЧемпионатУстановить();
	ТурПриИзменении();
	КомандыПриИзменении();

	ВидимостьДоступностьУстановить();
КонецПроцедуры

&НаСервере
Процедура ВидимостьДоступностьУстановить()
	ЭтоДерби();
	Элементы.ГруппаАнонс.Доступность		= (НЕ Объект.Ссылка.Пустая());
	Элементы.ГруппаАнонс2.Доступность		= (НЕ Объект.Ссылка.Пустая());
	//Элементы.ГруппаСравнение.Доступность	= (Объект.СоставыКоманд.Количество() > 0);
	Элементы.ГруппаМатчи.Доступность		= (Объект.Команды.Количество() = 2);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ВидимостьДоступностьУстановить();
КонецПроцедуры

&НаКлиенте
Процедура СоставыКомандПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если Элемент.ТекущиеДанные.Свойство("Команда")
	И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Команда)
	Тогда
		мСтроки = Объект.Команды.НайтиСтроки(Новый Структура("Команда", Элемент.ТекущиеДанные.Команда));
		Если мСтроки.Количество() = 0 Тогда
			Отказ = Истина;
			
			Сообщить("Игрок из другой команды");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура КомандыПриИзмененииНаСервере()
	ИзображениеХозяева	= "";
	ИзображениеГости	= "";
	Элементы.ГрафикКоманда.СписокВыбора.Очистить();
	
	СписокШиндлера	= Новый Массив;
	мКоманды = Новый Массив;
	Для Каждого тСтрока Из Объект.Команды Цикл
		Если ЗначениеЗаполнено(тСтрока.Команда) Тогда
			мКоманды.Добавить(тСтрока.Команда);
			
			Если тСтрока.НомерСтроки = 1
			И Модифицированность
			//И НЕ ЗначениеЗаполнено(Объект.Стадион)
			Тогда
				Стадион = СтадионПодобрать(тСтрока.Команда);
				Если ЗначениеЗаполнено(Стадион) Тогда
					ОбщегоНазначения.УстановитьЗначение(Объект.Стадион, Стадион);
				КонецЕсли;
			КонецЕсли;
			
			Элементы.ГрафикКоманда.СписокВыбора.Добавить(тСтрока.Команда);
			Если НЕ ЗначениеЗаполнено(ГрафикКоманда) Тогда
				ГрафикКоманда = тСтрока.Команда;
			КонецЕсли;
			
		ИначеЕсли тСтрока.НомерСтроки = 1
		И Модифицированность
		И ЗначениеЗаполнено(Объект.Стадион)
		Тогда
			Объект.Стадион = Справочники.Стадионы.ПустаяСсылка();
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого тСтрока Из Объект.СоставыКоманд Цикл
		Если мКоманды.Найти(тСтрока.Команда) = Неопределено Тогда
			СписокШиндлера.Добавить(тСтрока);
		КонецЕсли;
	КонецЦикла;
	
	Если Модифицированность Тогда
		Для Каждого тСтрока Из СписокШиндлера Цикл
			Объект.СоставыКоманд.Удалить(тСтрока);
		КонецЦикла;
	КонецЕсли;
	
	Элементы.Чемпионат.СписокВыбора.Очистить();
	Элементы.Тур.СписокВыбора.Очистить();
	Элементы.Стадион.СписокВыбора.Очистить();
	
	ТЧОчистить();
КонецПроцедуры

&НаКлиенте
Процедура КомандыПриИзменении(Элемент=Неопределено)
	Если Объект.Команды.Количество() = 0 Тогда
		Если Модифицированность
		И ЗначениеЗаполнено(Объект.Стадион)
		Тогда
			Объект.Стадион		= Неопределено;
		КонецЕсли;
		
	ИначеЕсли Модифицированность
	И НЕ ЗначениеЗаполнено(Объект.Тур)
	И КомандыДве()
	Тогда
		Объект.Тур			= ТурПолучить();
	КонецЕсли;
	
	КомандыПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Функция СтадионПодобрать(Тим)
	Ответ = Неопределено;
	Виктимз	= СтадионНайти(Тим);
	Если ТипЗнч(Виктимз) = Тип("СправочникСсылка.Стадионы") Тогда
		Ответ = Виктимз;
	ИначеЕсли Виктимз.Количество() > 0 Тогда
		Ответ = Виктимз.Получить(0);
	КонецЕсли;
	Возврат Ответ;
КонецФункции

&НаСервере
Функция СтадионНайти(Тим, Тур=Неопределено)
	Если ЗначениеЗаполнено(Тур) И Тур.ОлимпийскаяСистема Тогда
		Ответ = РеквизитФормыВЗначение("Объект").СтадионНайти(Тур.Владелец, Истина);
	Иначе
		Ответ = РеквизитФормыВЗначение("Объект").СтадионНайти(Тим, Истина);
	КонецЕсли;
	Возврат Ответ;
КонецФункции

&НаКлиенте
Процедура СтадионНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Объект.Команды.Количество() > 0
	//И Элемент.СписокВыбора.Количество() = 0
	Тогда
		Стадионы.ЗагрузитьЗначения(СтадионНайти(Объект.Команды.Получить(0).Команда, Объект.Тур));
		Если Стадионы.Количество() = 1 Тогда
			Стадион = Стадионы.Получить(0).Значение;
			Если НЕ ЗначениеЗаполнено(Объект.Стадион) Тогда
				СтандартнаяОбработка	= Ложь;
				Модифицированность		= Истина;
				Объект.Стадион			= Стадион;
			КонецЕсли;
			Если Элемент.СписокВыбора.НайтиПоЗначению(Стадион) = Неопределено Тогда
				Элемент.СписокВыбора.Добавить(Стадион);
			КонецЕсли;
		//ИначеЕсли Стадионы.Количество() > 0 Тогда
		//	Элемент.СписокВыбора.ЗагрузитьЗначения(Стадионы.ВыгрузитьЗначения());
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоставыКомандИгрокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Тимз = Новый Массив;
	Для Каждого ТекСтрока Из Объект.Команды Цикл
		Тимз.Добавить(ТекСтрока.Команда);
	КонецЦикла;
	Игроки.ЗагрузитьЗначения(ИгрокиПолучить(Объект.Дата, Тимз));
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИгрокиПолучить(Дата, Команды)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Перемещения.Игрок КАК Игрок,
	                      |	Перемещения.Команда КАК Команда
	                      |ИЗ
	                      |	РегистрСведений.ПеремещенияИгроков.СрезПоследних(&Дата, ) КАК Перемещения
	                      |ГДЕ
	                      |	Перемещения.Команда В(&Команды)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Команда,
	                      |	Игрок
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("Дата",		Дата);
	Запрос.УстановитьПараметр("Команды",	Команды);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

&НаСервере
Процедура ПредыдущиеВстречиОбновитьНаСервере()
	ПредыдущиеВстречи.Очистить();
	Если Объект.Команды.Количество() <> 2 Тогда Возврат; КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	Матч.Дата КАК Дата,
	                      |	Матч.Счет КАК Счет,
	                      |	МатчКоманды.Ссылка КАК Матч,
	                      |	Туры.Владелец КАК Чемпионат,
	                      |	ТурнирнаяТаблица.Команда = &Хозяева КАК Хозяева
	                      |ИЗ
	                      |	Документ.Матч КАК Матч
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч.Команды КАК МатчКоманды
	                      |			ПО ТурнирнаяТаблица.Регистратор = МатчКоманды.Ссылка
	                      |		ПО Матч.Ссылка = ТурнирнаяТаблица.Регистратор
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |		ПО Матч.Тур = Туры.Ссылка
	                      |ГДЕ
	                      |	ТурнирнаяТаблица.Период <= &ДатаК
	                      |	И ТурнирнаяТаблица.Команда В(&Команды)
	                      |	И ТурнирнаяТаблица.НомерСтроки = 1
	                      |	И МатчКоманды.Команда В(&Команды)
	                      |	И МатчКоманды.НомерСтроки = 2
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Дата УБЫВ");
	Запрос.УстановитьПараметр("ДатаК",			НачалоДня(Объект.Дата) - 1);
	Запрос.УстановитьПараметр("Команды",		КомандыПолучить());
	Запрос.УстановитьПараметр("Хозяева",		Хозяева());
	Выборка = Запрос.Выполнить().Выбрать();
	Макет = ПолучитьОбщийМакет("Матчи");
	ПредыдущиеВстречи.Вывести(Макет.ПолучитьОбласть("Шапка"));
	Пока Выборка.Следующий() Цикл
		Область = Макет.ПолучитьОбласть(?(Выборка.Хозяева, "Хозяева", "Детали"));
		Область.Параметры.Заполнить(Выборка);
		ПредыдущиеВстречи.Вывести(Область);
	КонецЦикла;
	ПредыдущиеВстречи.ФиксацияСверху	= 1;
КонецПроцедуры

&НаСервере
Процедура ПредыдущиеМатчиОбновитьНаСервере()
	ПредыдущиеМатчиКоличество	= 0;
	ПредыдущиеМатчи.Очистить();
	Если Объект.Команды.Количество() <> 2 Тогда Возврат; КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	Матч.Дата КАК Дата,
	                      |	Матч.Счет КАК Счет,
	                      |	Матч.Ссылка КАК Матч,
	                      |	Туры.Владелец КАК Чемпионат,
	                      |	ТурнирнаяТаблица.Команда = &Хозяева КАК Хозяева
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч КАК Матч
	                      |		ПО ТурнирнаяТаблица.Регистратор = Матч.Ссылка
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |ГДЕ
	                      |	ТурнирнаяТаблица.Период МЕЖДУ &ДатаН И &ДатаК
	                      |	И ТурнирнаяТаблица.Команда В(&Команды)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Дата УБЫВ");
	Если МатчиФильтр = 1 Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	Матч.Дата КАК Дата,
		               |	Матч.Счет КАК Счет,
		               |	Матч.Ссылка КАК Матч,
		               |	Туры.Владелец КАК Чемпионат,
		               |	ТурнирнаяТаблица.Команда = &Хозяева КАК Хозяева
		               |ИЗ
		               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч КАК Матч
		               |		ПО ТурнирнаяТаблица.Регистратор = Матч.Ссылка
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
		               |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
		               |ГДЕ
		               |	ТурнирнаяТаблица.Период МЕЖДУ &ДатаН И &ДатаК
		               |	И ТурнирнаяТаблица.Команда В(&Команды)
		               |	И Туры.Владелец = &Чемпионат
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Дата УБЫВ";
	ИначеЕсли МатчиФильтр = 2 Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	Матч.Дата КАК Дата,
		               |	Матч.Счет КАК Счет,
		               |	Матч.Ссылка КАК Матч,
		               |	Туры.Владелец КАК Чемпионат,
		               |	ТурнирнаяТаблица.Команда = &Хозяева КАК Хозяева
		               |ИЗ
		               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч КАК Матч
		               |		ПО ТурнирнаяТаблица.Регистратор = Матч.Ссылка
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
		               |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
		               |ГДЕ
		               |	ТурнирнаяТаблица.Период МЕЖДУ &ДатаН И &ДатаК
					   |	И ТурнирнаяТаблица.Команда В(&Команды)
		               |	И ВЫБОР
		               |			КОГДА ТурнирнаяТаблица.Команда = &Хозяева
		               |				ТОГДА ТурнирнаяТаблица.НомерСтроки = 1
					   //|			КОГДА ТурнирнаяТаблица.Команда = &Гости
					   //|				ТОГДА ТурнирнаяТаблица.НомерСтроки = 2
		               |			ИНАЧЕ ТурнирнаяТаблица.НомерСтроки = 2
		               |		КОНЕЦ
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Дата УБЫВ";
	ИначеЕсли МатчиФильтр = 3 Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	Матч.Дата КАК Дата,
		               |	Матч.Счет КАК Счет,
		               |	Матч.Ссылка КАК Матч,
		               |	Туры.Владелец КАК Чемпионат,
		               |	ТурнирнаяТаблица.Команда = &Хозяева КАК Хозяева
		               |ИЗ
		               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч КАК Матч
		               |		ПО ТурнирнаяТаблица.Регистратор = Матч.Ссылка
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Команды КАК ВсеКоманды
		               |		ПО ТурнирнаяТаблица.Команда = ВсеКоманды.Ссылка
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
		               |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
		               |ГДЕ
		               |	ТурнирнаяТаблица.Период МЕЖДУ &ДатаН И &ДатаК
		               |	И ТурнирнаяТаблица.Команда В(&Команды)
		               |	И ВсеКоманды.Город В
		               |			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |				Города.Ссылка КАК Ссылка
		               |			ИЗ
		               |				Справочник.Команды КАК Команды
		               |					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
		               |					ПО
		               |						Команды.Город = Города.Ссылка
		               |			ГДЕ
		               |				ТурнирнаяТаблица.Период МЕЖДУ &ДатаН И &ДатаК
		               |				И Команды.Ссылка В (&Команды))
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Дата УБЫВ";
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаК",			НачалоДня(Объект.Дата) - 1);
	Запрос.УстановитьПараметр("ДатаН",			НачалоМесяца(ДобавитьМесяц(Объект.Дата, -24)));
	Запрос.УстановитьПараметр("Команды",		КомандыПолучить());
	Запрос.УстановитьПараметр("Хозяева",		Хозяева());
	//Запрос.УстановитьПараметр("Гости",			Гости());
	Запрос.УстановитьПараметр("Чемпионат",		Чемпионат());
	Выборка = Запрос.Выполнить().Выбрать();
	Макет = ПолучитьОбщийМакет("Матчи");
	ПредыдущиеМатчи.Вывести(Макет.ПолучитьОбласть("Шапка"));
	Пока Выборка.Следующий() Цикл
		Область = Макет.ПолучитьОбласть(?(Выборка.Хозяева, "Хозяева", "Детали"));
		Область.Параметры.Заполнить(Выборка);
		ПредыдущиеМатчи.Вывести(Область);
		
		ПредыдущиеМатчиКоличество = ПредыдущиеМатчиКоличество + 1;
	КонецЦикла;
	ПредыдущиеМатчи.ФиксацияСверху	= 1;
КонецПроцедуры

&НаКлиенте
Процедура ПредыдущиеВстречиОбновить(Команда)
	ПредыдущиеВстречиОбновитьНаСервере();
	ПредыдущиеМатчиОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТурПриИзменении(Элемент=Неопределено)
	КомандыТура.ЗагрузитьЗначения(КомандыТура());
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ТипЗнч(Параметр) = Тип("ДокументСсылка.Матч")
	И Параметр = Объект.Ссылка
	Тогда
		Прочитать();
		
		ВидимостьДоступностьУстановить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоставыКомандПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Объект.Команды.Количество() = 0 Тогда Отказ = Истина; КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МатчиФильтрПриИзменении(Элемент)
	ПредыдущиеМатчиОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	КомандыПриИзменении();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТурыПолучить(Дата, Чемпионат)
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	Туры.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Туры КАК Туры
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |		ПО Туры.Владелец = ЧемпионатыКоманды.Ссылка
	                      |ГДЕ
	                      |	Туры.Владелец = &Чемпионат
	                      |	И &Дата МЕЖДУ Туры.ДатаНачала И Туры.ДатаОкончания
	                      |	И Туры.ПометкаУдаления = ЛОЖЬ
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Ссылка");
	Запрос.УстановитьПараметр("Дата",			НачалоДня(Дата));
	Запрос.УстановитьПараметр("Чемпионат",		Чемпионат);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

&НаКлиенте
Процедура ТурНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	Туры.ЗагрузитьЗначения(ТурыПолучить(Объект.Дата, Чемпионат));
	Элемент.СписокВыбора.ЗагрузитьЗначения(Туры.ВыгрузитьЗначения());
КонецПроцедуры

&НаСервере
Процедура График2ОбновитьНаСервере()
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 30
	                      |	РАЗНОСТЬДАТ(Игроки.ДатаРождения, &Дата, ДЕНЬ) КАК Количество,
	                      |	Матч.Игрок КАК Игрок,
	                      |	ЕСТЬNULL(Роли.Ссылка, Игроки.Амплуа) КАК Амплуа
	                      |ИЗ
	                      |	Документ.Матч.СоставыКоманд КАК Матч
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПеремещенияИгроков.СрезПоследних(&Дата, ГОД(Игрок.ДатаРождения) >= 1900) КАК Перемещения
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Амплуа КАК Роли
	                      |			ПО Перемещения.Амплуа = Роли.Ссылка
	                      |		ПО Матч.Игрок = Перемещения.Игрок
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Игроки КАК Игроки
	                      |		ПО Матч.Игрок = Игроки.Ссылка
	                      |ГДЕ
	                      |	Матч.Ссылка = &Ссылка
	                      |	И Матч.Команда = &Команда
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Амплуа,
	                      |	Игрок
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("Дата",		Объект.Дата);
	Запрос.УстановитьПараметр("Ссылка",		Объект.Ссылка);
	Запрос.УстановитьПараметр("Команда",	ГрафикКоманда);
	Ризалт = Запрос.Выполнить();
	Если Ризалт.Пустой() Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 30
		               |	РАЗНОСТЬДАТ(Игроки.ДатаРождения, &Дата, ДЕНЬ) КАК Количество,
		               |	Игроки.Ссылка КАК Игрок,
		               |	ЕСТЬNULL(Роли.Ссылка, Игроки.Амплуа) КАК Амплуа
		               |ИЗ
		               |	РегистрСведений.ПеремещенияИгроков.СрезПоследних(
		               |			&Дата,
		               |			Игрок.ПометкаУдаления = ЛОЖЬ
		               |				И ГОД(Игрок.ДатаРождения) >= 1900) КАК Перемещения
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Амплуа КАК Роли
		               |		ПО Перемещения.Амплуа = Роли.Ссылка
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Игроки КАК Игроки
		               |		ПО Перемещения.Игрок = Игроки.Ссылка
		               |ГДЕ
		               |	Перемещения.Команда = &Команда
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Амплуа,
		               |	Игрок
		               |АВТОУПОРЯДОЧИВАНИЕ";
		Ризалт = Запрос.Выполнить();
	КонецЕсли;
	Выборка = Ризалт.Выбрать();
	Пока Выборка.Следующий() Цикл
		Для Фаза = 1 По 3 Цикл
			Серия	= График2.УстановитьСерию(ФЭИ(Фаза));
			Серия.Цвет	= Цвет(Фаза);
			Точка	= График2.УстановитьТочку(Выборка.Игрок);
			График2.УстановитьЗначение(Точка, Серия, ФазаРасчитать2(Выборка.Количество, Фаза), Выборка.Игрок);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ФЭИ(Элемент)
	Возврат Биоритмы.ФЭИ(Элемент);
КонецФункции

&НаСервере
Функция Цвет(Фаза)
	Возврат Биоритмы.Цвет(Фаза);
КонецФункции

&НаСервере
Функция ФазаРасчитать1(ДатаРождения, Фаза, Дата)
	Возврат Биоритмы.ФазаРасчитать1(ДатаРождения, Фаза, Дата);
КонецФункции

&НаСервере
Функция ФазаРасчитать2(Количество, Фаза)
	Возврат Биоритмы.ФазаРасчитать2(Количество, Фаза);
КонецФункции

&НаКлиенте
Процедура График2Обновить(Команда=Неопределено)
	График2.Очистить();
	Если ЗначениеЗаполнено(ГрафикКоманда) Тогда
		График2ОбновитьНаСервере();
	Иначе
		ОбщегоНазначения.СообщитьОбОшибке("Выберите команду",,, "ГрафикКоманда");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГрафикКомандаПриИзменении(Элемент)
	График2Обновить();
КонецПроцедуры

&НаСервере
Функция КомандыТура()
	Если ЗначениеЗаполнено(Объект.Тур) Тогда
		мКоманды	= СерверныйФункции.КомандыТура(Объект.Тур);
		Если мКоманды.Количество() = 0 И Объект.Тур.ОлимпийскаяСистема Тогда
			мКоманды = СерверныйФункции.КомандыЧемпионата(Чемпионат());
		КонецЕсли;
	Иначе
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	Команды.Команда КАК Ссылка
		                      |ИЗ
		                      |	Справочник.Чемпионаты.Команды КАК Команды
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица.Обороты(&ДатаН, &ДатаК, , Тур.Владелец = &Чемпионат) КАК ТурнирнаяТаблица
		                      |		ПО Команды.Команда = ТурнирнаяТаблица.Команда
		                      |ГДЕ
		                      |	Команды.Ссылка = &Чемпионат
		                      |	И ТурнирнаяТаблица.Команда ЕСТЬ NULL
		                      |
		                      |УПОРЯДОЧИТЬ ПО
		                      |	Ссылка
		                      |АВТОУПОРЯДОЧИВАНИЕ");
		Запрос.УстановитьПараметр("ДатаК", 			НачалоДня(Объект.Дата - Сутки()));
		Запрос.УстановитьПараметр("ДатаН", 			КонецДня(Объект.Дата + Сутки()));
		Запрос.УстановитьПараметр("Чемпионат",		Чемпионат());
		мКоманды	= Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
	КонецЕсли;
	Возврат мКоманды;
КонецФункции

&НаСервере
Функция КоличествоМатчейВАнонсе()
	Возврат СерверныйФункции.КоличествоМатчейВАнонсе();
КонецФункции

&НаСервере
Функция ИзображениеПолучить(Тим)
	Возврат СерверныйФункции.ИзображениеПолучить(Тим);
КонецФункции

&НаСервере
Функция СтатистикаИгр(Тим)
	Возврат СерверныйФункции.СтатистикаИгр(Тим, Чемпионат());
КонецФункции

&НаСервере
Функция МатчиПоследние5(Тим, Сколько)
	Возврат СерверныйФункции.МатчиПоследние5(Тим, Чемпионат(), Объект.Дата, Сколько);;
КонецФункции

&НаСервере
Функция КомандаИгрока(Игрок)
	Возврат СерверныйФункции.КомандаИгрока(Игрок, Объект.Дата);
КонецФункции

&НаСервере
Функция СтарыйВидАнонсов()
	Возврат СерверныйФункции.СтарыйВидАнонсов();
КонецФункции

&НаСервере
Процедура ЭтоДерби()
	ЭтоДерби	= ?(СерверныйФункции.ЭтоДерби(Объект.Ссылка), "ДЕРБИ", "");
КонецПроцедуры

&НаСервере
Функция ТурПолучить()
	Ответ = СерверныйФункции.Тур(КомандыПолучить(), Объект.Дата);
	Если НЕ ЗначениеЗаполнено(Ответ) Тогда
		Ответ = СерверныйФункции.Тур(Чемпионат(), Объект.Дата);
	КонецЕсли;
	Возврат Ответ;
КонецФункции

&НаСервере
Функция ИзображениеДефолтПолучить()
	Возврат СерверныйФункции.ИзображениеДефолтПолучить();
КонецФункции

&НаКлиенте
Функция ПараметрыДиалога()
	Возврат НаКлиенте.ПараметрыДиалога();
КонецФункции

&НаКлиенте
Процедура ВыбратьИзображение(Команда)
	Если СтрСравнить(Команда.Имя, "ВыбратьИзображение") = 0 Тогда
		НачатьПомещениеФайлаНаСервер(Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект),,,, ПараметрыДиалога());
	ИначеЕсли СтрСравнить(Команда.Имя, "УдалитьИзображение") = 0 Тогда
		Изображение = ИзображениеДефолтПолучить();
		Модифицированность	= Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайла(Результат, ДополнительныеПараметры=Неопределено) Экспорт
	Если ТипЗнч(Результат) = Тип("ОписаниеПомещенногоФайла") Тогда
		Если ОбщегоНазначения.РасширениеФайлаВерно(Результат.СсылкаНаФайл.Расширение) Тогда
			Изображение = Результат.Адрес;
			Модифицированность	= Истина;
		Иначе
			ОбщегоНазначения.СообщитьОбОшибке("Данные тип файла не поддерживается");
		КонецЕсли;
	ИначеЕсли ТипЗнч(Результат) = Тип("Строка") И НЕ ПустаяСтрока(Результат) Тогда
		Изображение			= ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Результат), УникальныйИдентификатор);
		Модифицированность	= Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзображениеПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	Если ЭтоУРЛ(ПараметрыПеретаскивания.Значение) Тогда
		НачатьКопированиеФайла(Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект), ПараметрыПеретаскивания.Значение, СерверныйФункции.КаталогаФайлов() + ИмяФайла(ПараметрыПеретаскивания.Значение));
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("СсылкаНаФайл") Тогда
		Если ОбщегоНазначения.РасширениеФайлаВерно(ПараметрыПеретаскивания.Значение.Расширение) Тогда
			Изображение			= ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПараметрыПеретаскивания.Значение.Файл.ПолноеИмя), УникальныйИдентификатор);
			Модифицированность	= Истина;
			СтандартнаяОбработка= Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Модифицированность Тогда
		СерверныйФункции.ПередЗаписьюНаСервереИзображение(ТекущийОбъект, Изображение, Отказ);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЧемпионатПриИзменении(Элемент)
	Туры.ЗагрузитьЗначения(ТурыПолучить(Объект.Дата, Чемпионат));
	КомандыТура.ЗагрузитьЗначения(КомандыТура());
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЧемпионатыПолучить(Дата, Команды)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Чемпионаты.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Чемпионаты КАК Чемпионаты
	                      |ГДЕ
	                      |	&Дата МЕЖДУ Чемпионаты.ДатаНачала И Чемпионаты.ДатаОкончания
	                      |	И Чемпионаты.ПометкаУдаления = ЛОЖЬ
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Ссылка");
	Если Команды.Количество() = 2 Тогда
		Запрос.Текст	= "ВЫБРАТЬ РАЗЛИЧНЫЕ
		            	  |	Чемпионаты.Ссылка КАК Ссылка
		            	  |ИЗ
		            	  |	Справочник.Чемпионаты КАК Чемпионаты
		            	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		            	  |		ПО Чемпионаты.Ссылка = ЧемпионатыКоманды.Ссылка
		            	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды2
		            	  |		ПО Чемпионаты.Ссылка = ЧемпионатыКоманды2.Ссылка
		            	  |ГДЕ
		            	  |	&Дата МЕЖДУ Чемпионаты.ДатаНачала И Чемпионаты.ДатаОкончания
		            	  |	И Чемпионаты.ПометкаУдаления = ЛОЖЬ
		            	  |	И ЧемпионатыКоманды.Команда = &Команда1
		            	  |	И ЧемпионатыКоманды2.Команда = &Команда2
		            	  |
		            	  |УПОРЯДОЧИТЬ ПО
		            	  |	Ссылка";
		Запрос.УстановитьПараметр("Команда1",		Команды.Получить(0));
		Запрос.УстановитьПараметр("Команда2",		Команды.Получить(1));
	ИначеЕсли Команды.Количество() = 1 Тогда
		Запрос.Текст	= "ВЫБРАТЬ
		            	  |	Чемпионаты.Ссылка КАК Ссылка
		            	  |ИЗ
		            	  |	Справочник.Чемпионаты КАК Чемпионаты
		            	  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		            	  |		ПО Чемпионаты.Ссылка = ЧемпионатыКоманды.Ссылка
		            	  |ГДЕ
		            	  |	&Дата МЕЖДУ Чемпионаты.ДатаНачала И Чемпионаты.ДатаОкончания
		            	  |	И Чемпионаты.ПометкаУдаления = ЛОЖЬ
		            	  |	И ЧемпионатыКоманды.Команда = &Команда1
		            	  |
		            	  |УПОРЯДОЧИТЬ ПО
		            	  |	Ссылка";
		Запрос.УстановитьПараметр("Команда1",		Команды.Получить(0));
	КонецЕсли;
	Запрос.УстановитьПараметр("Дата",		НачалоДня(Дата));
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

&НаКлиенте
Процедура ЧемпионатНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	Чемпионаты.ЗагрузитьЗначения(ЧемпионатыПолучить(Объект.Дата, КомандыПолучить()));
	Элемент.СписокВыбора.ЗагрузитьЗначения(Чемпионаты.ВыгрузитьЗначения());
КонецПроцедуры

&НаСервере
Процедура СоставыСортироватьНаСервере()
	Если Объект.Команды.Количество() = 0 Тогда Возврат;
	ИначеЕсли Объект.СоставыКоманд.Количество() = 0 Тогда Возврат;
	КонецЕсли;
	
	Запрос	= Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	      	               |	СоставКоманды.Игрок КАК Игрок,
	      	               |	СоставКоманды.Команда КАК Команда
	      	               |ПОМЕСТИТЬ СоставКоманды
	      	               |ИЗ
	      	               |	&ТЧ КАК СоставКоманды
	      	               |ГДЕ
	      	               |	СоставКоманды.Команда В(&Команды)
	      	               |;
	      	               |
	      	               |////////////////////////////////////////////////////////////////////////////////
	      	               |ВЫБРАТЬ
	      	               |	СоставКоманды.Игрок КАК Игрок,
	      	               |	СоставКоманды.Команда КАК Команда,
	      	               |	Игроки.Амплуа КАК Амплуа
	      	               |ИЗ
	      	               |	СоставКоманды КАК СоставКоманды
	      	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Игроки КАК Игроки
	      	               |		ПО СоставКоманды.Игрок = Игроки.Ссылка
	      	               |
	      	               |УПОРЯДОЧИТЬ ПО
	      	               |	СоставКоманды.Команда = &Гости,
	      	               |	Амплуа,
	      	               |	Игрок
	      	               |АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("ТЧ",			Объект.СоставыКоманд.Выгрузить());
	Запрос.УстановитьПараметр("Команды",	КомандыПолучить());
	Запрос.УстановитьПараметр("Гости",		Гости());
	Объект.СоставыКоманд.Очистить();
	СоставыКомандДобавить(Запрос.Выполнить().Выбрать());
КонецПроцедуры

&НаКлиенте
Процедура СоставыСортировать(Команда)
	СоставыСортироватьНаСервере();
КонецПроцедуры
