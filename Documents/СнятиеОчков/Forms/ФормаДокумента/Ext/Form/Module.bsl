
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("СнятиеОчков", Чемпионат());
КонецПроцедуры

&НаСервере
Функция Чемпионат()
	Если НЕ ЗначениеЗаполнено(Чемпионат) Тогда
		ЧемпионатУстановить();
	КонецЕсли;
	Возврат Чемпионат;
КонецФункции

&НаКлиенте
Процедура КартинкиЗагрузить() Экспорт
	ОбщегоНазначения.КартинкиЗагрузить(Элементы.Команда.СписокВыбора, Кеш);
КонецПроцедуры

&НаКлиенте
Процедура ТурПриИзменении(Элемент=Неопределено)
	КомандыТура.ЗагрузитьЗначения(КомандыТура());
	Элементы.Команда.СписокВыбора.ЗагрузитьЗначения(КомандыТура.ВыгрузитьЗначения());
	ПодключитьОбработчикОжидания("КартинкиЗагрузить", 0.1, Истина);
КонецПроцедуры

&НаСервере
Функция КомандыТура()
	Возврат ?(ЗначениеЗаполнено(Объект.Тур), СерверныйФункции.КомандыТура(Объект.Тур, Истина), Новый Массив);
КонецФункции

&НаСервере
Процедура ЧемпионатУстановить()
	Если ЗначениеЗаполнено(Объект.Тур) Тогда
		Чемпионат	= Объект.Тур.Владелец;
	Иначе
		Чемпионаты.ЗагрузитьЗначения(ЧемпионатыПолучить(Объект.Дата));
		Если Чемпионаты.Количество() > 0 Тогда
			Чемпионат	= Чемпионаты.Получить(0).Значение;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЧемпионатУстановить();
	ТурПриИзменении();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТурыПолучить(Дата, Чемпионат)
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	Туры.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Туры КАК Туры
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
	                      |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Страны КАК Страны
	                      |				ПО Лига.Страна = Страны.Ссылка
	                      |			ПО Чемпионаты.Владелец = Лига.Ссылка
	                      |		ПО Туры.Владелец = Чемпионаты.Ссылка
	                      |ГДЕ
	                      |	Туры.Владелец = &Чемпионат
	                      |	И &Дата МЕЖДУ НАЧАЛОПЕРИОДА(Туры.ДатаНачала, НЕДЕЛЯ) И КОНЕЦПЕРИОДА(Туры.ДатаОкончания, НЕДЕЛЯ)
	                      |	И Туры.ПометкаУдаления = ЛОЖЬ
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Туры.ДатаНачала");
	Запрос.УстановитьПараметр("Чемпионат",		Чемпионат);
	Запрос.УстановитьПараметр("Дата",			НачалоДня(Дата));
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

&НаКлиенте
Процедура ТурНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	Если Туры.Количество() = 0 Тогда
		Туры.ЗагрузитьЗначения(ТурыПолучить(Объект.Дата, Чемпионат));
	КонецЕсли;
	//Элемент.СписокВыбора.ЗагрузитьЗначения(Туры.ВыгрузитьЗначения());
КонецПроцедуры

&НаКлиенте
Процедура ЧемпионатПриИзменении(Элемент)
	Туры.ЗагрузитьЗначения(ТурыПолучить(Объект.Дата, Чемпионат));
	КомандыТура.ЗагрузитьЗначения(КомандыТура());
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЧемпионатыПолучить(Дата)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Чемпионаты.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Чемпионаты КАК Чемпионаты
	                      |ГДЕ
	                      |	&Дата МЕЖДУ Чемпионаты.ДатаНачала И Чемпионаты.ДатаОкончания
	                      |	И Чемпионаты.ПометкаУдаления = ЛОЖЬ
	                      |	И Чемпионаты.Владелец.ОлимпийскаяСистема = ЛОЖЬ
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Ссылка");
	Запрос.УстановитьПараметр("Дата",		НачалоДня(Дата));
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

&НаКлиенте
Процедура ЧемпионатНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	Чемпионаты.ЗагрузитьЗначения(ЧемпионатыПолучить(Объект.Дата));
	Элемент.СписокВыбора.ЗагрузитьЗначения(Чемпионаты.ВыгрузитьЗначения());
КонецПроцедуры
