
Процедура ПервоначальноеЗаполнение() Экспорт
	СписокШиндлера = Новый Массив;
	СписокШиндлера.Добавить("Вратарь");
	СписокШиндлера.Добавить("Защитник");
	СписокШиндлера.Добавить("Полузащитник");
	СписокШиндлера.Добавить("Нападающий");
	Для Каждого ТекЭлемент Из СписокШиндлера Цикл
		Если Амплуа(ТекЭлемент).Пустая() Тогда
			Объект = Справочники.Амплуа.СоздатьЭлемент();
			Объект.Наименование	= ТекЭлемент;
			Объект.Владелец		= Футбол();
			Объект.Записать();
		КонецЕсли;
	КонецЦикла;
	
	СписокШиндлера.Очистить();
	СписокШиндлера.Добавить("Англия");
	Для Каждого ТекЭлемент Из СписокШиндлера Цикл
		Страна = Справочники.Страны.НайтиПоНаименованию(ТекЭлемент);
		Если Страна.Пустая() Тогда
			Объект = Справочники.Страны.СоздатьЭлемент();
			Объект.Наименование	= ТекЭлемент;
			Объект.Записать();
			
			Страна = Объект.Ссылка;
		КонецЕсли;
	КонецЦикла;
	
	СписокШиндлера.Очистить();
	СписокШиндлера.Добавить("Лондон");
	СписокШиндлера.Добавить("Ливерпуль");
	СписокШиндлера.Добавить("Манчестер");
	Для Каждого ТекЭлемент Из СписокШиндлера Цикл
		Если Справочники.Города.НайтиПоНаименованию(ТекЭлемент).Пустая() Тогда
			Объект = Справочники.Города.СоздатьЭлемент();
			Объект.Наименование	= ТекЭлемент;
			Объект.Владелец		= Страна;
			//Объект.УстановитьНовыйКод();
			Объект.Записать();
		КонецЕсли;
	КонецЦикла;
	
	СписокШиндлера.Очистить();
	СписокШиндлера.Добавить("Английская премьер лига");
	Для Каждого ТекЭлемент Из СписокШиндлера Цикл
		Если Справочники.Лига.НайтиПоНаименованию(ТекЭлемент).Пустая() Тогда
			Объект = Справочники.Лига.СоздатьЭлемент();
			Объект.Наименование	= ТекЭлемент;
			Объект.Владелец		= Футбол();
			Объект.Страна		= Страна;
			Объект.КоличествоКоманд		= 20;
			Объект.КоличествоРотация	= 3;
			Объект.КвалификацияВЛигуЧемпионовУЕФА	= 4;
			Объект.КвалификацияВЛигуЕвропыУЕФА		= 1;
			Объект.Записать();
		КонецЕсли;
	КонецЦикла;
	
	ЧтениеJSON	= Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ПолучитьОбщийМакет("ПервоначальноеЗаполнение").ПолучитьТекст());
	СписокШиндлера = ПрочитатьJSON(ЧтениеJSON);
	Для Каждого ТекЭлемент Из СписокШиндлера Цикл
		Если Справочники.Команды.НайтиПоНаименованию(ТекЭлемент.Наименование).Пустая() Тогда
			Объект = Справочники.Команды.СоздатьЭлемент();
			Объект.Наименование	= ТекЭлемент.Наименование;
			Объект.Владелец		= Футбол();
			Объект.Город		= Справочники.Города.НайтиПоНаименованию(ТекЭлемент.Город);
			Объект.УстановитьНовыйКод();
			Объект.Записать();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция КомандаИгрока(Знач Игрок, Знач Дата=Неопределено) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Перемещения.Команда КАК Команда
	                      |ИЗ
	                      |	РегистрСведений.ПеремещенияИгроков.СрезПоследних(&Дата, Игрок = &Игрок) КАК Перемещения");
	Запрос.УстановитьПараметр("Игрок",			Игрок);
	Запрос.УстановитьПараметр("Дата",			?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Команда;
	КонецЕсли;
	Возврат Справочники.Команды.ПустаяСсылка();
КонецФункции

Функция КомандыЛиги(Лига) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ЧемпионатыКоманды.Команда КАК Команда
	                      |ИЗ
	                      |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
	                      |		ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
	                      |ГДЕ
	                      |	Чемпионаты.Владелец = &Лига
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Команда
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("Лига",			Лига);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

Функция КомандыСтраны(Параметр) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ЧемпионатыКоманды.Команда КАК Команда
	                      |ИЗ
	                      |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
	                      |			ПО Чемпионаты.Владелец = Лига.Ссылка
	                      |		ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
	                      |ГДЕ
	                      |	Лига.Страна = &Параметр
	                      |
	                      |ОБЪЕДИНИТЬ
	                      |
	                      |ВЫБРАТЬ
	                      |	Команды.Ссылка
	                      |ИЗ
	                      |	Справочник.Команды КАК Команды
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
	                      |		ПО Команды.Город = Города.Ссылка
	                      |ГДЕ
	                      |	Команды.ПометкаУдаления = ЛОЖЬ
	                      |	И Города.Владелец = &Параметр
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Команда
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Если ТипЗнч(Параметр) = Тип("СправочникСсылка.Лига") Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ЧемпионатыКоманды.Команда КАК Команда
		               |ИЗ
		               |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
		               |			ПО Чемпионаты.Владелец = Лига.Ссылка
		               |		ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
		               |ГДЕ
		               |	Лига.Страна В
		               |			(ВЫБРАТЬ
		               |				Лига.Страна
		               |			ИЗ
		               |				Справочник.Лига КАК Лига
		               |			ГДЕ
		               |				Лига.Ссылка = &Параметр)
		               |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ
		               |	Команды.Ссылка
		               |ИЗ
		               |	Справочник.Команды КАК Команды
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
		               |		ПО Команды.Город = Города.Ссылка
		               |ГДЕ
		               |	Команды.ПометкаУдаления = ЛОЖЬ
		               |	И Города.Владелец В
		               |			(ВЫБРАТЬ
		               |				Лига.Страна
		               |			ИЗ
		               |				Справочник.Лига КАК Лига
		               |			ГДЕ
		               |				Лига.Ссылка = &Параметр)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Команда
		               |АВТОУПОРЯДОЧИВАНИЕ";
	КонецЕсли;
	Запрос.УстановитьПараметр("Параметр",			Параметр);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

Функция КомандыТура(Тур) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Туры.Ссылка КАК Ссылка
	                      |	
	                      |ПОМЕСТИТЬ Туры
	                      |ИЗ
	                      |	Справочник.Туры КАК Туры
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры1
	                      |		ПО Туры.Владелец = Туры1.Владелец
	                      |ГДЕ
	                      |	Туры1.Ссылка = &Тур
	                      |	И Туры1.Код > Туры.Код
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Туры.Код
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТурнирнаяТаблица.Команда КАК Команда
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Туры КАК Туры
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |ГДЕ
	                      |	ТурнирнаяТаблица.КоличествоОчков >= 1
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Команда
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("Тур",			Тур);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

Функция КомандыЧемпионата(Чемпионат) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ЧемпионатыКоманды.Команда КАК Команда
	                      |ИЗ
	                      |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |ГДЕ
	                      |	ЧемпионатыКоманды.Ссылка = &Чемпионат
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Команда
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("Чемпионат",			Чемпионат);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

Функция КомандаНайти(Знач Наименование, ВидСпорта=Неопределено) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Команды.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Команды КАК Команды
	                      |ГДЕ
	                      |	Команды.Владелец = &ВидСпорта
	                      |	И (Команды.Наименование = &Наименование
	                      |			ИЛИ Команды.Комментарий ПОДОБНО &Наименование)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Команды.Наименование = &Наименование УБЫВ");
	Запрос.УстановитьПараметр("Наименование",	СокрЛП(Наименование));
	//Запрос.УстановитьПараметр("Примечание",		ВРег(Наименование));
	Запрос.УстановитьПараметр("ВидСпорта",		?(ЗначениеЗаполнено(ВидСпорта), ВидСпорта, Футбол()));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Команды.ПустаяСсылка();
КонецФункции

Функция ГородНайти(Наименование) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Города.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Города КАК Города
	                      |ГДЕ
	                      |	Города.Наименование = &Наименование
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Города.ПометкаУдаления");
	Запрос.УстановитьПараметр("Наименование",			СокрЛП(Наименование));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Города.ПустаяСсылка();
КонецФункции

Функция СтадионНайти(Параметр, Все=Ложь) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Стадионы.Ссылка КАК Ссылка,
	                      |	1 КАК Порядок
	                      |ИЗ
	                      |	Справочник.Стадионы КАК Стадионы
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Команды КАК Команды
	                      |		ПО Стадионы.Владелец = Команды.Ссылка
	                      |ГДЕ
	                      |	Стадионы.ПометкаУдаления = ЛОЖЬ
	                      |	И (Стадионы.Наименование = &Наименование
	                      |			ИЛИ Команды.Ссылка = &Параметр
	                      |			ИЛИ Команды.Наименование = &Наименование)
	                      |
	                      |ОБЪЕДИНИТЬ
	                      |
	                      |ВЫБРАТЬ
	                      |	Стадионы.Ссылка,
	                      |	2
	                      |ИЗ
	                      |	Справочник.Стадионы КАК Стадионы
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
	                      |		ПО Стадионы.Город = Города.Ссылка
	                      |ГДЕ
	                      |	Стадионы.ПометкаУдаления = ЛОЖЬ
	                      |	И (Стадионы.Город = &Параметр
	                      |			ИЛИ Стадионы.Наименование = &Наименование
	                      |			ИЛИ Города.Наименование = &Наименование)
	                      |
	                      |ОБЪЕДИНИТЬ
	                      |
	                      |ВЫБРАТЬ
	                      |	Стадионы.Ссылка,
	                      |	3
	                      |ИЗ
	                      |	Справочник.Стадионы КАК Стадионы
	                      |ГДЕ
	                      |	Стадионы.ПометкаУдаления = ЛОЖЬ
	                      |	И Стадионы.Город В
	                      |			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |				Команды.Город
	                      |			ИЗ
	                      |				Справочник.Команды КАК Команды
	                      |					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |					ПО
	                      |						Команды.Ссылка = ЧемпионатыКоманды.Команда
	                      |			ГДЕ
	                      |				ЧемпионатыКоманды.Ссылка = &Параметр)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Порядок,
	                      |	Ссылка
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("Параметр",			Параметр);
	Запрос.УстановитьПараметр("Наименование",		СокрЛП(Параметр));
	Выборка = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
	Если Все Тогда
		Возврат Выборка;
	КонецЕсли;
	//Ответ = Справочники.Стадионы.ПустаяСсылка();
	Для Каждого Ответ Из Выборка Цикл
		Прервать;
	КонецЦикла;
	Возврат Ответ;
КонецФункции

Функция ЧемпионатНайти(Параметр, Знач Дата) Экспорт
	Если ТипЗнч(Параметр) = Тип("СправочникСсылка.Туры") Тогда
		Возврат Параметр.Владелец;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Чемпионаты.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Чемпионаты.Команды КАК Чемпионаты
	                      |ГДЕ
	                      |	&ДатаН МЕЖДУ Чемпионаты.Ссылка.ДатаНачала И Чемпионаты.Ссылка.ДатаОкончания
	                      |	И Чемпионаты.Команда В(&Команды)
	                      |
	                      |ОБЪЕДИНИТЬ
	                      |
	                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ТурнирнаяТаблица.Тур.Владелец
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица.Обороты(&ДатаН, &ДатаК, , Команда В (&Команды)) КАК ТурнирнаяТаблица");
	//Если ТипЗнч(Команды) = Тип("СправочникСсылка.Команды") Тогда
	//КонецЕсли;
	Запрос.УстановитьПараметр("Команды",	Параметр);
	Запрос.УстановитьПараметр("ДатаН",		НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаК",		КонецДня(Дата));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Чемпионаты.ПустаяСсылка();
КонецФункции

Функция ЧемпионатПолучитьПоследнее(Команды=Неопределено, ОлимпийскаяСистема=Ложь) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	ТурнирнаяТаблица.Тур.Владелец КАК Ссылка
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
	                      |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
	                      |				ПО Чемпионаты.Владелец = Лига.Ссылка
	                      |			ПО Туры.Владелец = Чемпионаты.Ссылка
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |ГДЕ
	                      |	ТурнирнаяТаблица.Команда В(&Команды)
	                      |	И Чемпионаты.ОлимпийскаяСистема = &Система
	                      |	И (Лига.Страна.Ссылка ЕСТЬ NULL) = ЛОЖЬ
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ТурнирнаяТаблица.Период УБЫВ");
	Запрос.УстановитьПараметр("Команды",	Команды);
	Запрос.УстановитьПараметр("Система",	ОлимпийскаяСистема);
	Если НЕ ЗначениеЗаполнено(Команды) Тогда
		Запрос.УстановитьПараметр("Команды",	МояКомандаПолучить());
		Запрос.УстановитьПараметр("Система",	Ложь);
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Чемпионаты.ПустаяСсылка();
КонецФункции

Функция ЧемпионатЛигиПоследний(Лига) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	ТурнирнаяТаблица.Тур.Владелец КАК Ссылка,
	                      |	ТурнирнаяТаблица.Период КАК Период
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |ГДЕ
	                      |	ТурнирнаяТаблица.Тур.Владелец.Владелец = &Лига
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Период УБЫВ");
	Запрос.УстановитьПараметр("Лига",	Лига);
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат ?(Выборка.Следующий(), Выборка.Ссылка, Справочники.Чемпионаты.ПустаяСсылка());
КонецФункции

Функция Тур(Команды, Дата) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Туры.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Туры КАК Туры
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты.Команды КАК Чемпионаты
	                      |		ПО Туры.Владелец = Чемпионаты.Ссылка
	                      |ГДЕ
	                      |	&Дата МЕЖДУ Туры.ДатаНачала И Туры.ДатаОкончания
	                      |	И Чемпионаты.Команда В(&Команды)");
	//Если ТипЗнч(Команды) = Тип("СправочникСсылка.Команды") Тогда
	//КонецЕсли;
	Запрос.УстановитьПараметр("Команды",	Команды);
	Запрос.УстановитьПараметр("Дата",		НачалоДня(Дата));
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат ?(Выборка.Следующий(), Выборка.Ссылка, Справочники.Чемпионаты.ПустаяСсылка());
КонецФункции

Функция ВидСпорта(Знач Ссылка) Экспорт
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.ВидыСпорта") Тогда
		Возврат Ссылка;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Команды") Тогда
		Возврат Ссылка.Владелец;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Лига") Тогда
		Возврат Ссылка.Владелец;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Амплуа") Тогда
		Возврат Ссылка.Владелец;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Чемпионаты") Тогда
		Возврат Ссылка.Владелец.Владелец;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Туры") Тогда
		Возврат Ссылка.Владелец.Владелец.Владелец;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Стадионы") Тогда
		Возврат Ссылка.Владелец.Владелец;
		
	КонецЕсли;
	Возврат Справочники.ВидыСпорта.ПустаяСсылка();
КонецФункции

Функция Лига(Знач Чемпионат) Экспорт
	Если ТипЗнч(Чемпионат) = Тип("СправочникСсылка.Туры") Тогда
		Возврат Чемпионат.Владелец.Владелец;
	КонецЕсли;
	Возврат Чемпионат.Владелец;
КонецФункции

Функция ЛигаКоличествоКоманд(Знач Лига) Экспорт
	Возврат Лига.КоличествоКоманд;
КонецФункции

Функция МатчОбработкаПроверкиЗаполнения(Объект) Экспорт
	Отказ= Ложь;
	Гугл = Новый Структура("Команда");
	Для Каждого тСтрока Из Объект.СоставыКоманд Цикл
		Если ЗначениеЗаполнено(тСтрока.Команда) Тогда
			Гугл.Команда = тСтрока.Команда;
			Если Объект.Команды.НайтиСтроки(Гугл).Количество() = 0 Тогда
				Отказ = Истина;
			КонецЕсли;
		ИначеЕсли Отказ Тогда
			Прервать;
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат Отказ;
КонецФункции

Функция МатчНайти(Команда, Тур) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	МатчКоманды.Ссылка КАК Ссылка,
	                      |	ВЫБОР
	                      |		КОГДА МатчКоманды.Ссылка.Проведен = ИСТИНА
	                      |			ТОГДА 1
	                      |		КОГДА МатчКоманды.Ссылка.ПометкаУдаления = ЛОЖЬ
	                      |			ТОГДА 2
	                      |		ИНАЧЕ 3
	                      |	КОНЕЦ КАК Порядок
	                      |ИЗ
	                      |	Документ.Матч.Команды КАК МатчКоманды
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч КАК Матч
	                      |		ПО МатчКоманды.Ссылка = Матч.Ссылка
	                      |ГДЕ
	                      |	МатчКоманды.Команда = &Команда
	                      |	И Матч.Тур = &Тур
	                      |
	                      |ОБЪЕДИНИТЬ
	                      |
	                      |ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Матч.Ссылка,
	                      |	20
	                      |ИЗ
	                      |	Документ.Матч КАК Матч
	                      |ГДЕ
	                      |	Матч.ПометкаУдаления = ИСТИНА
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Порядок");
	Запрос.УстановитьПараметр("Команда",	Команда);
	Запрос.УстановитьПараметр("Тур",		Тур);
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат ?(Выборка.Следующий(), Выборка.Ссылка, Документы.Матч.ПустаяСсылка());
КонецФункции

Функция ТурнирнаяТаблица(Знач Чемпионат) Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Команды.Команда КАК Команда,
	|	СУММА(ВЫБОР
	|			КОГДА ТурнирнаяТаблица.Регистратор ЕСТЬ NULL
	|				ТОГДА 0
	|			КОГДА ТИПЗНАЧЕНИЯ(ТурнирнаяТаблица.Регистратор) = ТИП(Документ.Матч)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоИгр,
	|	ЕСТЬNULL(СУММА(ТурнирнаяТаблица.КоличествоГолов), 0) КАК Забито,
	|	ЕСТЬNULL(СУММА(ТурнирнаяТаблица.КоличествоОчков), 0) КАК КоличествоОчков,
	|	СУММА(ВЫБОР
	|			КОГДА ТурнирнаяТаблица.КоличествоОчков > Игра.КоличествоОчков
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Выигрыш,
	|	СУММА(ВЫБОР
	|			КОГДА ТурнирнаяТаблица.КоличествоОчков = Игра.КоличествоОчков
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Ничья,
	|	СУММА(ВЫБОР
	|			КОГДА ТурнирнаяТаблица.КоличествоОчков < Игра.КоличествоОчков
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Проигрыш,
	|	ЕСТЬNULL(СУММА(Игра.КоличествоГолов), 0) КАК Пропущено,
	|	ЕСТЬNULL(СУММА(ТурнирнаяТаблица.КоличествоГолов) - СУММА(Игра.КоличествоГолов), 0) КАК Разница
	|ИЗ
	|	Справочник.Чемпионаты.Команды КАК Команды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	|			ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	|				И (Туры.Владелец = &Чемпионат)
	|		ПО Команды.Команда = ТурнирнаяТаблица.Команда
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК Игра
	|		ПО (ТурнирнаяТаблица.Регистратор = Игра.Регистратор)
	|			И (ТурнирнаяТаблица.НомерСтроки <> Игра.НомерСтроки)
	|ГДЕ
	|	Команды.Ссылка = &Чемпионат
	|
	|СГРУППИРОВАТЬ ПО
	|	Команды.Команда
	|
	|УПОРЯДОЧИТЬ ПО
	|	КоличествоОчков УБЫВ,
	|	Разница УБЫВ,
	|	Забито УБЫВ");
	Запрос.УстановитьПараметр("Чемпионат",		Чемпионат);
	Возврат Запрос.Выполнить().Выбрать();
КонецФункции

Функция КомандаЧемпионата(Знач Чемпионат=Неопределено) Экспорт
	Если ЗначениеЗаполнено(Чемпионат) Тогда
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЧемпионатыКоманды.Команда КАК Команда
		|ИЗ
		|	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		|ГДЕ
		|	ЧемпионатыКоманды.Команда = &Команда
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЧемпионатыКоманды.Ссылка = &Ссылка УБЫВ");
		Запрос.УстановитьПараметр("Команда",	МояКомандаПолучить());
		Запрос.УстановитьПараметр("Ссылка",		Чемпионат);
		Выборка = Запрос.Выполнить().Выбрать();
		Возврат ?(Выборка.Следующий(), Выборка.Команда, Справочники.Команды.ПустаяСсылка());
	КонецЕсли;
	Возврат МояКомандаПолучить();
КонецФункции

Функция МояКомандаПолучить() Экспорт
	Возврат Константы.МояКоманда.Получить();
КонецФункции

Функция СтатистикаИгр(Знач Команда, Знач Чемпионат=Неопределено, Период=Неопределено) Экспорт
	Итоги	= Новый Структура("Побед,Ничьих,Проигрышей,Количество,Результативность", 0, 0, 0, 0, 0);
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТурнирнаяТаблица.КоличествоОчков КАК КоличествоОчков,
	                      |	СУММА(1) КАК Количество,
	                      |	СУММА(ТурнирнаяТаблица.КоличествоГолов) КАК КоличествоГолов
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч КАК Матч
	                      |		ПО ТурнирнаяТаблица.Регистратор = Матч.Ссылка
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |ГДЕ
	                      |	ТурнирнаяТаблица.Команда = &Команда
	                      |	И ТурнирнаяТаблица.Период >= &ДатаН
	                      |	И ТурнирнаяТаблица.Период < &ДатаК
	                      |	И Туры.Владелец = &Чемпионат
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ТурнирнаяТаблица.КоличествоОчков
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	КоличествоОчков");
	Запрос.УстановитьПараметр("Команда",	Команда);
	Запрос.УстановитьПараметр("Чемпионат",	Чемпионат);
	Запрос.УстановитьПараметр("ДатаК",		?(Период=Неопределено, ТекущаяДатаСеанса(), Период));
	Запрос.УстановитьПараметр("ДатаН",		НачалоМесяца(ДобавитьМесяц(Запрос.Параметры.ДатаК, -12)));
	Если НЕ ЗначениеЗаполнено(Чемпионат) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Туры.Владелец = &Чемпионат", "");
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.КоличествоОчков = 0 Тогда
			Итоги.Проигрышей = Выборка.Количество;
		ИначеЕсли Выборка.КоличествоОчков = 1 Тогда
			Итоги.Ничьих = Выборка.Количество;
		Иначе
			Итоги.Побед = Выборка.Количество;
		КонецЕсли;
		Итоги.Количество		= Итоги.Количество + Выборка.Количество;
		Итоги.Результативность	= Итоги.Результативность + Выборка.КоличествоГолов;
	КонецЦикла;
	Ответ = Новый Соответствие;
	Ответ.Вставить("Проигрышей",		Итоги.Проигрышей);
	Ответ.Вставить("Ничьих",			Итоги.Ничьих);
	Ответ.Вставить("Побед",				Итоги.Побед);
	Ответ.Вставить(?(ЗначениеЗаполнено(Чемпионат), "Игр с начала сезона", "Игр за год"),		Итоги.Количество);
	Если Итоги.Количество = 0 Тогда
		Ответ.Вставить("Результативность средняя", 0);
	Иначе
		Ответ.Вставить("Результативность средняя", Окр(Итоги.Результативность / Итоги.Количество, 1));
	КонецЕсли;
	Ответ.Вставить("Результативность",	Итоги.Результативность);
	Возврат Ответ;
КонецФункции

Функция МестоВЧемпионате(Знач Команда, Знач Чемпионат=Неопределено) Экспорт
	Ответ = 0;
	Выборка = ТурнирнаяТаблица(?(Чемпионат=Неопределено, ЧемпионатПолучитьПоследнее(Команда), Чемпионат));
	Пока Выборка.Следующий() Цикл
		Ответ = Ответ + 1;
		Если Выборка.Команда = Команда Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат Ответ;
КонецФункции

Функция ЭтоДерби(Матч) Экспорт
	Ответ	= Ложь;
	Запрос	= Новый Запрос(
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(Команды.Город) + КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Команды.Город) КАК Количество
	|ИЗ
	|	Документ.Матч.Команды КАК МатчКоманды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Команды КАК Команды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
	|			ПО Команды.Город = Города.Ссылка
	|		ПО МатчКоманды.Команда = Команды.Ссылка
	|ГДЕ
	|	МатчКоманды.Ссылка = &Матч");
	Запрос.УстановитьПараметр("Матч",	Матч);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Ответ = (Выборка.Количество = 3);
	КонецЕсли;
	Возврат Ответ;
КонецФункции

Функция ЕстьИстория(Ссылка, Вторая=Неопределено) Экспорт
		//Возврат Ложь;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",			Ссылка);
	Запрос.УстановитьПараметр("Вторая",			Вторая);
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Команды") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	ТурнирнаяТаблица.Период КАК Период
		               |ИЗ
		               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |ГДЕ
		               |	ТурнирнаяТаблица.Команда = &Ссылка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Период";
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Лига") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Чемпионаты.Ссылка КАК Ссылка
		               |ИЗ
		               |	Справочник.Чемпионаты КАК Чемпионаты
		               |ГДЕ
		               |	Чемпионаты.Владелец = &Ссылка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Ссылка";
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Чемпионаты") Тогда
		Если Вторая = Неопределено Тогда
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			               |	Туры.Ссылка КАК Ссылка
			               |ИЗ
			               |	Справочник.Туры КАК Туры
			               |ГДЕ
			               |	Туры.Владелец = &Ссылка
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	Ссылка";
		Иначе
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	ТурнирнаяТаблица.Период КАК Период
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |ГДЕ
	                      |	ТурнирнаяТаблица.Команда = &Вторая
	                      |	И Туры.Владелец = &Ссылка
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Период";
		КонецЕсли;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	Возврат (НЕ Запрос.Выполнить().Пустой());
КонецФункции

Функция ИзображениеПолучить(Ссылка) Экспорт
	Возврат Новый Картинка(Ссылка.Изображение.Получить());
КонецФункции

Функция ИзображениеДефолтПолучить() Экспорт
	Возврат "";
КонецФункции

Функция ВидыСпорта(Наименование="Футбол") Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВидыСпорта.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыСпорта КАК ВидыСпорта
	|ГДЕ
	|	ВидыСпорта.Наименование = &Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидыСпорта.ПометкаУдаления");
	Запрос.УстановитьПараметр("Наименование",		СокрЛП(Наименование));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.ВидыСпорта.ПустаяСсылка();
КонецФункции

Функция Футбол() Экспорт
	Возврат Справочники.ВидыСпорта.Футбол;
КонецФункции

Функция Амплуа(Наименование="Вратарь") Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Амплуа.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Амплуа КАК Амплуа
	|ГДЕ
	|	Амплуа.Наименование = &Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Амплуа.ПометкаУдаления");
	Запрос.УстановитьПараметр("Наименование",		СокрЛП(Наименование));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Амплуа.ПустаяСсылка();
КонецФункции

Функция Игрок(Наименование) Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Игроки.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Игроки КАК Игроки
	|ГДЕ
	|	Игроки.Наименование = &Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Игроки.ПометкаУдаления");
	Запрос.УстановитьПараметр("Наименование",		СокрЛП(Наименование));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Игроки.ПустаяСсылка();
КонецФункции

Функция СтранаНайти(Параметр) Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Страны.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Страны КАК Страны
	|ГДЕ
	|	Страны.Наименование = &Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страны.ПометкаУдаления");
	Запрос.УстановитьПараметр("Параметр",		Параметр);
	Запрос.УстановитьПараметр("Наименование",	СокрЛП(Параметр));
	Если ТипЗнч(Параметр) = Тип("СправочникСсылка.Туры") Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	Лига.Страна КАК Ссылка,
		               |	1 КАК Порядок
		               |ИЗ
		               |	Справочник.Туры КАК Туры
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
		               |			ПО Чемпионаты.Владелец = Лига.Ссылка
		               |		ПО Туры.Владелец = Чемпионаты.Ссылка
		               |ГДЕ
		               |	Туры.Ссылка = &Параметр
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	Города.Владелец,
		               |	2
		               |ИЗ
		               |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
		               |		ПО ЧемпионатыКоманды.Ссылка = Туры.Владелец
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Команды КАК Команды
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
		               |			ПО Команды.Город = Города.Ссылка
		               |		ПО ЧемпионатыКоманды.Команда = Команды.Ссылка
		               |ГДЕ
		               |	Туры.Ссылка = &Параметр
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Порядок";
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Страны.ПустаяСсылка();
КонецФункции

Функция ПолучитьЭлементыПоИмени(Гиперссылка, Имя="td") Экспорт
	Текст	= ОбщегоНазначения.СкачатьПоСсылке(Гиперссылка);
	Если ПустаяСтрока(Текст) Тогда Возврат Новый Массив; КонецЕсли;
	
	Ответ = Новый Массив;
	ЧтениеHTML = Новый ЧтениеHTML;
	ЧтениеHTML.УстановитьСтроку(Текст);
	ПостроительDOM = Новый ПостроительDOM;
	ДокументHTML = ПостроительDOM.Прочитать(ЧтениеHTML);
	Элементы = ДокументHTML.ПолучитьЭлементыПоИмени(Имя);
	Для Каждого Элемент Из Элементы Цикл
		Если НЕ ПустаяСтрока(Элемент.ТекстовоеСодержимое) Тогда
			Ответ.Добавить(СокрЛП(Элемент.ТекстовоеСодержимое));
		КонецЕсли;
	КонецЦикла;
	Возврат Ответ;
КонецФункции
