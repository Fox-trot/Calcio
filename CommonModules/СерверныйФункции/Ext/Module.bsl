
Функция НайтиПоНаименованию(Наименование, СправочникИмя) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Справочник.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.ВидыСпорта КАК Справочник
	                      |ГДЕ
	                      |	Справочник.Наименование = &Наименование
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Справочник.ПометкаУдаления");
	Запрос.УстановитьПараметр("Наименование",			Наименование);
	Запрос.Текст	= СтрЗаменить(Запрос.Текст, "ВидыСпорта", СправочникИмя);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники[СправочникИмя].ПустаяСсылка();
КонецФункции

Процедура ПервоначальноеЗаполнение() Экспорт
	СписокШиндлера = Новый Массив;
	СписокШиндлера.Добавить("Вратарь");
	СписокШиндлера.Добавить("Защитник");
	СписокШиндлера.Добавить("Полузащитник");
	СписокШиндлера.Добавить("Нападающий");
	Для Каждого ТекЭлемент Из СписокШиндлера Цикл
		Если Амплуа(ТекЭлемент).Пустая() Тогда
			Объект = Справочники.Амплуа.СоздатьЭлемент();
			Объект.Наименование	= ТекЭлемент;
			Объект.Владелец		= Футбол();
			Объект.УстановитьНовыйКод();
			Объект.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Страна = Справочники.Страны.ПустаяСсылка();
	СписокШиндлера.Очистить();
	СписокШиндлера.Добавить("Англия");
	Для Каждого ТекЭлемент Из СписокШиндлера Цикл
		Страна = НайтиПоНаименованию(ТекЭлемент, "Страны");
		Если Страна.Пустая() Тогда
			Объект = Справочники.Страны.СоздатьЭлемент();
			Объект.Наименование	= ТекЭлемент;
			Объект.Записать();
			
			Страна = Объект.Ссылка;
		КонецЕсли;
	КонецЦикла;
	
	Лига = Неопределено;
	СписокШиндлера.Очистить();
	СписокШиндлера.Добавить("Английская премьер лига");
	Для Каждого ТекЭлемент Из СписокШиндлера Цикл
		Ссылка = НайтиПоНаименованию(ТекЭлемент, "Лига");
		Если Ссылка.Пустая() Тогда
			Объект = Справочники.Лига.СоздатьЭлемент();
			Объект.Наименование	= ТекЭлемент;
			Объект.Владелец		= Футбол();
			Объект.Страна		= Страна;
			Объект.КоличествоКоманд		= 20;
			Объект.КоличествоРотация	= 3;
			Объект.КвалификацияВЛигуЧемпионовУЕФА	= 4;
			Объект.КвалификацияВЛигуЕвропыУЕФА		= 2;
			Объект.УстановитьНовыйКод();
			Объект.Записать();
			
			Лига = Объект;
		Иначе
			Лига = Ссылка.ПолучитьОбъект();
		КонецЕсли;
	КонецЦикла;
	
	ЧтениеJSON	= Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ПолучитьОбщийМакет("ПервоначальноеЗаполнение").ПолучитьТекст());
	СписокШиндлера = ПрочитатьJSON(ЧтениеJSON);
	
	Для Каждого ТекЭлемент Из СписокШиндлера Цикл
		Если НайтиПоНаименованию(ТекЭлемент.Город, "Города").Пустая() Тогда
			Объект = Справочники.Города.СоздатьЭлемент();
			Объект.Наименование	= ТекЭлемент.Город;
			Объект.Владелец		= Страна;
			Объект.УстановитьНовыйКод();
			Объект.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ТекЭлемент Из СписокШиндлера Цикл
		Команда = КомандаНайти(ТекЭлемент.Наименование, Страна);
		Если Команда.Пустая() Тогда
			Команда = КомандыСоздать(ТекЭлемент.Наименование, ТекЭлемент.Город);
		КонецЕсли;
		Если ЗначениеЗаполнено(Команда) Тогда
			Если ТипЗнч(Лига) = Тип("СправочникОбъект.Лига") Тогда
				Гугл = Новый Структура("Команда", Команда);
				Если Лига.Команды.НайтиСтроки(Гугл).Количество() = 0 Тогда
					ЗаполнитьЗначенияСвойств(Лига.Команды.Добавить(), Гугл);
				КонецЕсли;
			КонецЕсли;
			Если СтрСравнить(ТекЭлемент.Наименование, "Арсенал") = 0 Тогда
				Константы.МояКоманда.Установить(Команда);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если ТипЗнч(Лига) = Тип("СправочникОбъект.Лига") И Лига.Модифицированность() Тогда
		Объект.Записать();
	КонецЕсли;
КонецПроцедуры

Функция КомандыСоздать(Наименование, Город="", ВидыСпорта=Неопределено) Экспорт
	Объект = Справочники.Команды.СоздатьЭлемент();
	Объект.Наименование	= Наименование;
	Объект.Владелец		= ?(ВидыСпорта=Неопределено, Футбол(), ВидыСпорта);
	Объект.Город		= НайтиПоНаименованию(?(ПустаяСтрока(Город), Наименование, Город), "Города");
	Объект.УстановитьНовыйКод();
	Попытка
		Объект.Записать();
		Возврат Объект.Ссылка;
	Исключение
	КонецПопытки;
	Возврат Справочники.Команды.ПустаяСсылка();
КонецФункции
		
Функция КомандаИгрока(Игрок, Дата=Неопределено) Экспорт
	Если ЗначениеЗаполнено(Игрок) Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	Перемещения.Команда КАК Команда
		                      |ИЗ
		                      |	РегистрСведений.ПеремещенияИгроков.СрезПоследних(&Дата, Игрок = &Игрок) КАК Перемещения");
		Запрос.УстановитьПараметр("Игрок",			Игрок);
		Запрос.УстановитьПараметр("Дата",			?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Команда;
		КонецЕсли;
	КонецЕсли;
	Возврат Справочники.Команды.ПустаяСсылка();
КонецФункции

Функция КомандыЛиги(Лига, Топ6=Ложь) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Команды.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Команды КАК Команды
	                      |ГДЕ
	                      |	Команды.ПометкаУдаления = ЛОЖЬ
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Ссылка");
	Если Топ6 Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЛигаКоманды.Команда КАК Команда
		               |ИЗ
		               |	Справочник.Лига.Команды КАК ЛигаКоманды
		               |ГДЕ
		               |	ЛигаКоманды.Ссылка = &Лига";
	ИначеЕсли ЗначениеЗаполнено(Лига.Страна) Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ЧемпионатыКоманды.Команда КАК Команда
		               |ИЗ
		               |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
		               |		ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
		               |ГДЕ
		               |	Чемпионаты.Владелец = &Лига
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Команда
		               |АВТОУПОРЯДОЧИВАНИЕ";
	КонецЕсли;
	Запрос.УстановитьПараметр("Лига",			Лига);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

Функция КомандыСтраны(Параметр) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ЧемпионатыКоманды.Команда КАК Команда
	                      |ИЗ
	                      |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
	                      |			ПО Чемпионаты.Владелец = Лига.Ссылка
	                      |		ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
	                      |ГДЕ
	                      |	Лига.Страна = &Параметр
	                      |
	                      |ОБЪЕДИНИТЬ
	                      |
	                      |ВЫБРАТЬ
	                      |	Команды.Ссылка
	                      |ИЗ
	                      |	Справочник.Команды КАК Команды
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
	                      |		ПО Команды.Город = Города.Ссылка
	                      |ГДЕ
	                      |	Команды.ПометкаУдаления = ЛОЖЬ
	                      |	И Города.Владелец = &Параметр
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Команда
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Если ТипЗнч(Параметр) = Тип("СправочникСсылка.Лига") И ЗначениеЗаполнено(Параметр.Страна) Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	СправочникКоманды.Ссылка КАК Команда
		               |ИЗ
		               |	Справочник.Команды КАК СправочникКоманды
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
		               |			ПО Города.Владелец = Лига.Страна
		               |		ПО СправочникКоманды.Город = Города.Ссылка
		               |ГДЕ
		               |	СправочникКоманды.ПометкаУдаления = ЛОЖЬ
		               |	И СправочникКоманды.Владелец = Лига.Владелец
		               |	И Лига.Ссылка = &Параметр
		               |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ЧемпионатыКоманды.Команда
		               |ИЗ
		               |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
		               |		ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
		               |ГДЕ
		               |	Чемпионаты.Владелец = &Параметр
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Команда
		               |АВТОУПОРЯДОЧИВАНИЕ";
	ИначеЕсли ТипЗнч(Параметр) = Тип("СправочникСсылка.Лига") Тогда
		Возврат КомандыЛиги(Параметр);
	КонецЕсли;
	Запрос.УстановитьПараметр("Параметр",			Параметр);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

Функция КомандыТура(Тур, Все=Ложь) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЧемпионатыКоманды.Команда КАК Команда
	                      |ИЗ
	                      |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ПО ЧемпионатыКоманды.Команда = ТурнирнаяТаблица.Команда И Тур = &Тур
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |		ПО ЧемпионатыКоманды.Ссылка = Туры.Владелец
	                      |ГДЕ
	                      |	Туры.Ссылка = &Тур
	                      |	И ТурнирнаяТаблица.Команда ЕСТЬ NULL
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Команда
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Если Тур.ОлимпийскаяСистема Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	Туры.Ссылка КАК Тур,
		               |	Туры.ДатаОкончания КАК ДатаОкончания,
		               |	ТурнирнаяТаблица.Команда КАК Команда,
		               |	СУММА(ТурнирнаяТаблица.КоличествоГолов) КАК КоличествоГолов,
		               |	МАКСИМУМ(ТурнирнаяТаблица.Регистратор) КАК Регистратор
		               |ПОМЕСТИТЬ Туры
		               |ИЗ
		               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры1
		               |			ПО Туры.Владелец = Туры1.Владелец
		               |				И Туры.Код < Туры1.Код
		               |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
		               |ГДЕ
		               |	Туры1.Ссылка = &Тур
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	Туры.Ссылка,
		               |	Туры.ДатаОкончания,
		               |	ТурнирнаяТаблица.Команда
		               |
		               |ИМЕЮЩИЕ
		               |	Туры.ДатаОкончания = МАКСИМУМ(Туры.ДатаОкончания)
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ТурнирнаяТаблица.Команда КАК Команда
		               |ИЗ
		               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |ГДЕ
		               |	ТурнирнаяТаблица.Тур = &Тур
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ТурнирнаяТаблица.Команда
		               |
		               |ИМЕЮЩИЕ
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТурнирнаяТаблица.Регистратор) = 1
		               |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ЧемпионатыКоманды.Команда
		               |ИЗ
		               |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Туры КАК Туры
		               |			ПО ТурнирнаяТаблица.Регистратор = Туры.Регистратор
		               |				И ТурнирнаяТаблица.Тур = Туры.Тур
		               |				И ТурнирнаяТаблица.Команда <> Туры.Команда
		               |		ПО ЧемпионатыКоманды.Команда = ТурнирнаяТаблица.Команда
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры1
		               |		ПО ЧемпионатыКоманды.Ссылка = Туры1.Владелец
		               |ГДЕ
		               |	Туры1.Ссылка = &Тур
		               |	И ВЫБОР
		               |			КОГДА ЕСТЬNULL(ТурнирнаяТаблица.КоличествоОчков, 0) >= 4
		               |				ТОГДА ИСТИНА
		               |			КОГДА ЕСТЬNULL(ТурнирнаяТаблица.КоличествоОчков, 0) >= 2
		               |				ТОГДА ТурнирнаяТаблица.КоличествоГолов > Туры.КоличествоГолов
		               |			ИНАЧЕ ТурнирнаяТаблица.КоличествоОчков ЕСТЬ NULL
		               |		КОНЕЦ
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Команда
		               |АВТОУПОРЯДОЧИВАНИЕ";
	ИначеЕсли Все Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЧемпионатыКоманды.Команда КАК Команда
		               |ИЗ
		               |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |		ПО ЧемпионатыКоманды.Команда = ТурнирнаяТаблица.Команда
		               |			И (ТурнирнаяТаблица.Тур = &Тур)
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
		               |		ПО ЧемпионатыКоманды.Ссылка = Туры.Владелец
		               |ГДЕ
		               |	Туры.Ссылка = &Тур
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Команда
		               |АВТОУПОРЯДОЧИВАНИЕ";
	КонецЕсли;
	Запрос.УстановитьПараметр("Тур",			Тур);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

Функция КомандыЧемпионата(Чемпионат) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ЧемпионатыКоманды.Команда КАК Команда
	                      |ИЗ
	                      |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |ГДЕ
	                      |	ЧемпионатыКоманды.Ссылка = &Чемпионат
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Команда
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("Чемпионат",			Чемпионат);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

Функция КомандаНайти(Наименование, Владелец=Неопределено) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Команды.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Команды КАК Команды
	                      |ГДЕ
	                      |	Команды.Владелец = &ВидСпорта
	                      |	И (Команды.Наименование = &Наименование
	                      |			ИЛИ Команды.Комментарий ПОДОБНО &Комментарий)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Команды.Наименование = &Наименование УБЫВ,
	                      |	Команды.ПометкаУдаления");
	Запрос.УстановитьПараметр("ВидСпорта",		?(ЗначениеЗаполнено(Владелец), Владелец, Футбол()));
	Если ТипЗнч(Владелец) = Тип("СправочникСсылка.Чемпионаты") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	_Команды.Ссылка КАК Ссылка,
		               |	СУММА(ВЫБОР
		               |			КОГДА Страны.Ссылка ЕСТЬ NULL
		               |				ТОГДА 0
		               |			ИНАЧЕ 1
		               |		КОНЕЦ) КАК Количество
		               |ИЗ
		               |	Справочник.Команды КАК _Команды
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
		               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
		               |					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Страны КАК Страны
		               |					ПО Лига.Страна = Страны.Ссылка
		               |				ПО Чемпионаты.Владелец = Лига.Ссылка
		               |			ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
		               |		ПО _Команды.Ссылка = ЧемпионатыКоманды.Команда
		               |ГДЕ
		               |	ЧемпионатыКоманды.Ссылка = &Чемпионат
		               |	И (_Команды.Наименование = &Наименование
		               |			ИЛИ _Команды.Комментарий ПОДОБНО &Комментарий)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	_Команды.Ссылка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Количество УБЫВ,
		               |	_Команды.Наименование = &Наименование УБЫВ,
		               |	_Команды.ПометкаУдаления";
		Запрос.УстановитьПараметр("Чемпионат",		Владелец);
	ИначеЕсли ТипЗнч(Владелец) = Тип("СправочникСсылка.Страны") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Команды.Ссылка КАК Ссылка
		               |ИЗ
		               |	Справочник.Команды КАК Команды
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
		               |		ПО Команды.Город = Города.Ссылка
		               |ГДЕ
		               |	(Команды.Наименование = &Наименование
		               |			ИЛИ Команды.Комментарий ПОДОБНО &Комментарий)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Города.Владелец = &Страна УБЫВ,
		               |	Команды.Наименование = &Наименование УБЫВ,
		               |	Команды.ПометкаУдаления";
		Запрос.УстановитьПараметр("Страна",			Владелец);
	КонецЕсли;
	Запрос.УстановитьПараметр("Наименование",	СокрЛП(Наименование));
	Запрос.УстановитьПараметр("Комментарий",	"%" + СокрЛП(Наименование) + "%");
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Команды.ПустаяСсылка();
КонецФункции

Функция ГородНайти(Наименование) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Города.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Города КАК Города
	                      |ГДЕ
	                      |	(Города.Наименование = &Наименование
	                      |			ИЛИ Города.Комментарий ПОДОБНО &Комментарий)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Города.Наименование = &Наименование УБЫВ,
	                      |	Города.ПометкаУдаления");
	Запрос.УстановитьПараметр("Наименование",			СокрЛП(Наименование));
	Запрос.УстановитьПараметр("Комментарий",			"%" + СокрЛП(Наименование) + "%");
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Города.ПустаяСсылка();
КонецФункции

Функция СтадионНайти(Параметр, Все=Ложь) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Стадионы.Ссылка КАК Ссылка,
	                      |	1 КАК Порядок
	                      |ПОМЕСТИТЬ ВТ
	                      |ИЗ
	                      |	Справочник.Стадионы КАК Стадионы
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Команды КАК Команды
	                      |		ПО Стадионы.Владелец = Команды.Ссылка
	                      |ГДЕ
	                      |	Стадионы.ПометкаУдаления = ЛОЖЬ
	                      |	И (Стадионы.Наименование = &Наименование
						  |			ИЛИ Стадионы.Комментарий ПОДОБНО &Комментарий
	                      |			ИЛИ Команды.Ссылка = &Параметр
	                      |			ИЛИ Команды.Наименование = &Наименование)
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	Стадионы.Ссылка,
	                      |	2
	                      |ИЗ
	                      |	Справочник.Стадионы КАК Стадионы
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
	                      |		ПО Стадионы.Город = Города.Ссылка
	                      |ГДЕ
	                      |	Стадионы.ПометкаУдаления = ЛОЖЬ
	                      |	И (Стадионы.Город = &Параметр
	                      |			ИЛИ Стадионы.Наименование = &Наименование
	                      |			ИЛИ Стадионы.Комментарий ПОДОБНО &Комментарий
	                      |			ИЛИ Города.Наименование = &Наименование)
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	Стадионы.Ссылка,
	                      |	3
	                      |ИЗ
	                      |	Справочник.Стадионы КАК Стадионы
	                      |ГДЕ
	                      |	Стадионы.ПометкаУдаления = ЛОЖЬ
	                      |	И Стадионы.Город В
	                      |			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |				ВсеКоманды.Город
	                      |			ИЗ
	                      |				Справочник.Команды КАК ВсеКоманды
	                      |					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |						ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
	                      |							ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
	                      |							ПО Чемпионаты.Владелец = Лига.Ссылка
	                      |						ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
	                      |					ПО
	                      |						ВсеКоманды.Ссылка = ЧемпионатыКоманды.Команда
	                      |			ГДЕ
	                      |				ЧемпионатыКоманды.Ссылка = &Параметр
	                      |				И Лига.ОлимпийскаяСистема = ИСТИНА)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ.Ссылка КАК Ссылка,
	                      |	ВТ.Порядок КАК Порядок
	                      |ИЗ
	                      |	ВТ КАК ВТ
						  //|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Стадионы КАК Стадионы
						  //|		ПО ВТ.Ссылка = Стадионы.Ссылка
						  //|ГДЕ
						  //|	Стадионы.ПометкаУдаления = ЛОЖЬ
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ.Ссылка,
	                      |	ВТ.Порядок
	                      |
	                      |ИМЕЮЩИЕ
	                      |	ВТ.Порядок = МИНИМУМ(ВТ.Порядок)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Порядок,
	                      |	Ссылка
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("Параметр",			Параметр);
	Запрос.УстановитьПараметр("Наименование",		СокрЛП(Параметр));
	Запрос.УстановитьПараметр("Комментарий",		"%" + СокрЛП(Параметр) + "%");
	Выборка = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
	Если Все Тогда
		Возврат Выборка;
	КонецЕсли;
	//Ответ = Справочники.Стадионы.ПустаяСсылка();
	Для Каждого Ответ Из Выборка Цикл
		Возврат Ответ;
	КонецЦикла;
	Возврат Справочники.Стадионы.ПустаяСсылка();
КонецФункции

Функция ЧемпионатНайти(Параметр, Знач Дата) Экспорт
	Если ТипЗнч(Параметр) = Тип("СправочникСсылка.Туры") Тогда
		Возврат Параметр.Владелец;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	ЧемпионатыКоманды.Ссылка КАК Ссылка,
	                      |	2 КАК Порядок
	                      |ИЗ
	                      |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
	                      |		ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
	                      |ГДЕ
	                      |	&ДатаН МЕЖДУ Чемпионаты.ДатаНачала И Чемпионаты.ДатаОкончания
	                      |	И Чемпионаты.ПометкаУдаления = ЛОЖЬ
	                      |	И ЧемпионатыКоманды.Команда В(&Команды)
	                      |
	                      |ОБЪЕДИНИТЬ
	                      |
	                      |ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Туры.Владелец,
	                      |	1
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица.Обороты(&ДатаН, &ДатаК, , Команда В (&Команды)) КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
	                      |			ПО Туры.Владелец = Чемпионаты.Ссылка
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Порядок");
	//Если ТипЗнч(Команды) = Тип("СправочникСсылка.Команды") Тогда
	//КонецЕсли;
	Запрос.УстановитьПараметр("Команды",	Параметр);
	Запрос.УстановитьПараметр("ДатаН",		НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаК",		КонецДня(Дата));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Чемпионаты.ПустаяСсылка();
КонецФункции

Функция ЧемпионатПолучитьПоследнее(Команды=Неопределено, ОлимпийскаяСистема=Ложь) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Туры.Владелец КАК Ссылка
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
	                      |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
	                      |					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Страны КАК Страны
	                      |					ПО Лига.Страна = Страны.Ссылка
	                      |				ПО Чемпионаты.Владелец = Лига.Ссылка
	                      |			ПО Туры.Владелец = Чемпионаты.Ссылка
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |ГДЕ
	                      |	ТурнирнаяТаблица.Команда В(&Команды)
	                      |	И Лига.ОлимпийскаяСистема = ЛОЖЬ
						  //|	И (Лига.Страна.Ссылка ЕСТЬ NULL) = ЛОЖЬ
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ТурнирнаяТаблица.Период УБЫВ");
	Запрос.УстановитьПараметр("Команды",	Команды);
	//Запрос.УстановитьПараметр("Система",	ОлимпийскаяСистема);
	Если ТипЗнч(Команды) = Тип("СправочникСсылка.Стадионы") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Чемпионаты.Ссылка КАК Ссылка
		               |ИЗ
		               |	Документ.Матч КАК Матч
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
		               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
		               |				ПО Чемпионаты.Владелец = Лига.Ссылка
		               |			ПО Туры.Владелец = Чемпионаты.Ссылка
		               |		ПО Матч.Тур = Туры.Ссылка
		               |ГДЕ
		               |	Матч.Проведен = ИСТИНА
		               |	И Матч.Стадион В(&Команды)
		               |	И Лига.ОлимпийскаяСистема = ЛОЖЬ
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Матч.Дата";
	ИначеЕсли НЕ ЗначениеЗаполнено(Команды) Тогда
		Запрос.УстановитьПараметр("Команды",	МояКомандаПолучить());
		Запрос.УстановитьПараметр("Система",	Ложь);
	ИначеЕсли ОлимпийскаяСистема Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Туры.Владелец КАК Ссылка
		               |ИЗ
		               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
		               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
		               |				ПО Чемпионаты.Владелец = Лига.Ссылка
		               |			ПО Туры.Владелец = Чемпионаты.Ссылка
		               |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
		               |ГДЕ
		               |	ТурнирнаяТаблица.Команда В(&Команды)
		               |	И Лига.ОлимпийскаяСистема = ИСТИНА
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ТурнирнаяТаблица.Период УБЫВ";
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Чемпионаты.ПустаяСсылка();
КонецФункции

Функция ЧемпионатЛигиПоследний(Лига) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	ТурнирнаяТаблица.Тур.Владелец КАК Ссылка,
	                      |	ТурнирнаяТаблица.Период КАК Период
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |ГДЕ
	                      |	ТурнирнаяТаблица.Тур.Владелец.Владелец = &Лига
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Период УБЫВ");
	Запрос.УстановитьПараметр("Лига",	Лига);
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат ?(Выборка.Следующий(), Выборка.Ссылка, Справочники.Чемпионаты.ПустаяСсылка());
КонецФункции

Функция Тур(Команды, Дата) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Туры.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Туры КАК Туры
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты.Команды КАК Чемпионаты
	                      |		ПО Туры.Владелец = Чемпионаты.Ссылка
	                      |ГДЕ
	                      |	&Дата МЕЖДУ Туры.ДатаНачала И Туры.ДатаОкончания
	                      |	И Чемпионаты.Команда В(&Команды)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Туры.ПометкаУдаления");
	//Если ТипЗнч(Команды) = Тип("СправочникСсылка.Команды") Тогда
	//КонецЕсли;
	Запрос.УстановитьПараметр("Команды",	Команды);
	Запрос.УстановитьПараметр("Дата",		НачалоДня(Дата));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Туры.ПустаяСсылка();
КонецФункции

Функция ТурПоследний(Чемпионат) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Туры.Ссылка КАК Ссылка,
	                      |	Туры.Код КАК Код,
	                      |	Туры.ДатаОкончания КАК ДатаОкончания
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |ГДЕ
	                      |	Туры.Владелец = &Чемпионат
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Код УБЫВ");
	Запрос.УстановитьПараметр("Чемпионат",	Чемпионат);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Туры.ПустаяСсылка();
КонецФункции

Функция ТурНеПоследний(Чемпионат) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Туры.Ссылка) КАК Количество
	                      |ПОМЕСТИТЬ ВТ
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |ГДЕ
	                      |	Туры.Владелец = &Чемпионат
	                      |	И ТИПЗНАЧЕНИЯ(ТурнирнаяТаблица.Регистратор) = ТИП(Документ.Матч)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Туры.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |			ПО Туры.Владелец = ЧемпионатыКоманды.Ссылка
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка,
	                      |	ВТ КАК ВТ
	                      |ГДЕ
	                      |	Туры.Владелец = &Чемпионат
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	Туры.ДатаОкончания,
	                      |	Туры.Ссылка,
	                      |	ВТ.Количество
	                      |
	                      |ИМЕЮЩИЕ
	                      |	ВТ.Количество < МАКСИМУМ(ЧемпионатыКоманды.НомерСтроки) * 2 - 2
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Туры.ДатаОкончания УБЫВ");
	Запрос.УстановитьПараметр("Чемпионат",	Чемпионат);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Туры.ПустаяСсылка();
КонецФункции

Функция ВидСпорта(Знач Ссылка) Экспорт
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.ВидыСпорта") Тогда
		Возврат Ссылка;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Команды") Тогда
		Возврат Ссылка.Владелец;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Лига") Тогда
		Возврат Ссылка.Владелец;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Амплуа") Тогда
		Возврат Ссылка.Владелец;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Чемпионаты") Тогда
		Возврат Ссылка.Владелец.Владелец;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Туры") Тогда
		Возврат Ссылка.Владелец.Владелец.Владелец;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Стадионы") Тогда
		Возврат Ссылка.Владелец.Владелец;
		
	КонецЕсли;
	Возврат Справочники.ВидыСпорта.ПустаяСсылка();
КонецФункции

Функция Лига(Чемпионат) Экспорт
	Если ТипЗнч(Чемпионат) = Тип("СправочникСсылка.Туры") Тогда
		Возврат Чемпионат.Владелец.Владелец;
	КонецЕсли;
	Возврат Чемпионат.Владелец;
КонецФункции

Функция Лиги(Команда) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Чемпионаты.Владелец КАК Лига
	                      |ИЗ
	                      |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
	                      |		ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
	                      |ГДЕ
	                      |	ЧемпионатыКоманды.Команда В(&Команда)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	Чемпионаты.Владелец
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЧемпионатыКоманды.Ссылка) УБЫВ");
	Запрос.УстановитьПараметр("Команда",			Команда);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

Функция ЛигаКоличествоКоманд(Лига) Экспорт
	Возврат Лига.КоличествоКоманд;
КонецФункции

Функция ЛигаОлимпийскаяСистема(ЛигаЧемпионат) Экспорт
	Если ТипЗнч(ЛигаЧемпионат) = Тип("СправочникСсылка.Чемпионаты") Тогда
		Возврат ЛигаОлимпийскаяСистема(ЛигаЧемпионат.Владелец);
	КонецЕсли;
	Возврат ЛигаЧемпионат.ОлимпийскаяСистема;
КонецФункции

Функция ЛигаСтраны(Страна) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Лига.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Лига КАК Лига
	                      |ГДЕ
	                      |	Лига.Страна = &Страна
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Лига.ПометкаУдаления");
	Запрос.УстановитьПараметр("Страна",			Страна);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Лига.ПустаяСсылка();
КонецФункции

Функция МатчОбработкаПроверкиЗаполнения(Объект) Экспорт
	Отказ= Ложь;
	Гугл = Новый Структура("Команда");
	Для Каждого тСтрока Из Объект.СоставыКоманд Цикл
		Если ЗначениеЗаполнено(тСтрока.Команда) Тогда
			Гугл.Команда = тСтрока.Команда;
			Если Объект.Команды.НайтиСтроки(Гугл).Количество() = 0 Тогда
				Отказ = Истина;
			КонецЕсли;
		ИначеЕсли Отказ Тогда
			Прервать;
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат Отказ;
КонецФункции

Функция МатчиТура(Тур) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Матч.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Документ.Матч КАК Матч
	                      |ГДЕ
	                      |	Матч.Тур = &Тур
	                      |	И Матч.Проведен = ИСТИНА
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Матч.Дата");
	Запрос.УстановитьПараметр("Тур",		Тур);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

Функция ТурНайти(КодИлиНаименование, Чемпионат) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Туры.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Туры КАК Туры
	               |ГДЕ
	               |	Туры.Владелец = &Чемпионат
	               |	И Туры.ПометкаУдаления = ЛОЖЬ
	               |	И (Туры.Наименование ПОДОБНО &Наименование
	               |			ИЛИ Туры.Код = &Код)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Туры.Код = &Код УБЫВ";
	Запрос.УстановитьПараметр("Чемпионат",		Чемпионат);
	Запрос.УстановитьПараметр("Наименование",	?(ТипЗнч(КодИлиНаименование)=Тип("Строка"), КодИлиНаименование, ФорматЧГ(КодИлиНаименование)) + "-%");
	Запрос.УстановитьПараметр("Код",			?(ТипЗнч(КодИлиНаименование)=Тип("Строка"), СтрокаКакЧисло(КодИлиНаименование), КодИлиНаименование));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Туры.ПустаяСсылка();
КонецФункции

Функция ТурнирнаяТаблица(Знач Чемпионат) Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Команды.Команда КАК Команда,
	|	СУММА(ВЫБОР
	//|			КОГДА ТурнирнаяТаблица.Регистратор ЕСТЬ NULL
	//|				ТОГДА 0
	|			КОГДА ТИПЗНАЧЕНИЯ(ТурнирнаяТаблица.Регистратор) = ТИП(Документ.Матч)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоИгр,
	|	ЕСТЬNULL(СУММА(ТурнирнаяТаблица.КоличествоГолов), 0) КАК Забито,
	|	ЕСТЬNULL(СУММА(ТурнирнаяТаблица.КоличествоОчков), 0) КАК КоличествоОчков,
	|	СУММА(ВЫБОР
	|			КОГДА ТурнирнаяТаблица.КоличествоОчков > Игра.КоличествоОчков
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Выигрыш,
	|	СУММА(ВЫБОР
	|			КОГДА ТурнирнаяТаблица.КоличествоОчков = Игра.КоличествоОчков
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Ничья,
	|	СУММА(ВЫБОР
	|			КОГДА ТурнирнаяТаблица.КоличествоОчков < Игра.КоличествоОчков
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Проигрыш,
	|	ЕСТЬNULL(СУММА(Игра.КоличествоГолов), 0) КАК Пропущено,
	|	ЕСТЬNULL(СУММА(ТурнирнаяТаблица.КоличествоГолов), 0) - ЕСТЬNULL(СУММА(Игра.КоличествоГолов), 0) КАК Разница
	|ИЗ
	|	Справочник.Чемпионаты.Команды КАК Команды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	|			ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	|				И (Туры.Владелец = &Чемпионат)
	|		ПО Команды.Команда = ТурнирнаяТаблица.Команда
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК Игра
	|		ПО (ТурнирнаяТаблица.Регистратор = Игра.Регистратор)
	|			И (ТурнирнаяТаблица.НомерСтроки <> Игра.НомерСтроки)
	|ГДЕ
	|	Команды.Ссылка = &Чемпионат
	|
	|СГРУППИРОВАТЬ ПО
	|	Команды.Команда
	|
	|УПОРЯДОЧИТЬ ПО
	|	КоличествоОчков УБЫВ,
	|	Разница УБЫВ,
	|	Забито УБЫВ,
	|	Команда
	|АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("Чемпионат",		Чемпионат);
	Возврат Запрос.Выполнить().Выбрать();
КонецФункции

Функция КомментарииПолучить(Чемпионат, Команда=Неопределено) Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТурнирнаяТаблица.Период КАК Дата,
	|	ТурнирнаяТаблица.Регистратор КАК Регистратор,
	|	ВЫБОР
	|		КОГДА ДЛИНАСТРОКИ(СнятиеОчков.Комментарий) = 0
	|			ТОГДА СнятиеОчков.Представление
	|		ИНАЧЕ ПОДСТРОКА(СнятиеОчков.Комментарий, 1, 140)
	|	КОНЕЦ КАК Комментарий,
	|	ТурнирнаяТаблица.Команда КАК Команда,
	|	ТурнирнаяТаблица.КоличествоОчков КАК КоличествоОчков
	|ИЗ
	|	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СнятиеОчков КАК СнятиеОчков
	|		ПО ТурнирнаяТаблица.Регистратор = СнятиеОчков.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	|		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	|ГДЕ
	|	Туры.Владелец = &Чемпионат
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Команда");
	Запрос.УстановитьПараметр("Чемпионат",		Чемпионат);
	Если ЗначениеЗаполнено(Команда) Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТурнирнаяТаблица.Период КАК Дата,
		               |	ТурнирнаяТаблица.Регистратор КАК Регистратор,
		               |	ВЫБОР
		               |		КОГДА ДЛИНАСТРОКИ(СнятиеОчков.Комментарий) = 0
		               |			ТОГДА СнятиеОчков.Представление
		               |		ИНАЧЕ ПОДСТРОКА(СнятиеОчков.Комментарий, 1, 140)
		               |	КОНЕЦ КАК Комментарий,
		               |	ТурнирнаяТаблица.Команда КАК Команда,
		               |	ТурнирнаяТаблица.КоличествоОчков КАК КоличествоОчков
		               |ИЗ
		               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СнятиеОчков КАК СнятиеОчков
		               |		ПО ТурнирнаяТаблица.Регистратор = СнятиеОчков.Ссылка
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
		               |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
		               |ГДЕ
		               |	Туры.Владелец = &Чемпионат
		               |	И ТурнирнаяТаблица.Команда = &Команда
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Дата";
		Запрос.УстановитьПараметр("Команда",		Команда);
	КонецЕсли;
	Возврат Запрос.Выполнить().Выбрать();
КонецФункции

Функция КомандаЧемпионата(Знач Чемпионат=Неопределено) Экспорт
	Если ЗначениеЗаполнено(Чемпионат) Тогда
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЧемпионатыКоманды.Команда КАК Команда
		|ИЗ
		|	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		|ГДЕ
		|	ЧемпионатыКоманды.Команда = &Команда
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЧемпионатыКоманды.Ссылка = &Ссылка УБЫВ");
		Запрос.УстановитьПараметр("Команда",	МояКомандаПолучить());
		Запрос.УстановитьПараметр("Ссылка",		Чемпионат);
		Выборка = Запрос.Выполнить().Выбрать();
		Возврат ?(Выборка.Следующий(), Выборка.Команда, Справочники.Команды.ПустаяСсылка());
	КонецЕсли;
	Возврат МояКомандаПолучить();
КонецФункции

Функция МояКомандаПолучить() Экспорт
	Возврат Константы.МояКоманда.Получить();
КонецФункции

Функция СтарыйВидАнонсов() Экспорт
	Возврат Константы.СтарыйВидАнонсов.Получить();
КонецФункции

Функция КоличествоМатчейВАнонсе() Экспорт
	Возврат Макс(5, Константы.КоличествоМатчейВАнонсе.Получить());
КонецФункции

Функция ТурнирнаяТаблицаКакНаBBC() Экспорт
	Возврат Константы.ТурнирнаяТаблицаКакНаBBC.Получить();
КонецФункции

Функция ВыводитьТурВместоЧемпионата() Экспорт
	Возврат Константы.ВыводитьТурВместоЧемпионата.Получить();
КонецФункции

Функция СтатистикаИгр(Знач Команда, Знач Чемпионат=Неопределено) Экспорт
	Итоги	= Новый Структура("Побед,Ничьих,Проигрышей,Количество,Результативность", 0, 0, 0, 0, 0);
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТурнирнаяТаблица.КоличествоОчков КАК КоличествоОчков,
	                      |	СУММА(1) КАК Количество,
	                      |	СУММА(ТурнирнаяТаблица.КоличествоГолов) КАК КоличествоГолов
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч КАК Матч
	                      |		ПО ТурнирнаяТаблица.Регистратор = Матч.Ссылка
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |ГДЕ
	                      |	ТурнирнаяТаблица.Команда = &Команда
	                      |	И Туры.Владелец = &Чемпионат
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ТурнирнаяТаблица.КоличествоОчков
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	КоличествоОчков");
	Запрос.УстановитьПараметр("Команда",	Команда);
	Запрос.УстановитьПараметр("Чемпионат",	Чемпионат);
	Если НЕ ЗначениеЗаполнено(Чемпионат) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Туры.Владелец = &Чемпионат", "");
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.КоличествоОчков = 0 Тогда
			Итоги.Проигрышей = Выборка.Количество;
		ИначеЕсли Выборка.КоличествоОчков = 1 Тогда
			Итоги.Ничьих = Выборка.Количество;
		Иначе
			Итоги.Побед = Выборка.Количество;
		КонецЕсли;
		Итоги.Количество		= Итоги.Количество + Выборка.Количество;
		Итоги.Результативность	= Итоги.Результативность + Выборка.КоличествоГолов;
	КонецЦикла;
	Ответ = Новый Соответствие;
	Ответ.Вставить("Проигрышей",		Итоги.Проигрышей);
	Ответ.Вставить("Ничьих",			Итоги.Ничьих);
	Ответ.Вставить("Побед",				Итоги.Побед);
	Ответ.Вставить(?(ЗначениеЗаполнено(Чемпионат), "Игр с начала сезона", "Игр за последний год"),		Итоги.Количество);
	Если Итоги.Количество = 0 Тогда
		Ответ.Вставить("Результативность средняя", 0);
	Иначе
		Ответ.Вставить("Результативность средняя", Окр(Итоги.Результативность / Итоги.Количество, 1));
	КонецЕсли;
	Ответ.Вставить("Результативность",	Итоги.Результативность);
	Возврат Ответ;
КонецФункции

Функция МестоВЧемпионате(Знач Команда, Знач Чемпионат=Неопределено) Экспорт
	Ответ = 0;
	ШалостьУдалась = Ложь;
	Выборка = ТурнирнаяТаблица(?(Чемпионат=Неопределено, ЧемпионатПолучитьПоследнее(Команда), Чемпионат));
	Пока Выборка.Следующий() Цикл
		Ответ = Ответ + 1;
		Если Выборка.Команда = Команда Тогда
			ШалостьУдалась = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат ?(ШалостьУдалась, Ответ, 0);
КонецФункции

Функция ЭтоДерби(Матч) Экспорт
	Ответ	= Ложь;
	Запрос	= Новый Запрос(
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(Команды.Город) + КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Команды.Город) КАК Количество
	|ИЗ
	|	Документ.Матч.Команды КАК МатчКоманды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Команды КАК Команды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
	|			ПО Команды.Город = Города.Ссылка
	|		ПО МатчКоманды.Команда = Команды.Ссылка
	|ГДЕ
	|	МатчКоманды.Ссылка = &Матч");
	Запрос.УстановитьПараметр("Матч",	Матч);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Ответ = (Выборка.Количество = 3);
	КонецЕсли;
	Возврат Ответ;
КонецФункции

Функция ЕстьИстория(Ссылка, Вторая=Неопределено) Экспорт
		//Возврат Ложь;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",			Ссылка);
	Запрос.УстановитьПараметр("Вторая",			Вторая);
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Команды") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	ТурнирнаяТаблица.Период КАК Период
		               |ИЗ
		               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |ГДЕ
		               |	ТурнирнаяТаблица.Команда = &Ссылка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Период";
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Лига") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Чемпионаты.Ссылка КАК Ссылка
		               |ИЗ
		               |	Справочник.Чемпионаты КАК Чемпионаты
		               |ГДЕ
		               |	Чемпионаты.Владелец = &Ссылка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Ссылка";
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Стадионы") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Матч.Ссылка КАК Ссылка
		               |ИЗ
		               |	Документ.Матч КАК Матч
		               |ГДЕ
		               |	Матч.Стадион = &Ссылка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Ссылка";
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Чемпионаты") Тогда
		Если Вторая = Неопределено Тогда
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			               |	Туры.Ссылка КАК Ссылка
			               |ИЗ
			               |	Справочник.Туры КАК Туры
			               |ГДЕ
			               |	Туры.Владелец = &Ссылка
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	Ссылка";
		Иначе
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	ТурнирнаяТаблица.Период КАК Период
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |ГДЕ
	                      |	ТурнирнаяТаблица.Команда = &Вторая
	                      |	И Туры.Владелец = &Ссылка
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Период";
		КонецЕсли;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	Возврат (НЕ Запрос.Выполнить().Пустой());
КонецФункции

Функция ИзображениеПолучить(Ссылка, КакЕсть=Ложь) Экспорт
	Если КакЕсть Тогда
		Возврат Новый Картинка(Ссылка.Изображение.Получить());
	ИначеЕсли Ссылка.Изображение.Получить() = Неопределено Тогда
		Возврат ИзображениеДефолтПолучить();
	КонецЕсли;
	Возврат ПолучитьНавигационнуюСсылку(Ссылка, "Изображение");
КонецФункции

Процедура ИзображениеУстановить(ОбластьМакета, Лига) Экспорт
	Изображение	= ИзображениеПолучить(Лига, Истина);
	Если Изображение.Вид <> ВидКартинки.Пустая Тогда
		ОбластьМакета.Рисунки.Получить(0).Картинка = Изображение;
	КонецЕсли;
КонецПроцедуры

Функция ИзображениеДефолтПолучить() Экспорт
	Возврат "";
КонецФункции

Функция ВидыСпорта(Наименование="Футбол") Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВидыСпорта.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыСпорта КАК ВидыСпорта
	|ГДЕ
	|	ВидыСпорта.Наименование = &Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидыСпорта.ПометкаУдаления");
	Запрос.УстановитьПараметр("Наименование",		СокрЛП(Наименование));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.ВидыСпорта.ПустаяСсылка();
КонецФункции

Функция Футбол() Экспорт
	Возврат Справочники.ВидыСпорта.Футбол;
КонецФункции

Функция Амплуа(Наименование="Вратарь") Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Амплуа.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Амплуа КАК Амплуа
	|ГДЕ
	|	Амплуа.Наименование = &Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Амплуа.ПометкаУдаления");
	Запрос.УстановитьПараметр("Наименование",		СокрЛП(Наименование));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Амплуа.ПустаяСсылка();
КонецФункции

Функция ИгрокНайти(Наименование) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Игроки.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Игроки КАК Игроки
	                      |ГДЕ
	                      |	(Игроки.Наименование = &Наименование
	                      |			ИЛИ Игроки.Комментарий ПОДОБНО &Комментарий)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Игроки.Наименование = &Наименование УБЫВ,
	                      |	Игроки.ПометкаУдаления");
	Запрос.УстановитьПараметр("Наименование",		СокрЛП(Наименование));
	Запрос.УстановитьПараметр("Комментарий",		"%" + СокрЛП(Наименование) + "%");
	Выборка	= Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Игроки.ПустаяСсылка();
КонецФункции

Функция СтранаКоманды(Команда) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Города.Владелец КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Команды КАК Команды
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
	                      |		ПО Команды.Город = Города.Ссылка
	                      |ГДЕ
	                      |	Команды.Ссылка В(&Команда)");
	Запрос.УстановитьПараметр("Команда",		Команда);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Страны.ПустаяСсылка();
КонецФункции

Функция СтранаНайти(Параметр) Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Страны.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Страны КАК Страны
	|ГДЕ
	|	(Страны.Наименование = &Наименование
	|			ИЛИ Страны.Код = &Наименование)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страны.ПометкаУдаления");
	Запрос.УстановитьПараметр("Параметр",		Параметр);
	Запрос.УстановитьПараметр("Наименование",	СокрЛП(Параметр));
	Если ТипЗнч(Параметр) = Тип("СправочникСсылка.Туры") Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	Лига.Страна КАК Ссылка,
		               |	1 КАК Порядок
		               |ИЗ
		               |	Справочник.Туры КАК Туры
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
		               |			ПО Чемпионаты.Владелец = Лига.Ссылка
		               |		ПО Туры.Владелец = Чемпионаты.Ссылка
		               |ГДЕ
		               |	Туры.Ссылка = &Параметр
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	Города.Владелец,
		               |	2
		               |ИЗ
		               |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
		               |		ПО ЧемпионатыКоманды.Ссылка = Туры.Владелец
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Команды КАК Команды
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
		               |			ПО Команды.Город = Города.Ссылка
		               |		ПО ЧемпионатыКоманды.Команда = Команды.Ссылка
		               |ГДЕ
		               |	Туры.Ссылка = &Параметр
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Порядок";
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Страны.ПустаяСсылка();
КонецФункции

Функция ПолучитьЭлементыПоИмени(Гиперссылка, Имя="td") Экспорт
	Текст	= ОбщегоНазначения.СкачатьПоСсылке(Гиперссылка);
	Если ПустаяСтрока(Текст) Тогда Возврат Новый Массив; КонецЕсли;
	
	Ответ = Новый Массив;
	ЧтениеHTML = Новый ЧтениеHTML;
	ЧтениеHTML.УстановитьСтроку(Текст);
	ПостроительDOM = Новый ПостроительDOM;
	ДокументHTML = ПостроительDOM.Прочитать(ЧтениеHTML);
	Элементы = ДокументHTML.ПолучитьЭлементыПоИмени(Имя);
	Для Каждого Элемент Из Элементы Цикл
		Если НЕ ПустаяСтрока(Элемент.ТекстовоеСодержимое) Тогда
			Ответ.Добавить(СокрЛП(Элемент.ТекстовоеСодержимое));
		КонецЕсли;
	КонецЦикла;
	Возврат Ответ;
КонецФункции

Процедура СправочникиПередЗаписью(Источник, Отказ) Экспорт
	ОбщегоНазначения.УстановитьЗначение(Источник.Наименование, СокрЛП(Источник.Наименование));
КонецПроцедуры

Функция МатчиПоследние5(Команда, Чемпионат, Дата=Неопределено, Сколько=5) Экспорт
	Запрос	= Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 5
	      	               |	ТурнирнаяТаблица.Период КАК Период,
	      	               |	ТурнирнаяТаблица.КоличествоОчков КАК КоличествоОчков,
	      	               |	ТурнирнаяТаблица.Регистратор КАК Регистратор
	      	               |ПОМЕСТИТЬ ВТ
	      	               |ИЗ
	      	               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	      	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	      	               |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	      	               |ГДЕ
	      	               |	ТурнирнаяТаблица.Период МЕЖДУ &ДатаН И &ДатаК
	      	               |	И ТурнирнаяТаблица.Команда = &Команда
	      	               |	И ТИПЗНАЧЕНИЯ(ТурнирнаяТаблица.Регистратор) = ТИП(Документ.Матч)
	      	               |	И Туры.Владелец = &Чемпионат
	      	               |
	      	               |УПОРЯДОЧИТЬ ПО
	      	               |	Период УБЫВ
	      	               |;
	      	               |
	      	               |////////////////////////////////////////////////////////////////////////////////
	      	               |ВЫБРАТЬ
	      	               |	ВЫБОР
	      	               |		КОГДА ВТ.КоличествоОчков = 0
	      	               |			ТОГДА ""LL""
	      	               |		КОГДА ВТ.КоличествоОчков = 1
	      	               |			ТОГДА ""DD""
	      	               |		ИНАЧЕ ""WW""
	      	               |	КОНЕЦ КАК Результат,
	      	               |	&Команда КАК Команда,
	      	               |	ВТ.Регистратор КАК Регистратор
	      	               |ИЗ
	      	               |	ВТ КАК ВТ
	      	               |
	      	               |УПОРЯДОЧИТЬ ПО
	      	               |	ВТ.Период");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "5", Формат(Сколько, "ЧН=5; ЧГ=0"));
	Запрос.УстановитьПараметр("ДатаН",			НачалоМесяца(ДобавитьМесяц(?(Дата=Неопределено, Чемпионат.ДатаОкончания, Дата), -6)));
	Запрос.УстановитьПараметр("ДатаК",			КонецДня(?(Дата=Неопределено, Чемпионат.ДатаОкончания, Дата)) - 1);
	Запрос.УстановитьПараметр("Чемпионат",		Чемпионат);
	Запрос.УстановитьПараметр("Команда",		Команда);
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ИмпортЧемпионата(Гиперссылка, Чемпионат) Экспорт
	Итого	= 0;
	Игры	= Чемпионат.Команды.Количество() / 2;
	Предел	= 4 * Игры - 2;
	Для Итератор = 1 По Предел Цикл
		Тур		= ТурНайти(Итератор, Чемпионат);
		Если НЕ ЗначениеЗаполнено(Тур) Тогда
			оТур	= Справочники.Туры.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(оТур, Новый Структура("Владелец,ДатаНачала,ДатаОкончания", Чемпионат, Чемпионат.ДатаНачала, Чемпионат.ДатаОкончания));
			оТур.Код			= Итератор;
			оТур.Наименование	= оТур.НаименованиеПолучить();
			оТур.Записать();
			
			Тур	= оТур.Ссылка;
		КонецЕсли;
	КонецЦикла;
	Если СтрНайти(Гиперссылка, "games") = 0 Тогда
		Для Итератор = 1 По Предел Цикл
			Тур		= ТурНайти(Итератор, Чемпионат);
			Если ЗначениеЗаполнено(Тур) Тогда
				МатчиТура	= МатчиТура(Тур);
				Если МатчиТура.Количество() = Игры Тогда
					Продолжить;
				ИначеЕсли ИмпортИгр(СтрШаблон(Гиперссылка + "%1/", ФорматЧГ(Итератор)), Тур) Тогда
					Итого	= Итого + 1;
					Справочники.Туры.ДатыУстановить(Тур);
				ИначеЕсли МатчиТура.Количество() = 0 Тогда
					Прервать;
				КонецЕсли;
			Иначе
				Прервать;
			КонецЕсли;
		КонецЦикла;
	Иначе
		//https://football.kulichki.net/france/2024/games.htm
		Тур		= ТурНайти(1, Чемпионат);
		Итого	= ИмпортИгр(Гиперссылка, Тур);
	КонецЕсли;
	Возврат (Итого > 0);
КонецФункции

Функция МатчПодобрать(Команда, Тур)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	МатчКоманды.Ссылка КАК Ссылка,
	                      |	ВЫБОР
	                      |		КОГДА Матч.Проведен = ИСТИНА
	                      |			ТОГДА 1
	                      |		КОГДА Матч.ПометкаУдаления = ЛОЖЬ
	                      |			ТОГДА 10
	                      |		ИНАЧЕ 100
	                      |	КОНЕЦ КАК Порядок
	                      |ИЗ
	                      |	Документ.Матч.Команды КАК МатчКоманды
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч КАК Матч
	                      |		ПО МатчКоманды.Ссылка = Матч.Ссылка
	                      |ГДЕ
	                      |	МатчКоманды.Команда = &Команда
	                      |	И Матч.Тур = &Тур
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Матч.Ссылка,
	                      |	ВЫБОР
	                      |		КОГДА Матч.Тур = &Тур
	                      |			ТОГДА 200
	                      |		ИНАЧЕ 400
	                      |	КОНЕЦ
	                      |ИЗ
	                      |	Документ.Матч КАК Матч
	                      |ГДЕ
	                      |	Матч.ПометкаУдаления = ИСТИНА
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Порядок");
	Запрос.УстановитьПараметр("Команда",	Команда);
	Запрос.УстановитьПараметр("Тур",		Тур);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Документы.Матч.ПустаяСсылка();
КонецФункции

Функция ИмпортИгр(Гиперссылка, Тур) Экспорт
	Итого	= 0;
	Игры	= 0;

	Чемпионат	= Тур.Владелец;
	сИгра	= Новый Структура("Тур,Дата,Счет,Гол1,Гол2,КоличествоЗрителей,Проведен,Команда1,Команда2,Стадион", Тур);
	Зачистить(сИгра);
	Слова	= ПолучитьЭлементыПоИмени(Гиперссылка);
	Для Каждого Слово Из Слова Цикл
		Если Игры > 0 И СтрНайти(НРег(Слово), "таблица") > 0 Тогда		// финито
			Прервать;
		ИначеЕсли СтрЧислоСтрок(Слово) > 2
		Или СтрДлина(Слово) < 3
		Тогда
			
		ИначеЕсли Год(сИгра.Дата) < 2 Тогда
			Если СтрокаНачинаетсяЧислом(Слово) Тогда
				сИгра.Дата	= КакДата(Слово, сИгра.Тур);
				Если Год(сИгра.Дата) < 2 Тогда
					сИгра.Тур = ТурПолучить(Слово, Чемпионат, Тур);
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли НЕ ЗначениеЗаполнено(сИгра.Команда1) И НЕ ЗначениеЗаполнено(сИгра.Команда2) Тогда
			Если СтрЧислоВхождений(Слово, "-") = 1 Тогда
				мСлова = Разделить(Слово, "-");
				сИгра.Команда1	= КомандаНайти(мСлова.Получить(0), Чемпионат);
				сИгра.Команда2	= КомандаНайти(мСлова.Получить(1), Чемпионат);
			ИначеЕсли СтрЧислоВхождений(Слово, ":") = 1 Тогда
				мСлова = Разделить(Слово, ":");
				сИгра.Команда1	= КомандаНайти(мСлова.Получить(0), Чемпионат);
				сИгра.Команда2	= КомандаНайти(мСлова.Получить(1), Чемпионат);
			КонецЕсли;
		ИначеЕсли НЕ ЗначениеЗаполнено(сИгра.Команда1) Или НЕ ЗначениеЗаполнено(сИгра.Команда2) Тогда
			Зачистить(сИгра);
			
		ИначеЕсли СтрНайти(Слово, ":00") > 0 Или СтрНайти(Слово, ":30") > 0 Тогда
			//Зачистить(сИгра);
			сИгра.Проведен = Ложь;
		ИначеЕсли СтрСравнить(Слово, "ОТМ") = 0 Тогда
			Зачистить(сИгра);
			
		ИначеЕсли ?(сИгра.Проведен, ГолыОпределить(сИгра, Слово), Истина) Тогда
			Игры = Игры + 1;
			Матч = МатчПодобрать(сИгра.Команда1, сИгра.Тур);
			Если ЗначениеЗаполнено(Матч) Тогда
				Док = Матч.ПолучитьОбъект();
				Если НЕ Матч.Проведен Тогда
					Если Док.ПометкаУдаления Тогда
						Док.УстановитьПометкуУдаления(Ложь);
						ЗаполнитьЗначенияСвойств(Док, сИгра);
					КонецЕсли;
				КонецЕсли;
				Если НачалоДня(Док.Дата) <> сИгра.Дата Тогда
					Док.Дата = сИгра.Дата;
				КонецЕсли;
				Если Док.Команды.Количество() = 2
				И Док.Команды.Получить(0).Команда = сИгра.Команда1
				И Док.Команды.Получить(0).КоличествоГолов = сИгра.Гол1
				И Док.Команды.Получить(1).Команда = сИгра.Команда2
				И Док.Команды.Получить(1).КоличествоГолов = сИгра.Гол2
				Тогда
					//
				Иначе
					Док.Команды.Очистить();
					Док.СоставыКоманд.Очистить();
				КонецЕсли;
			Иначе
				Док = Документы.Матч.СоздатьДокумент();
				ЗаполнитьЗначенияСвойств(Док, сИгра);
			КонецЕсли;
			Если Док.Команды.Количество() = 0 Тогда
				ЗаполнитьЗначенияСвойств(Док.Команды.Добавить(), Новый Структура("Команда,КоличествоГолов", сИгра.Команда1, сИгра.Гол1));
				ЗаполнитьЗначенияСвойств(Док.Команды.Добавить(), Новый Структура("Команда,КоличествоГолов", сИгра.Команда2, сИгра.Гол2));
				Док.Стадион = СтадионНайти(сИгра.Команда1);
				Если НЕ ЗначениеЗаполнено(Док.Стадион) И Док.КоличествоЗрителей > 0 Тогда
					Док.КоличествоЗрителей = 0;
				КонецЕсли;
			КонецЕсли;
			Если Док.Модифицированность() Или НЕ Док.Проведен Тогда
				Если Док.ПроверитьЗаполнение() Тогда
					Попытка
						Док.Записать(?(сИгра.Проведен Или Док.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
						Если Док.Проведен Тогда
							Итого = Итого + 1;
						КонецЕсли;
					Исключение
						Сообщить(ОписаниеОшибки());
						Прервать;
					КонецПопытки;
				Иначе
					ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, Док.Ссылка);
				КонецЕсли;
			КонецЕсли;
			Зачистить(сИгра);
		//Иначе
		//	Сообщить(Слово);
		КонецЕсли;
	КонецЦикла;
	Если Итого > 0 И ПустаяСтрока(Тур.Комментарий) Тогда
		Попытка
			Объект = Тур.ПолучитьОбъект();
			Объект.Комментарий = Гиперссылка;
			Объект.Записать();
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Возврат (Итого > 0);
КонецФункции

Функция КакДата(Знач Слово, Тур)
	Ответ = Дата(1,1,1);
	Если СтрНайти(Слово, " ") = 0 Тогда
		Ответ = СтрокаКакДата(Слово);
	Иначе
		Мезе	= 0;
		Жьорно	= 0;
		Для Каждого Строка Из Разделить(Слово) Цикл
			Если Жьорно = 0 Тогда
				Жьорно	= СтрокаКакЧисло(Строка);
			ИначеЕсли СтрокаКакМесяц(Строка) > 0 Тогда
				Мезе	= СтрокаКакМесяц(Строка);
			КонецЕсли;
		КонецЦикла;
		Если Мезе > 0 И Жьорно > 0 Тогда
			Попытка
				Ответ = Дата(Год(Тур.ДатаНачала), Мезе, Жьорно);
				Если Ответ < Тур.ДатаНачала Тогда
					Ответ = Дата(Год(Тур.ДатаНачала) + 1, Мезе, Жьорно);
				КонецЕсли;
			Исключение КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	Возврат Ответ;
КонецФункции

Процедура Зачистить(Виктим)
	ЗаполнитьЗначенияСвойств(Виктим, Новый Структура("Дата,Счет,Гол1,Гол2,КоличествоЗрителей,Проведен,Команда1,Команда2", Дата(1,1,1), "", 0, 0, 0, Истина));
КонецПроцедуры

Функция ГолыОпределить(сИгра, Слово)
	Если СтрЧислоВхождений(Слово, ":") = 2 И СтрЗаканчиваетсяНа(Слово, ")") Тогда
		мСлова = Разделить(Слово);
		сИгра.Счет	= ?(мСлова.Количество() = 0, "", мСлова.Получить(0));
		Если НЕ ПустаяСтрока(сИгра.Счет) Тогда
			мСлова = Разделить(сИгра.Счет, ":");
			Если мСлова.Количество() = 2 Тогда
				сИгра.Гол1	= СтрокаКакЧисло(мСлова.Получить(0));
				сИгра.Гол2	= СтрокаКакЧисло(мСлова.Получить(1));
			Иначе
				Зачистить(сИгра);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат (НЕ ПустаяСтрока(сИгра.Счет));
КонецФункции

Функция ТурПолучить(Слово, Чемпионат, Тур)
	Слова = Разделить(Слово, "-");
	Если Слова.Количество() = 2
	И СтрНайти(НРег(Слова.Получить(1)), "тур") > 0
	И СтрокаКакЧисло(Слова.Получить(0)) > 0 Тогда
		Ответ = ТурНайти(Слова.Получить(0), Чемпионат);
		Если ЗначениеЗаполнено(Ответ) Тогда
			Возврат Ответ;
		КонецЕсли;
	КонецЕсли;
	Возврат Тур;
КонецФункции

Функция КомментарийКакУРЛ(Комментарий) Экспорт
	Если ПустаяСтрока(Комментарий) Тогда Возврат ""; КонецЕсли;
	Ответ = "";
	Для Строка = 1 По СтрЧислоСтрок(Комментарий) Цикл
		Если ЭтоУРЛ(СтрПолучитьСтроку(Комментарий, Строка)) Тогда
			Ответ = СтрПолучитьСтроку(Комментарий, Строка);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат СтрЗаменить(Ответ, "%1", ФорматЧГ(ТекущаяДатаСеанса()));
КонецФункции
