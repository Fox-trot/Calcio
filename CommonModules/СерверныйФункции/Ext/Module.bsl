
Функция НайтиПоНаименованию(Наименование, СправочникИмя) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Справочник.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.ВидыСпорта КАК Справочник
	                      |ГДЕ
	                      |	Справочник.Наименование = &Наименование
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Справочник.ПометкаУдаления");
	Запрос.УстановитьПараметр("Наименование",			Наименование);
	Запрос.Текст	= СтрЗаменить(Запрос.Текст, "ВидыСпорта", СправочникИмя);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники[СправочникИмя].ПустаяСсылка();
КонецФункции

Функция КаталогаФайлов() Экспорт
	Возврат ПараметрыСеанса.КаталогаФайлов;
КонецФункции

Процедура ПервоначальноеЗаполнение() Экспорт
	СписокШиндлера = Новый Массив;
	СписокШиндлера.Добавить("Вратарь");
	СписокШиндлера.Добавить("Защитник");
	СписокШиндлера.Добавить("Полузащитник");
	СписокШиндлера.Добавить("Нападающий");
	Для Каждого ТекЭлемент Из СписокШиндлера Цикл
		Если Амплуа(ТекЭлемент).Пустая() Тогда
			Объект = Справочники.Амплуа.СоздатьЭлемент();
			Объект.Наименование	= ТекЭлемент;
			Объект.Владелец		= Футбол();
			Объект.УстановитьНовыйКод();
			Объект.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Страна = Справочники.Страны.ПустаяСсылка();
	СписокШиндлера.Очистить();
	СписокШиндлера.Добавить("Англия");
	Для Каждого ТекЭлемент Из СписокШиндлера Цикл
		Страна = НайтиПоНаименованию(ТекЭлемент, "Страны");
		Если Страна.Пустая() Тогда
			Объект = Справочники.Страны.СоздатьЭлемент();
			Объект.Код			= "ENG";
			Объект.Наименование	= ТекЭлемент;
			Объект.Записать();
			
			Страна = Объект.Ссылка;
		КонецЕсли;
	КонецЦикла;
	
	Лига = Неопределено;
	СписокШиндлера.Очистить();
	СписокШиндлера.Добавить("Английская премьер лига");
	Для Каждого ТекЭлемент Из СписокШиндлера Цикл
		Ссылка = НайтиПоНаименованию(ТекЭлемент, "Лига");
		Если Ссылка.Пустая() Тогда
			Объект = Справочники.Лига.СоздатьЭлемент();
			Объект.Наименование	= ТекЭлемент;
			Объект.Владелец		= Футбол();
			Объект.Страна		= Страна;
			Объект.КоличествоКоманд		= 20;
			Объект.КоличествоРотация	= 3;
			Объект.Квалификация			= 4;
			Объект.УстановитьНовыйКод();
			Объект.Записать();
			
			Лига = Объект;
		Иначе
			Лига = Ссылка.ПолучитьОбъект();
		КонецЕсли;
	КонецЦикла;
	
	ЧтениеJSON	= Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ПолучитьОбщийМакет("ПервоначальноеЗаполнение").ПолучитьТекст());
	СписокШиндлера = ПрочитатьJSON(ЧтениеJSON);
	
	Для Каждого ТекЭлемент Из СписокШиндлера Цикл
		Если НайтиПоНаименованию(ТекЭлемент.Город, "Города").Пустая() Тогда
			Объект = Справочники.Города.СоздатьЭлемент();
			Объект.Наименование	= ТекЭлемент.Город;
			Объект.Владелец		= Страна;
			Объект.УстановитьНовыйКод();
			Объект.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ТекЭлемент Из СписокШиндлера Цикл
		Команда = КомандаНайти(ТекЭлемент.Наименование, Страна);
		Если Команда.Пустая() Тогда
			Команда = КомандыСоздать(ТекЭлемент.Наименование, ТекЭлемент.Город);
		КонецЕсли;
		Если ЗначениеЗаполнено(Команда) Тогда
			Если ТипЗнч(Лига) = Тип("СправочникОбъект.Лига") Тогда
				Гугл = Новый Структура("Команда", Команда);
				Если Лига.Команды.НайтиСтроки(Гугл).Количество() = 0 Тогда
					ЗаполнитьЗначенияСвойств(Лига.Команды.Добавить(), Гугл);
				КонецЕсли;
			КонецЕсли;
			Если СтрСравнить(ТекЭлемент.Наименование, МояКоманда()) = 0 Тогда
				Константы.МояКоманда.Установить(Команда);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если ТипЗнч(Лига) = Тип("СправочникОбъект.Лига") И Лига.Модифицированность() Тогда
		Объект.Записать();
	КонецЕсли;
	
	НастройкиСохранить();
КонецПроцедуры

Функция МояКоманда()
	Возврат "Арсенал";
КонецФункции

Функция КомандыСоздать(Наименование, Город="", ВидыСпорта=Неопределено) Экспорт
	Объект = Справочники.Команды.СоздатьЭлемент();
	Объект.Наименование	= Наименование;
	Объект.Владелец		= ?(ВидыСпорта=Неопределено, Футбол(), ВидыСпорта);
	Объект.Город		= НайтиПоНаименованию(?(ПустаяСтрока(Город), Наименование, Город), "Города");
	Объект.УстановитьНовыйКод();
	Попытка
		Объект.Записать();
		Возврат Объект.Ссылка;
	Исключение
	КонецПопытки;
	Возврат Справочники.Команды.ПустаяСсылка();
КонецФункции
		
Функция КомандаИгрока(Игрок, Дата=Неопределено) Экспорт
	Если ЗначениеЗаполнено(Игрок) Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	Перемещения.Команда КАК Команда
		                      |ИЗ
		                      |	РегистрСведений.ПеремещенияИгроков.СрезПоследних(&Дата, Игрок = &Игрок) КАК Перемещения");
		Запрос.УстановитьПараметр("Игрок",			Игрок);
		Запрос.УстановитьПараметр("Дата",			?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Команда;
		КонецЕсли;
	КонецЕсли;
	Возврат Справочники.Команды.ПустаяСсылка();
КонецФункции

Функция СоставКоманды(Команда, Дата=Неопределено) Экспорт
	Ответ	= Новый Массив;
	Если ЗначениеЗаполнено(Команда) Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	Перемещения.Игрок КАК Игрок
		                      |ИЗ
		                      |	РегистрСведений.ПеремещенияИгроков.СрезПоследних(&Дата, ) КАК Перемещения
		                      |ГДЕ
		                      |	Перемещения.Команда = &Команда");
		Запрос.УстановитьПараметр("Команда",		Команда);
		Запрос.УстановитьПараметр("Дата",			?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()));
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Ответ.Добавить(Выборка.Игрок);
		КонецЕсли;
	КонецЕсли;
	Возврат Ответ;
КонецФункции

Функция КомандыЛиги(Лига, Топ6=Ложь) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЧемпионатыКоманды.Команда КАК Команда
	                      |ИЗ
	                      |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |ГДЕ
	                      |	ЧемпионатыКоманды.Ссылка В(&Лига)");
	Если Топ6 Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЛигаКоманды.Команда КАК Команда
		               |ИЗ
		               |	Справочник.Лига.Команды КАК ЛигаКоманды
		               |ГДЕ
		               |	ЛигаКоманды.Ссылка = &Лига";
	ИначеЕсли ЗначениеЗаполнено(Лига.Страна) Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ЧемпионатыКоманды.Команда КАК Команда
		               |ИЗ
		               |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
		               |		ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
		               |ГДЕ
		               |	Чемпионаты.Владелец = &Лига
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Команда
		               |АВТОУПОРЯДОЧИВАНИЕ";
	КонецЕсли;
	Запрос.УстановитьПараметр("Лига",			Лига);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

Функция КомандыСтраны(Параметр) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ЧемпионатыКоманды.Команда КАК Команда
	                      |ИЗ
	                      |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
	                      |			ПО Чемпионаты.Владелец = Лига.Ссылка
	                      |		ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
	                      |ГДЕ
	                      |	Лига.Страна = &Параметр
	                      |
	                      |ОБЪЕДИНИТЬ
	                      |
	                      |ВЫБРАТЬ
	                      |	Команды.Ссылка
	                      |ИЗ
	                      |	Справочник.Команды КАК Команды
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
	                      |		ПО Команды.Город = Города.Ссылка
	                      |ГДЕ
	                      |	Команды.ПометкаУдаления = ЛОЖЬ
	                      |	И Города.Владелец = &Параметр
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Команда
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Если ТипЗнч(Параметр) = Тип("СправочникСсылка.Лига") И ЗначениеЗаполнено(Параметр.Страна) Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	СправочникКоманды.Ссылка КАК Команда
		               |ИЗ
		               |	Справочник.Команды КАК СправочникКоманды
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
		               |			ПО Города.Владелец = Лига.Страна
		               |		ПО СправочникКоманды.Город = Города.Ссылка
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |		ПО СправочникКоманды.Ссылка = ТурнирнаяТаблица.Команда
		               |ГДЕ
		               |	СправочникКоманды.ПометкаУдаления = ЛОЖЬ
		               |	И ВЫБОР
		               |			КОГДА СправочникКоманды.Город = ЗНАЧЕНИЕ(Справочник.Города.ПустаяСсылка)
		               |				ТОГДА ТурнирнаяТаблица.Команда ЕСТЬ NULL
		               |			ИНАЧЕ СправочникКоманды.Владелец = Лига.Владелец
		               |					И Лига.Ссылка = &Параметр
		               |		КОНЕЦ
		               |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ЧемпионатыКоманды.Команда
		               |ИЗ
		               |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
		               |		ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
		               |ГДЕ
		               |	Чемпионаты.Владелец = &Параметр
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Команда
		               |АВТОУПОРЯДОЧИВАНИЕ";
	ИначеЕсли ТипЗнч(Параметр) = Тип("СправочникСсылка.Лига") Тогда
		Возврат КомандыЛиги(Параметр);
	КонецЕсли;
	Запрос.УстановитьПараметр("Параметр",			Параметр);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

Функция КомандыТура(Тур, Все=Ложь) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЧемпионатыКоманды.Команда КАК Команда
	                      |ИЗ
	                      |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ПО ЧемпионатыКоманды.Команда = ТурнирнаяТаблица.Команда
	                      |			И (ТурнирнаяТаблица.Тур = &Тур)
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |		ПО ЧемпионатыКоманды.Ссылка = Туры.Владелец
	                      |ГДЕ
	                      |	Туры.Ссылка = &Тур
	                      |	И ТурнирнаяТаблица.Команда ЕСТЬ NULL
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Команда
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Если Тур.ОлимпийскаяСистема Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	Туры.Ссылка КАК Тур,
		               |	Туры.ДатаОкончания КАК ДатаОкончания,
		               |	ТурнирнаяТаблица.Команда КАК Команда,
		               |	СУММА(ТурнирнаяТаблица.КоличествоГолов) КАК КоличествоГолов,
		               |	МАКСИМУМ(ТурнирнаяТаблица.Регистратор) КАК Регистратор
		               |ПОМЕСТИТЬ Туры
		               |ИЗ
		               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры1
		               |			ПО Туры.Владелец = Туры1.Владелец
		               |				И Туры.Код < Туры1.Код
		               |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
		               |ГДЕ
		               |	Туры1.Ссылка = &Тур
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	Туры.Ссылка,
		               |	Туры.ДатаОкончания,
		               |	ТурнирнаяТаблица.Команда
		               |
		               |ИМЕЮЩИЕ
		               |	Туры.ДатаОкончания = МАКСИМУМ(Туры.ДатаОкончания)
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ТурнирнаяТаблица.Команда КАК Команда
		               |ИЗ
		               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |ГДЕ
		               |	ТурнирнаяТаблица.Тур = &Тур
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ТурнирнаяТаблица.Команда
		               |
		               |ИМЕЮЩИЕ
		               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТурнирнаяТаблица.Регистратор) = 1
		               |
		               |ОБЪЕДИНИТЬ
		               |
		               |ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ЧемпионатыКоманды.Команда
		               |ИЗ
		               |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Туры КАК Туры
		               |			ПО ТурнирнаяТаблица.Регистратор = Туры.Регистратор
		               |				И ТурнирнаяТаблица.Тур = Туры.Тур
		               |				И ТурнирнаяТаблица.Команда <> Туры.Команда
		               |		ПО ЧемпионатыКоманды.Команда = ТурнирнаяТаблица.Команда
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры1
		               |		ПО ЧемпионатыКоманды.Ссылка = Туры1.Владелец
		               |ГДЕ
		               |	Туры1.Ссылка = &Тур
		               |	И ВЫБОР
		               |			КОГДА ЕСТЬNULL(ТурнирнаяТаблица.КоличествоОчков, 0) >= 4
		               |				ТОГДА ИСТИНА
		               |			КОГДА ЕСТЬNULL(ТурнирнаяТаблица.КоличествоОчков, 0) >= 2
		               |				ТОГДА ТурнирнаяТаблица.КоличествоГолов > Туры.КоличествоГолов
		               |			ИНАЧЕ ТурнирнаяТаблица.КоличествоОчков ЕСТЬ NULL
		               |		КОНЕЦ
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Команда
		               |АВТОУПОРЯДОЧИВАНИЕ";
	ИначеЕсли Все Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЧемпионатыКоманды.Команда КАК Команда
		               |ИЗ
		               |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |		ПО ЧемпионатыКоманды.Команда = ТурнирнаяТаблица.Команда
		               |			И (ТурнирнаяТаблица.Тур = &Тур)
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
		               |		ПО ЧемпионатыКоманды.Ссылка = Туры.Владелец
		               |ГДЕ
		               |	Туры.Ссылка = &Тур
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Команда
		               |АВТОУПОРЯДОЧИВАНИЕ";
	КонецЕсли;
	Запрос.УстановитьПараметр("Тур",			Тур);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

Функция КомандыЧемпионата(Чемпионат) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ЧемпионатыКоманды.Команда КАК Команда
	                      |ИЗ
	                      |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |ГДЕ
	                      |	ЧемпионатыКоманды.Ссылка = &Чемпионат
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Команда
	                      |АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("Чемпионат",			Чемпионат);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

Функция КомандаНайти(Наименование, Владелец=Неопределено) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Команды.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Команды КАК Команды
	                      |ГДЕ
	                      |	Команды.Владелец = &ВидСпорта
	                      |	И (Команды.Наименование = &Наименование
	                      |			ИЛИ Команды.Комментарий ПОДОБНО &Комментарий)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Команды.Наименование = &Наименование УБЫВ,
	                      |	Команды.ПометкаУдаления");
	Запрос.УстановитьПараметр("ВидСпорта",		?(ЗначениеЗаполнено(Владелец), Владелец, Футбол()));
	Если ТипЗнч(Владелец) = Тип("СправочникСсылка.Чемпионаты") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Тимз.Ссылка КАК Ссылка
		               |ИЗ
		               |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Команды КАК Тимз
		               |		ПО ЧемпионатыКоманды.Команда = Тимз.Ссылка
		               |ГДЕ
		               |	ЧемпионатыКоманды.Ссылка = &Чемпионат
		               |	И (Тимз.Наименование = &Наименование
		               |			ИЛИ Тимз.Комментарий ПОДОБНО &Комментарий)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	Тимз.Ссылка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Тимз.Наименование = &Наименование УБЫВ,
		               |	Тимз.ПометкаУдаления";
		Запрос.УстановитьПараметр("Чемпионат",		Владелец);
	ИначеЕсли ТипЗнч(Владелец) = Тип("СправочникСсылка.Туры") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Тимз.Ссылка КАК Ссылка
		               |ИЗ
		               |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Команды КАК Тимз
		               |		ПО ЧемпионатыКоманды.Команда = Тимз.Ссылка
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
		               |		ПО ЧемпионатыКоманды.Ссылка = Туры.Владелец
		               |ГДЕ
		               |	Туры.Ссылка = &Тур
		               |	И (Тимз.Наименование = &Наименование
		               |			ИЛИ Тимз.Комментарий ПОДОБНО &Комментарий)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	Тимз.Ссылка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Тимз.Наименование = &Наименование УБЫВ,
		               |	Тимз.ПометкаУдаления";
		Запрос.УстановитьПараметр("Тур",			Владелец);
	ИначеЕсли ТипЗнч(Владелец) = Тип("СправочникСсылка.Страны") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Команды.Ссылка КАК Ссылка
		               |ИЗ
		               |	Справочник.Команды КАК Команды
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
		               |		ПО Команды.Город = Города.Ссылка
		               |ГДЕ
		               |	(Команды.Наименование = &Наименование
		               |			ИЛИ Команды.Комментарий ПОДОБНО &Комментарий)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Города.Владелец = &Страна УБЫВ,
		               |	Команды.Наименование = &Наименование УБЫВ,
		               |	Команды.ПометкаУдаления";
		Запрос.УстановитьПараметр("Страна",			Владелец);
	КонецЕсли;
	Запрос.УстановитьПараметр("Наименование",	СокрЛП(Наименование));
	Запрос.УстановитьПараметр("Комментарий",	"%" + СокрЛП(Наименование) + "%");
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Команды.ПустаяСсылка();
КонецФункции

Функция ГородНайти(Наименование, Страна=Неопределено) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Города.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Города КАК Города
	                      |ГДЕ
	                      |	(Города.Наименование = &Наименование
	                      |			ИЛИ Города.Комментарий ПОДОБНО &Комментарий)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Города.Наименование = &Наименование УБЫВ,
	                      |	Города.ПометкаУдаления");
	Если ЗначениеЗаполнено(Страна) Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Города.Ссылка КАК Ссылка
		               |ИЗ
		               |	Справочник.Города КАК Города
		               |ГДЕ
		               |	(Города.Наименование = &Наименование
		               |			ИЛИ Города.Комментарий ПОДОБНО &Комментарий)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Города.Владелец = &Страна УБЫВ,
		               |	Города.Наименование = &Наименование УБЫВ,
		               |	Города.ПометкаУдаления";
		Запрос.УстановитьПараметр("Страна",					Страна);
	КонецЕсли;
	Запрос.УстановитьПараметр("Наименование",			СокрЛП(Наименование));
	Запрос.УстановитьПараметр("Комментарий",			"%" + СокрЛП(Наименование) + "%");
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Города.ПустаяСсылка();
КонецФункции

Функция СтадионНайти(Параметр, Все=Ложь) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Стадионы.Ссылка КАК Ссылка,
	                      |	МИНИМУМ(Стадионы.Порядок) КАК Порядок
	                      |ИЗ
	                      |	(ВЫБРАТЬ
	                      |		Стадионы.Ссылка КАК Ссылка,
	                      |		ВЫБОР
	                      |			КОГДА Команды.Ссылка = &Параметр
	                      |				ТОГДА 0
	                      |			КОГДА Стадионы.Наименование = &Наименование
	                      |				ТОГДА 1
	                      |			ИНАЧЕ 2
	                      |		КОНЕЦ + ВЫБОР
	                      |			КОГДА Стадионы.ПометкаУдаления = ЛОЖЬ
	                      |				ТОГДА 0
	                      |			ИНАЧЕ 5
	                      |		КОНЕЦ КАК Порядок
	                      |	ИЗ
	                      |		Справочник.Стадионы КАК Стадионы
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Команды КАК Команды
	                      |			ПО Стадионы.Владелец = Команды.Ссылка
	                      |	ГДЕ
	                      |		(Стадионы.Наименование = &Наименование
	                      |				ИЛИ Стадионы.Комментарий ПОДОБНО &Комментарий
	                      |				ИЛИ Команды.Ссылка = &Параметр
	                      |				ИЛИ Команды.Наименование = &Наименование)
	                      |	
	                      |	ОБЪЕДИНИТЬ ВСЕ
	                      |	
	                      |	ВЫБРАТЬ
	                      |		Стадионы.Ссылка,
	                      |		20 + ВЫБОР
	                      |			КОГДА Команды.Ссылка = &Параметр
	                      |				ТОГДА -10
	                      |			КОГДА Стадионы.Город = &Параметр
	                      |				ТОГДА 0
	                      |			КОГДА Стадионы.Наименование = &Наименование
	                      |				ТОГДА 1
	                      |			ИНАЧЕ 2
	                      |		КОНЕЦ + ВЫБОР
	                      |			КОГДА Стадионы.ПометкаУдаления = ЛОЖЬ
	                      |				ТОГДА 0
	                      |			ИНАЧЕ 5
	                      |		КОНЕЦ
	                      |	ИЗ
	                      |		Справочник.Стадионы КАК Стадионы
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Команды КАК Команды
	                      |			ПО Стадионы.Город = Команды.Город
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
	                      |			ПО Стадионы.Владелец = Города.Ссылка
	                      |	ГДЕ
	                      |		(Стадионы.Город = &Параметр
	                      |				ИЛИ Стадионы.Наименование = &Наименование
	                      |				ИЛИ Стадионы.Комментарий ПОДОБНО &Комментарий
	                      |				ИЛИ Города.Наименование = &Наименование
	                      |				ИЛИ Команды.Ссылка = &Параметр)) КАК Стадионы
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	Стадионы.Ссылка
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Порядок");
	Если ТипЗнч(Параметр) = Тип("СправочникСсылка.Чемпионаты") Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	Стадионы.Ссылка КАК Ссылка,
		               |	ВЫБОР
		               |		КОГДА Стадионы.ПометкаУдаления = ЛОЖЬ
		               |			ТОГДА 0
		               |		ИНАЧЕ 5
		               |	КОНЕЦ КАК Порядок
		               |ИЗ
		               |	Справочник.Стадионы КАК Стадионы
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Команды КАК Команды
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		               |			ПО (ЧемпионатыКоманды.Команда = Команды.Ссылка)
		               |		ПО Стадионы.Город = Команды.Город
		               |ГДЕ
		               |	ЧемпионатыКоманды.Ссылка = &Параметр
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Порядок";
	КонецЕсли;
	Запрос.УстановитьПараметр("Параметр",			Параметр);
	Запрос.УстановитьПараметр("Наименование",		СокрЛП(Параметр));
	Запрос.УстановитьПараметр("Комментарий",		"%" + СокрЛП(Параметр) + "%");
	Если СтрДлина(СокрЛП(Параметр)) < 5 Тогда
		Запрос.Текст = СтрУдалить(Запрос.Текст, "ИЛИ Стадионы.Комментарий ПОДОБНО &Комментарий");
	КонецЕсли;
	Выборка	= Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
	Если Все Тогда
		Возврат Выборка;
	КонецЕсли;
	Для Каждого Ответ Из Выборка Цикл
		Возврат Ответ;
	КонецЦикла;
	Возврат Справочники.Стадионы.ПустаяСсылка();
КонецФункции

Функция ЧемпионатНайти(Параметр, Дата=Неопределено) Экспорт
	Если ТипЗнч(Параметр) = Тип("СправочникСсылка.Туры") Тогда
		Возврат Параметр.Владелец;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	ЧемпионатыКоманды.Ссылка КАК Ссылка,
	                      |	2 КАК Порядок
	                      |ИЗ
	                      |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
	                      |		ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
	                      |ГДЕ
	                      |	&ДатаН МЕЖДУ Чемпионаты.ДатаНачала И Чемпионаты.ДатаОкончания
	                      |	И Чемпионаты.ПометкаУдаления = ЛОЖЬ
	                      |	И ЧемпионатыКоманды.Команда В(&Команды)
	                      |
	                      |ОБЪЕДИНИТЬ
	                      |
	                      |ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Туры.Владелец,
	                      |	1
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица.Обороты(&ДатаН, &ДатаК, , Команда В (&Команды)) КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
	                      |			ПО Туры.Владелец = Чемпионаты.Ссылка
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Порядок");
	//Если ТипЗнч(Команды) = Тип("СправочникСсылка.Команды") Тогда
	//КонецЕсли;
	Запрос.УстановитьПараметр("Команды",	Параметр);
	Запрос.УстановитьПараметр("ДатаН",		НачалоДня(?(Дата=Неопределено, ТекущаяДатаСеанса(), Дата)));
	Запрос.УстановитьПараметр("ДатаК",		КонецДня(?(Дата=Неопределено, ТекущаяДатаСеанса(), Дата)));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Чемпионаты.ПустаяСсылка();
КонецФункции

Функция ЧемпионатПолучитьПоследнее(Команды=Неопределено, ОлимпийскаяСистема=Ложь) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Туры.Владелец КАК Ссылка
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
						  //|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
						  ////|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
						  ////|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Страны КАК Страны
						  ////|					ПО Лига.Страна = Страны.Ссылка
						  ////|				ПО Чемпионаты.Владелец = Лига.Ссылка
						  //|			ПО Туры.Владелец = Чемпионаты.Ссылка
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |ГДЕ
	                      |	ТурнирнаяТаблица.Команда В(&Команды)
	                      |	И Туры.ОлимпийскаяСистема = &Система
						  //|	И (Лига.Страна.Ссылка ЕСТЬ NULL) = ЛОЖЬ
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ТурнирнаяТаблица.Период УБЫВ");
	Запрос.УстановитьПараметр("Команды",	Команды);
	Запрос.УстановитьПараметр("Система",	ОлимпийскаяСистема);
	Если ТипЗнч(Команды) = Тип("СправочникСсылка.Стадионы") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Туры.Владелец КАК Ссылка
		               |ИЗ
		               |	Документ.Матч КАК Матч
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
					   //|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
					   ////|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
					   ////|				ПО Чемпионаты.Владелец = Лига.Ссылка
					   //|			ПО Туры.Владелец = Чемпионаты.Ссылка
		               |		ПО Матч.Тур = Туры.Ссылка
		               |ГДЕ
		               |	Матч.Проведен = ИСТИНА
		               |	И Матч.Стадион В(&Команды)
		               |	И Туры.ОлимпийскаяСистема = &Система
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Матч.Дата";
	ИначеЕсли НЕ ЗначениеЗаполнено(Команды) Тогда
		Запрос.УстановитьПараметр("Команды",	МояКомандаПолучить());
		//Запрос.УстановитьПараметр("Система",	Ложь);
	//ИначеЕсли ОлимпийскаяСистема Тогда
	//	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	//	               |	Туры.Владелец КАК Ссылка
	//	               |ИЗ
	//	               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	//	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	//	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
	//				   //|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
	//				   //|				ПО Чемпионаты.Владелец = Лига.Ссылка
	//	               |			ПО Туры.Владелец = Чемпионаты.Ссылка
	//	               |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	//	               |ГДЕ
	//	               |	ТурнирнаяТаблица.Команда В(&Команды)
	//	               |	И Туры.ОлимпийскаяСистема = ИСТИНА
	//	               |
	//	               |УПОРЯДОЧИТЬ ПО
	//	               |	ТурнирнаяТаблица.Период УБЫВ";
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Чемпионаты.ПустаяСсылка();
КонецФункции

Функция ЧемпионатЛигиПоследний(Лига) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	ТурнирнаяТаблица.Тур.Владелец КАК Ссылка,
	                      |	ТурнирнаяТаблица.Период КАК Период
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |ГДЕ
	                      |	ТурнирнаяТаблица.Тур.Владелец.Владелец = &Лига
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Период УБЫВ");
	Запрос.УстановитьПараметр("Лига",	Лига);
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат ?(Выборка.Следующий(), Выборка.Ссылка, Справочники.Чемпионаты.ПустаяСсылка());
КонецФункции

Функция Тур(Параметр, Дата) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Туры.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Туры КАК Туры
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты.Команды КАК Чемпионаты
	                      |		ПО Туры.Владелец = Чемпионаты.Ссылка
	                      |ГДЕ
	                      |	&Дата МЕЖДУ Туры.ДатаНачала И Туры.ДатаОкончания
	                      |	И Туры.ПометкаУдаления = ЛОЖЬ
	                      |	И Чемпионаты.Команда В(&Параметр)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Туры.Код");
	Запрос.УстановитьПараметр("Параметр",		Параметр);
	Запрос.УстановитьПараметр("Дата",			НачалоДня(Дата));
	Если ТипЗнч(Параметр) = Тип("СправочникСсылка.Чемпионаты") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Туры.Ссылка КАК Ссылка
		               |ИЗ
		               |	Справочник.Туры КАК Туры
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
		               |		ПО Туры.Владелец = Чемпионаты.Ссылка
		               |ГДЕ
		               |	Туры.Владелец = &Параметр
		               |	И &Дата МЕЖДУ Туры.ДатаНачала И Туры.ДатаОкончания
		               |	И Туры.ПометкаУдаления = ЛОЖЬ
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Туры.Код";
	ИначеЕсли ТипЗнч(Параметр) = Тип("СправочникСсылка.ВидыСпорта") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Туры.Ссылка КАК Ссылка
		               |ИЗ
		               |	Справочник.Туры КАК Туры
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
		               |		ПО Туры.Владелец = Чемпионаты.Ссылка
		               |ГДЕ
		               |	&Дата МЕЖДУ Туры.ДатаНачала И Туры.ДатаОкончания
		               |	И Туры.ПометкаУдаления = ЛОЖЬ
		               |	И Чемпионаты.Владелец = &Параметр
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Туры.Код";
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Туры.ПустаяСсылка();
КонецФункции

Функция ТурПоследний(Чемпионат) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Туры.Ссылка КАК Ссылка,
	                      |	Туры.Код КАК Код,
	                      |	Туры.ДатаОкончания КАК ДатаОкончания
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |ГДЕ
	                      |	Туры.Владелец = &Чемпионат
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Код УБЫВ");
	Запрос.УстановитьПараметр("Чемпионат",	Чемпионат);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Туры.ПустаяСсылка();
КонецФункции

Функция ТурНеПоследний(Чемпионат)
	Ответ = Справочники.Туры.ПустаяСсылка();
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Туры.Ссылка КАК Ссылка,
	                      |	Туры.Код КАК Код,
	                      |	ЕСТЬNULL(СУММА(ТурнирнаяТаблица.КоличествоОчков), 0) КАК Количество,
	                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЧемпионатыКоманды.Команда) * 2 - 2 КАК Последний
	                      |ИЗ
	                      |	Справочник.Туры КАК Туры
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |		ПО Туры.Владелец = ЧемпионатыКоманды.Ссылка
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ПО Туры.Ссылка = ТурнирнаяТаблица.Тур
	                      |			И (ТИПЗНАЧЕНИЯ(ТурнирнаяТаблица.Регистратор) = ТИП(Документ.Матч))
	                      |ГДЕ
	                      |	Туры.Владелец = &Чемпионат
	                      |	И ЕСТЬNULL(ТурнирнаяТаблица.Период, &Дата) >= &Дата
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	Туры.Ссылка,
	                      |	Туры.Код
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Код");
	Запрос.УстановитьПараметр("Чемпионат",	Чемпионат);
	Запрос.УстановитьПараметр("Дата",		ТекущаяДатаСеанса() - Сутки(13));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() И Выборка.Количество > 0 И Выборка.Код < Выборка.Последний Цикл
		Ответ = Выборка.Ссылка;
	КонецЦикла;
	Возврат Ответ;
КонецФункции

Функция ВидСпорта(Ссылка) Экспорт
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.ВидыСпорта") Тогда
		Возврат Ссылка;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Команды") Тогда
		Возврат Ссылка.Владелец;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Лига") Тогда
		Возврат Ссылка.Владелец;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Амплуа") Тогда
		Возврат Ссылка.Владелец;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Чемпионаты") Тогда
		Возврат Ссылка.Владелец.Владелец;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Туры") Тогда
		Возврат Ссылка.Владелец.Владелец.Владелец;
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Стадионы") Тогда
		Возврат Ссылка.Владелец.Владелец;
		
	КонецЕсли;
	Возврат Справочники.ВидыСпорта.ПустаяСсылка();
КонецФункции

Функция ВидыСпорта(Наименование="Футбол") Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВидыСпорта.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыСпорта КАК ВидыСпорта
	|ГДЕ
	|	ВидыСпорта.Наименование = &Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидыСпорта.ПометкаУдаления");
	Запрос.УстановитьПараметр("Наименование",		СокрЛП(Наименование));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.ВидыСпорта.ПустаяСсылка();
КонецФункции

Функция Лига(Чемпионат) Экспорт
	Если ТипЗнч(Чемпионат) = Тип("СправочникСсылка.Туры") Тогда
		Возврат Чемпионат.Владелец.Владелец;
	КонецЕсли;
	Возврат Чемпионат.Владелец;
КонецФункции

Функция ЛигиКоманды(Команда) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Чемпионаты.Владелец КАК Лига
	                      |ИЗ
	                      |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
	                      |		ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
	                      |ГДЕ
	                      |	ЧемпионатыКоманды.Команда В(&Команда)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	Чемпионаты.Владелец
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЧемпионатыКоманды.Ссылка) УБЫВ");
	Запрос.УстановитьПараметр("Команда",			Команда);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

Функция ЛигаКоличествоКоманд(Лига) Экспорт
	Возврат Лига.КоличествоКоманд;
КонецФункции

Функция ЛигаОлимпийскаяСистема(ЛигаЧемпионат) Экспорт
	Если ТипЗнч(ЛигаЧемпионат) = Тип("СправочникСсылка.Чемпионаты") Тогда
		Возврат ЛигаОлимпийскаяСистема(ЛигаЧемпионат.Владелец);
	КонецЕсли;
	Возврат ЛигаЧемпионат.ОлимпийскаяСистема;
КонецФункции

Функция ЛигаКоманды(Команда) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Лига.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
	                      |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
	                      |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Страны КАК Страны
	                      |				ПО Лига.Страна = Страны.Ссылка
	                      |			ПО Чемпионаты.Владелец = Лига.Ссылка
	                      |		ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
	                      |ГДЕ
	                      |	ЧемпионатыКоманды.Команда = &Команда
	                      |	И Лига.ОлимпийскаяСистема = ЛОЖЬ
	                      |	И Лига.КоличествоРотация >= 1
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Лига.ПометкаУдаления");
	Запрос.УстановитьПараметр("Команда",		Команда);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Лига.ПустаяСсылка();
КонецФункции

Функция ЛигаСтраны(Страна) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Лига.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Лига КАК Лига
	                      |ГДЕ
	                      |	Лига.Страна = &Страна
	                      |	И Лига.ОлимпийскаяСистема = ЛОЖЬ
	                      |	И Лига.КоличествоРотация >= 1
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Лига.ПометкаУдаления");
	Запрос.УстановитьПараметр("Страна",			Страна);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Лига.ПустаяСсылка();
КонецФункции

Функция МатчОбработкаПроверкиЗаполнения(Объект) Экспорт
	Отказ= Ложь;
	Гугл = Новый Структура("Команда");
	Для Каждого тСтрока Из Объект.СоставыКоманд Цикл
		Если ЗначениеЗаполнено(тСтрока.Команда) Тогда
			Гугл.Команда = тСтрока.Команда;
			Если Объект.Команды.НайтиСтроки(Гугл).Количество() = 0 Тогда
				Отказ = Истина;
			КонецЕсли;
		ИначеЕсли Отказ Тогда
			Прервать;
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат Отказ;
КонецФункции

Функция МатчиТура(Тур) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Матч.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Документ.Матч КАК Матч
	                      |ГДЕ
	                      |	Матч.Тур = &Тур
	                      |	И Матч.Проведен = ИСТИНА
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Матч.Дата");
	Запрос.УстановитьПараметр("Тур",		Тур);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

Функция ТурнирнаяТаблица(Чемпионат, НомерСтроки=0) Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Команды.Команда КАК Команда,
	|	СУММА(ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ТурнирнаяТаблица.Регистратор) = ТИП(Документ.Матч)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоИгр,
	|	ЕСТЬNULL(СУММА(ТурнирнаяТаблица.КоличествоГолов), 0) КАК Забито,
	|	ЕСТЬNULL(СУММА(ТурнирнаяТаблица.КоличествоОчков), 0) КАК КоличествоОчков,
	|	СУММА(ВЫБОР
	|			КОГДА ТурнирнаяТаблица.КоличествоОчков > Игра.КоличествоОчков
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Выигрыш,
	|	СУММА(ВЫБОР
	|			КОГДА ТурнирнаяТаблица.КоличествоОчков = Игра.КоличествоОчков
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Ничья,
	|	СУММА(ВЫБОР
	|			КОГДА ТурнирнаяТаблица.КоличествоОчков < Игра.КоличествоОчков
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Проигрыш,
	|	ЕСТЬNULL(СУММА(Игра.КоличествоГолов), 0) КАК Пропущено,
	|	ЕСТЬNULL(СУММА(ТурнирнаяТаблица.КоличествоГолов), 0) - ЕСТЬNULL(СУММА(Игра.КоличествоГолов), 0) КАК Разница
	|ИЗ
	|	Справочник.Чемпионаты.Команды КАК Команды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	|			ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	|				И (Туры.Владелец = &Чемпионат)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК Игра
	|			ПО (ТурнирнаяТаблица.Регистратор = Игра.Регистратор)
	|				И (ТурнирнаяТаблица.НомерСтроки <> Игра.НомерСтроки)
	|		ПО Команды.Команда = ТурнирнаяТаблица.Команда
	|			И (ТурнирнаяТаблица.НомерСтроки = &НомерСтроки)
	|ГДЕ
	|	Команды.Ссылка = &Чемпионат
	|	И Туры.ОлимпийскаяСистема = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	Команды.Команда
	|
	|УПОРЯДОЧИТЬ ПО
	|	КоличествоОчков УБЫВ,
	|	Разница УБЫВ,
	|	Забито УБЫВ,
	|	Команда
	|АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("Чемпионат",		Чемпионат);
	Запрос.УстановитьПараметр("НомерСтроки",	НомерСтроки);
	Если НЕ (НомерСтроки = 1 Или НомерСтроки = 2) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И (ТурнирнаяТаблица.НомерСтроки = &НомерСтроки)", "");
	КонецЕсли;
	Возврат Запрос.Выполнить().Выбрать();
КонецФункции

Функция КомментарииПолучить(Чемпионат, Команда=Неопределено) Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТурнирнаяТаблица.Период КАК Дата,
	|	ТурнирнаяТаблица.Регистратор КАК Регистратор,
	|	ВЫБОР
	|		КОГДА ДЛИНАСТРОКИ(СнятиеОчков.Комментарий) = 0
	|			ТОГДА СнятиеОчков.Представление
	|		ИНАЧЕ ПОДСТРОКА(СнятиеОчков.Комментарий, 1, 140)
	|	КОНЕЦ КАК Комментарий,
	|	ТурнирнаяТаблица.Команда КАК Команда,
	|	ТурнирнаяТаблица.КоличествоОчков КАК КоличествоОчков
	|ИЗ
	|	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СнятиеОчков КАК СнятиеОчков
	|		ПО ТурнирнаяТаблица.Регистратор = СнятиеОчков.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	|		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	|ГДЕ
	|	Туры.Владелец = &Чемпионат
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Команда");
	Запрос.УстановитьПараметр("Чемпионат",		Чемпионат);
	Если ЗначениеЗаполнено(Команда) Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТурнирнаяТаблица.Период КАК Дата,
		               |	ТурнирнаяТаблица.Регистратор КАК Регистратор,
		               |	ВЫБОР
		               |		КОГДА ДЛИНАСТРОКИ(СнятиеОчков.Комментарий) = 0
		               |			ТОГДА СнятиеОчков.Представление
		               |		ИНАЧЕ ПОДСТРОКА(СнятиеОчков.Комментарий, 1, 140)
		               |	КОНЕЦ КАК Комментарий,
		               |	ТурнирнаяТаблица.Команда КАК Команда,
		               |	ТурнирнаяТаблица.КоличествоОчков КАК КоличествоОчков
		               |ИЗ
		               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СнятиеОчков КАК СнятиеОчков
		               |		ПО ТурнирнаяТаблица.Регистратор = СнятиеОчков.Ссылка
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
		               |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
		               |ГДЕ
		               |	Туры.Владелец = &Чемпионат
		               |	И ТурнирнаяТаблица.Команда = &Команда
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Дата";
		Запрос.УстановитьПараметр("Команда",		Команда);
	КонецЕсли;
	Возврат Запрос.Выполнить().Выбрать();
КонецФункции

Функция МояКомандаПолучить() Экспорт
	МояКоманда	= Константы.МояКоманда.Получить();
	Если НЕ ЗначениеЗаполнено(МояКоманда) Тогда
		МояКоманда	= КомандаНайти(МояКоманда(), СтранаНайти("ENG"));
	КонецЕсли;
	Возврат МояКоманда;
КонецФункции

Функция ВключитьНапоминания()
	Возврат Константы.ВключитьНапоминания.Получить();
КонецФункции

Функция АвтоудалениеНапоминаний()
	Возврат Константы.АвтоудалениеНапоминаний.Получить();
КонецФункции

Функция СтарыйВидАнонсов() Экспорт
	Возврат Константы.СтарыйВидАнонсов.Получить();
КонецФункции

Функция КоличествоМатчейВАнонсе() Экспорт
	Возврат Макс(5, Константы.КоличествоМатчейВАнонсе.Получить());
КонецФункции

Функция ТурнирнаяТаблицаКакНаBBC() Экспорт
	Возврат Константы.ТурнирнаяТаблицаКакНаBBC.Получить();
КонецФункции

Функция ВыводитьТурВместоЧемпионата() Экспорт
	Возврат Константы.ВыводитьТурВместоЧемпионата.Получить();
КонецФункции

Функция СтатистикаИгр(Команда, Чемпионат=Неопределено) Экспорт
	Итоги	= Новый Структура("Побед,Ничьих,Проигрышей,Количество,Результативность", 0, 0, 0, 0, 0);
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТурнирнаяТаблица.КоличествоОчков КАК КоличествоОчков,
	                      |	СУММА(1) КАК Количество,
	                      |	СУММА(ТурнирнаяТаблица.КоличествоГолов) КАК КоличествоГолов
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч КАК Матч
	                      |		ПО ТурнирнаяТаблица.Регистратор = Матч.Ссылка
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |ГДЕ
	                      |	ТурнирнаяТаблица.Команда = &Команда
	                      |	И Туры.Владелец = &Чемпионат
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ТурнирнаяТаблица.КоличествоОчков
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	КоличествоОчков");
	Запрос.УстановитьПараметр("Команда",	Команда);
	Запрос.УстановитьПараметр("Чемпионат",	Чемпионат);
	Если НЕ ЗначениеЗаполнено(Чемпионат) Тогда
		Запрос.Текст = СтрУдалить(Запрос.Текст, "Туры.Владелец = &Чемпионат");
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.КоличествоОчков = 0 Тогда
			Итоги.Проигрышей = Выборка.Количество;
		ИначеЕсли Выборка.КоличествоОчков = 1 Тогда
			Итоги.Ничьих = Выборка.Количество;
		Иначе
			Итоги.Побед = Выборка.Количество;
		КонецЕсли;
		Итоги.Количество		= Итоги.Количество + Выборка.Количество;
		Итоги.Результативность	= Итоги.Результативность + Выборка.КоличествоГолов;
	КонецЦикла;
	Ответ = Новый Соответствие;
	Ответ.Вставить("Проигрышей",		Итоги.Проигрышей);
	Ответ.Вставить("Ничьих",			Итоги.Ничьих);
	Ответ.Вставить("Побед",				Итоги.Побед);
	Ответ.Вставить(?(ЗначениеЗаполнено(Чемпионат), "Игр с начала сезона", "Игр за последний год"),		Итоги.Количество);
	Если Итоги.Количество = 0 Тогда
		Ответ.Вставить("Результативность средняя", 0);
	Иначе
		Ответ.Вставить("Результативность средняя", Окр(Итоги.Результативность / Итоги.Количество, 1));
	КонецЕсли;
	Ответ.Вставить("Результативность",	Итоги.Результативность);
	Возврат Ответ;
КонецФункции

Функция МестоВЧемпионате(Команда, Чемпионат=Неопределено) Экспорт
	Ответ = 0;
	ШалостьУдалась = Ложь;
	Выборка = ТурнирнаяТаблица(?(Чемпионат=Неопределено, ЧемпионатПолучитьПоследнее(Команда), Чемпионат));
	Пока НЕ ШалостьУдалась И Выборка.Следующий() Цикл
		Ответ = Ответ + 1;
		Если Выборка.Команда = Команда Тогда
			ШалостьУдалась = Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат ?(ШалостьУдалась, Ответ, 0);
КонецФункции

Функция ЭтоДерби(Матч) Экспорт
	Запрос	= Новый Запрос(
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(Команды.Город) + КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Команды.Город) КАК Количество
	|ИЗ
	|	Документ.Матч.Команды КАК МатчКоманды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Команды КАК Команды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
	|			ПО Команды.Город = Города.Ссылка
	|		ПО МатчКоманды.Команда = Команды.Ссылка
	|ГДЕ
	|	МатчКоманды.Ссылка = &Матч");
	Запрос.УстановитьПараметр("Матч",	Матч);
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат (Выборка.Следующий() И Выборка.Количество = 3);
КонецФункции

Функция ЕстьИстория(Ссылка, Вторая=Неопределено) Экспорт
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда Возврат Ложь; КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",			Ссылка);
	Запрос.УстановитьПараметр("Вторая",			Вторая);
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Команды") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	ТурнирнаяТаблица.Период КАК Период
		               |ИЗ
		               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |ГДЕ
		               |	ТурнирнаяТаблица.Команда = &Ссылка
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	Чемпионаты.ДатаНачала
		               |ИЗ
		               |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
		               |		ПО ЧемпионатыКоманды.Ссылка = Чемпионаты.Ссылка
		               |ГДЕ
		               |	ЧемпионатыКоманды.Команда = &Ссылка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Период";
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Игроки") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	МатчСоставыКоманд.Ссылка КАК Ссылка
		               |ИЗ
		               |	Документ.Матч.СоставыКоманд КАК МатчСоставыКоманд
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
		               |		ПО МатчСоставыКоманд.Ссылка = ТурнирнаяТаблица.Регистратор
		               |ГДЕ
		               |	МатчСоставыКоманд.Игрок = &Ссылка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Ссылка";
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Лига") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Чемпионаты.Ссылка КАК Ссылка
		               |ИЗ
		               |	Справочник.Чемпионаты КАК Чемпионаты
		               |ГДЕ
		               |	Чемпионаты.Владелец = &Ссылка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Ссылка";
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Стадионы") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Матч.Ссылка КАК Ссылка
		               |ИЗ
		               |	Документ.Матч КАК Матч
		               |ГДЕ
		               |	Матч.Стадион = &Ссылка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Ссылка";
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Чемпионаты") Тогда
		Если Вторая = Неопределено Тогда
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
			               |	Туры.Ссылка КАК Ссылка
			               |ИЗ
			               |	Справочник.Туры КАК Туры
			               |ГДЕ
			               |	Туры.Владелец = &Ссылка
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	Ссылка";
		Иначе
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	ТурнирнаяТаблица.Период КАК Период
	                      |ИЗ
	                      |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	                      |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	                      |ГДЕ
	                      |	ТурнирнаяТаблица.Команда = &Вторая
	                      |	И Туры.Владелец = &Ссылка
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Период";
		КонецЕсли;
	КонецЕсли;
	
	Возврат (НЕ ПустаяСтрока(Запрос.Текст) И НЕ Запрос.Выполнить().Пустой());
КонецФункции

Функция ИзображениеПолучить(Ссылка, КакЕсть=Ложь) Экспорт
	Если КакЕсть Тогда
		Картинка = Новый Картинка;
		Попытка
			ДвоичныеДанные = Ссылка.Изображение.Получить();
			Если ТипЗнч(ДвоичныеДанные) = Тип("ДвоичныеДанные") Тогда
				Картинка = Новый Картинка(ДвоичныеДанные);
			КонецЕсли;
		Исключение
			Логировать("СерверныйФункции.ИзображениеПолучить", ОписаниеОшибки(), Ссылка);
		КонецПопытки;
		Возврат Картинка;
	ИначеЕсли Ссылка.Изображение.Получить() = Неопределено Тогда
		Возврат ИзображениеДефолтПолучить();
	КонецЕсли;
	Возврат ПолучитьНавигационнуюСсылку(Ссылка, "Изображение");
КонецФункции

Функция ИзображениеДефолтПолучить() Экспорт
	Возврат "";
КонецФункции

Функция Футбол() Экспорт
	Возврат Справочники.ВидыСпорта.Футбол;
КонецФункции

Функция Амплуа(Наименование="Вратарь") Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Амплуа.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Амплуа КАК Амплуа
	|ГДЕ
	|	Амплуа.Наименование = &Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Амплуа.ПометкаУдаления");
	Запрос.УстановитьПараметр("Наименование",		СокрЛП(Наименование));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Амплуа.ПустаяСсылка();
КонецФункции

Функция ИгрокНайти(Наименование, Команда=Неопределено) Экспорт
	Ответ	= Новый Структура("Игрок,Команда", Справочники.Игроки.ПустаяСсылка(), Справочники.Команды.ПустаяСсылка());
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Игроки.Ссылка КАК Игрок,
	                      |	ЕСТЬNULL(ПеремещенияИгроков.Команда, ЗНАЧЕНИЕ(Справочник.Команды.ПустаяСсылка)) КАК Команда
	                      |ИЗ
	                      |	Справочник.Игроки КАК Игроки
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПеремещенияИгроков.СрезПоследних КАК ПеремещенияИгроков
	                      |		ПО Игроки.Ссылка = ПеремещенияИгроков.Игрок
	                      |ГДЕ
	                      |	(Игроки.Наименование = &Наименование
	                      |			ИЛИ Игроки.Комментарий ПОДОБНО &Комментарий)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Игроки.Наименование = &Наименование УБЫВ,
	                      |	Игроки.ПометкаУдаления");
	Если ЗначениеЗаполнено(Команда) Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	ПеремещенияИгроков.Игрок КАК Игрок,
		               |	ПеремещенияИгроков.Команда КАК Команда
		               |ИЗ
		               |	РегистрСведений.ПеремещенияИгроков КАК ПеремещенияИгроков
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Игроки КАК Игроки
		               |		ПО ПеремещенияИгроков.Игрок = Игроки.Ссылка
		               |ГДЕ
		               |	ПеремещенияИгроков.Команда В(&Команда)
		               |	И (Игроки.Наименование = &Наименование
		               |			ИЛИ Игроки.Комментарий ПОДОБНО &Комментарий)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Игроки.Наименование = &Наименование УБЫВ,
		               |	Игроки.ПометкаУдаления,
		               |	ПеремещенияИгроков.Период УБЫВ";
		Запрос.УстановитьПараметр("Команда",			Команда);
	КонецЕсли;
	Запрос.УстановитьПараметр("Наименование",		СокрЛП(Наименование));
	Запрос.УстановитьПараметр("Комментарий",		"%" + СокрЛП(Наименование) + "%");
	Выборка	= Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Ответ, Выборка);
	Иначе
		Слова	= Разделить(Наименование);
		Если Слова.Количество() > 1 Тогда
			Если ЗначениеЗаполнено(Команда) Тогда
				Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
				               |	ПеремещенияИгроков.Игрок КАК Игрок,
				               |	ПеремещенияИгроков.Команда КАК Команда
				               |ИЗ
				               |	РегистрСведений.ПеремещенияИгроков КАК ПеремещенияИгроков
				               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Игроки КАК Игроки
				               |		ПО ПеремещенияИгроков.Игрок = Игроки.Ссылка
				               |ГДЕ
				               |	ПеремещенияИгроков.Команда В(&Команда)
				               |	И Игроки.Наименование ПОДОБНО &Слово1
				               |	И Игроки.Наименование ПОДОБНО &Слово2
				               |
				               |УПОРЯДОЧИТЬ ПО
				               |	Игроки.ПометкаУдаления,
				               |	ПеремещенияИгроков.Период УБЫВ";
			Иначе
				Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
				               |	Игроки.Ссылка КАК Игрок,
				               |	ЕСТЬNULL(ПеремещенияИгроков.Команда, ЗНАЧЕНИЕ(Справочник.Команды.ПустаяСсылка)) КАК Команда
				               |ИЗ
				               |	Справочник.Игроки КАК Игроки
				               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПеремещенияИгроков.СрезПоследних КАК ПеремещенияИгроков
				               |		ПО Игроки.Ссылка = ПеремещенияИгроков.Игрок
				               |ГДЕ
				               |	Игроки.Наименование ПОДОБНО &Слово1
				               |	И Игроки.Наименование ПОДОБНО &Слово2
				               |
				               |УПОРЯДОЧИТЬ ПО
				               |	Игроки.ПометкаУдаления";
			КонецЕсли;
			Запрос.УстановитьПараметр("Слово1",		"%" + Слова.Получить(0) + "%");
			Запрос.УстановитьПараметр("Слово2",		"%" + Слова.Получить(1) + "%");
			Выборка	= Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				ЗаполнитьЗначенияСвойств(Ответ, Выборка);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат Ответ;
КонецФункции

Функция СтранаКоманды(Команда) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Города.Владелец КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Команды КАК Команды
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
	                      |		ПО Команды.Город = Города.Ссылка
	                      |ГДЕ
	                      |	Команды.Ссылка В(&Команда)");
	Запрос.УстановитьПараметр("Команда",		Команда);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Страны.ПустаяСсылка();
КонецФункции

Функция СтранаНайти(Параметр) Экспорт
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Страны.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Страны КАК Страны
	|ГДЕ
	|	(Страны.Наименование = &Наименование
	|			ИЛИ Страны.Код = &Наименование)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страны.ПометкаУдаления");
	Запрос.УстановитьПараметр("Параметр",		Параметр);
	Запрос.УстановитьПараметр("Наименование",	СокрЛП(Параметр));
	Если ТипЗнч(Параметр) = Тип("СправочникСсылка.Туры") Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	Лига.Страна КАК Ссылка,
		               |	1 КАК Порядок
		               |ИЗ
		               |	Справочник.Туры КАК Туры
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Чемпионаты КАК Чемпионаты
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Лига КАК Лига
		               |			ПО Чемпионаты.Владелец = Лига.Ссылка
		               |		ПО Туры.Владелец = Чемпионаты.Ссылка
		               |ГДЕ
		               |	Туры.Ссылка = &Параметр
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	Города.Владелец,
		               |	2
		               |ИЗ
		               |	Справочник.Чемпионаты.Команды КАК ЧемпионатыКоманды
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
		               |		ПО ЧемпионатыКоманды.Ссылка = Туры.Владелец
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Команды КАК Команды
		               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Города КАК Города
		               |			ПО Команды.Город = Города.Ссылка
		               |		ПО ЧемпионатыКоманды.Команда = Команды.Ссылка
		               |ГДЕ
		               |	Туры.Ссылка = &Параметр
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Порядок";
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Страны.ПустаяСсылка();
КонецФункции

Функция ПолучитьЭлементыПоИмени(Гиперссылка, Имя="td") Экспорт
	Текст	= ОбщегоНазначения.СкачатьПоСсылке(Гиперссылка);
	Если ПустаяСтрока(Текст) Тогда Возврат Новый Массив; КонецЕсли;
	
	Ответ = Новый Массив;
	ЧтениеHTML = Новый ЧтениеHTML;
	ЧтениеHTML.УстановитьСтроку(Текст);
	ПостроительDOM = Новый ПостроительDOM;
	ДокументHTML = ПостроительDOM.Прочитать(ЧтениеHTML);
	Элементы = ДокументHTML.ПолучитьЭлементыПоИмени(Имя);
	Для Каждого Элемент Из Элементы Цикл
		Если НЕ ПустаяСтрока(Элемент.ТекстовоеСодержимое) Тогда
			Ответ.Добавить(СокрЛП(Элемент.ТекстовоеСодержимое));
		КонецЕсли;
	КонецЦикла;
	Возврат Ответ;
КонецФункции

Функция МатчиПоследние5(Команда, Чемпионат, Дата=Неопределено, Сколько=5) Экспорт
	Запрос	= Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 5
	      	               |	ТурнирнаяТаблица.Период КАК Период,
	      	               |	ТурнирнаяТаблица.КоличествоОчков КАК КоличествоОчков,
	      	               |	ТурнирнаяТаблица.Регистратор КАК Регистратор
	      	               |ПОМЕСТИТЬ ВТ
	      	               |ИЗ
	      	               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	      	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	      	               |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	      	               |ГДЕ
	      	               |	ТурнирнаяТаблица.Период МЕЖДУ &ДатаН И &ДатаК
	      	               |	И ТурнирнаяТаблица.Команда = &Команда
	      	               |	И ТурнирнаяТаблица.Регистратор ССЫЛКА Документ.Матч
	      	               |	И Туры.Владелец = &Чемпионат
	      	               |
	      	               |УПОРЯДОЧИТЬ ПО
	      	               |	Период УБЫВ
	      	               |;
	      	               |
	      	               |////////////////////////////////////////////////////////////////////////////////
	      	               |ВЫБРАТЬ
	      	               |	ВТ.Период КАК Период,
	      	               |	ВЫБОР
	      	               |		КОГДА ВТ.КоличествоОчков = 0
	      	               |			ТОГДА ""LL""
	      	               |		КОГДА ВТ.КоличествоОчков = 1
	      	               |			ТОГДА ""DD""
	      	               |		ИНАЧЕ ""WW""
	      	               |	КОНЕЦ КАК Результат,
	      	               |	&Команда КАК Команда,
	      	               |	ВТ.Регистратор КАК Регистратор
	      	               |ИЗ
	      	               |	ВТ КАК ВТ
	      	               |
	      	               |УПОРЯДОЧИТЬ ПО
	      	               |	Период");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "5", Формат(Макс(1, Сколько), "ЧН=5; ЧГ=0"));
	Запрос.УстановитьПараметр("ДатаН",			Чемпионат.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаК",			КонецДня(?(Дата=Неопределено, Чемпионат.ДатаОкончания, Дата - Сутки())));
	Запрос.УстановитьПараметр("Чемпионат",		Чемпионат);
	Запрос.УстановитьПараметр("Команда",		Команда);
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ИмпортЧемпионата(Гиперссылка, Чемпионат) Экспорт
	Итого	= 0;
	Игры	= Чемпионат.Команды.Количество() / 2;
	Предел	= 4 * Игры - 2;
	Для Итератор = 1 По Предел Цикл
		Тур		= ТурНайти(Итератор, Чемпионат);
		Если НЕ ЗначениеЗаполнено(Тур) Тогда
			оТур	= Справочники.Туры.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(оТур, Новый Структура("Владелец,ДатаНачала,ДатаОкончания", Чемпионат, Чемпионат.ДатаНачала, Чемпионат.ДатаОкончания));
			оТур.Код			= Итератор;
			оТур.Наименование	= оТур.НаименованиеПолучить();
			оТур.Записать();
			
			Тур	= оТур.Ссылка;
		КонецЕсли;
	КонецЦикла;
	Если СтрНайти(НРег(Гиперссылка), "games") = 0 Тогда
		Для Итератор = 1 По Предел Цикл
			Тур		= ТурНайти(Итератор, Чемпионат);
			Если ЗначениеЗаполнено(Тур) Тогда
				МатчиТура	= МатчиТура(Тур);
				Если МатчиТура.Количество() = Игры Тогда
					Продолжить;
				ИначеЕсли ИмпортИгрПоГиперссылке(СтрШаблон(Гиперссылка + "%1/", ФорматЧГ(Итератор)), Тур) Тогда
					Итого	= Итого + 1;
					Справочники.Туры.ДатыУстановить(Тур);
				ИначеЕсли МатчиТура.Количество() = 0 Тогда
					Прервать;
				КонецЕсли;
			Иначе
				Прервать;
			КонецЕсли;
		КонецЦикла;
	Иначе
		//https://football.kulichki.net/france/2024/games.htm
		Тур		= ТурНайти(1, Чемпионат);
		Итого	= ?(ИмпортИгрПоГиперссылке(Гиперссылка, Тур), 1, 0);
	КонецЕсли;
	Возврат (Итого > 0);
КонецФункции

Функция МатчПодобрать(Команда, Тур) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	МатчКоманды.Ссылка КАК Ссылка,
	                      |	ВЫБОР
	                      |		КОГДА Матч.Проведен = ИСТИНА
	                      |			ТОГДА 1
	                      |		КОГДА Матч.ПометкаУдаления = ЛОЖЬ
	                      |			ТОГДА 10
	                      |		ИНАЧЕ 100
	                      |	КОНЕЦ КАК Порядок
	                      |ИЗ
	                      |	Документ.Матч.Команды КАК МатчКоманды
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч КАК Матч
	                      |		ПО МатчКоманды.Ссылка = Матч.Ссылка
	                      |ГДЕ
	                      |	МатчКоманды.Команда = &Команда
	                      |	И Матч.Тур = &Тур
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Матч.Ссылка,
	                      |	ВЫБОР
	                      |		КОГДА Матч.Тур = &Тур
	                      |			ТОГДА 200
	                      |		ИНАЧЕ 400
	                      |	КОНЕЦ
	                      |ИЗ
	                      |	Документ.Матч КАК Матч
	                      |ГДЕ
	                      |	Матч.ПометкаУдаления = ИСТИНА
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Порядок");
	Запрос.УстановитьПараметр("Команда",	Команда);
	Запрос.УстановитьПараметр("Тур",		Тур);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Документы.Матч.ПустаяСсылка();
КонецФункции

Функция МатчНайти(Команды, Дата) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	Матч.Ссылка КАК Ссылка,
	                      |	ВЫБОР
	                      |		КОГДА Матч.Дата < &Дата
	                      |			ТОГДА РАЗНОСТЬДАТ(Матч.Дата, &Дата, ДЕНЬ)
	                      |		ИНАЧЕ РАЗНОСТЬДАТ(&Дата, Матч.Дата, ДЕНЬ)
	                      |	КОНЕЦ КАК Порядок,
	                      |	Матч.Проведен КАК Проведен
	                      |ИЗ
	                      |	Документ.Матч КАК Матч
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч.Команды КАК МатчКоманды
	                      |		ПО Матч.Ссылка = МатчКоманды.Ссылка
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч.Команды КАК Гости
	                      |		ПО Матч.Ссылка = Гости.Ссылка
	                      |ГДЕ
	                      |	Матч.Дата МЕЖДУ &Дата1 И &Дата2
	                      |	И МатчКоманды.НомерСтроки = 1
	                      |	И МатчКоманды.Команда В(&Команды)
	                      |	И Гости.НомерСтроки = 2
	                      |	И Гости.Команда В(&Команды)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Порядок,
	                      |	Проведен УБЫВ");
	Запрос.УстановитьПараметр("Команды",	Команды);
	Запрос.УстановитьПараметр("Дата",		НачалоДня(Дата));
	Запрос.УстановитьПараметр("Дата1",		НачалоДня(Дата - Сутки()));
	Запрос.УстановитьПараметр("Дата2",		КонецДня(Дата + Сутки(3)));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Документы.Матч.ПустаяСсылка();
КонецФункции

Процедура ДобавитьВремя(Дата, Время, Сдвиг)
	Попытка
		Дата	= Дата(Формат(Дата, "ДФ=yyyyMMdd") + СтрУдалить(СокрЛП(Время)) + "00") + Сдвиг;
	Исключение
	КонецПопытки;
КонецПроцедуры

Функция ИмпортИгрПоГиперссылке(Гиперссылка, Тур) Экспорт
	Итого	= 0;
	Сдвиг	= Часов(-3);

	Чемпионат	= Тур.Владелец;
	сИгра	= Новый Структура("Тур,Дата,Счет,Гол1,Гол2,КоличествоЗрителей,Проведен,Команда1,Команда2,Стадион", Тур);
	Зачистить(сИгра);
	Слова	= ПолучитьЭлементыПоИмени(Гиперссылка);
	Для Каждого Слово Из Слова Цикл
		Если Итого > 0 И СтрНайти(НРег(Слово), "таблица") > 0 Тогда		// финито
			Прервать;
		ИначеЕсли СтрЧислоСтрок(Слово) > 2 Тогда
			Продолжить;
		ИначеЕсли СтрДлина(Слово) < 3 Тогда
			Продолжить;
			
		ИначеЕсли Год(сИгра.Дата) < 2 Тогда
			Если СтрокаНачинаетсяЧислом(Слово) Тогда
				сИгра.Дата	= КакДата(Слово, сИгра.Тур);
				Если Год(сИгра.Дата) < 2 Тогда
					сИгра.Тур = ТурПолучить(Слово, Чемпионат, Тур);
				ИначеЕсли сИгра.Дата > КонецДня(ТекущаяДатаСеанса()) Тогда
					сИгра.Проведен = Ложь;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли НЕ ЗначениеЗаполнено(сИгра.Команда2) И НЕ ЗначениеЗаполнено(сИгра.Команда1) Тогда
			мСлова = КомандыОпределить(Слово);
			Если мСлова.Количество() = 2 Тогда
				//
			ИначеЕсли СтрЧислоВхождений(Слово, "-") = 1 Тогда
				мСлова = Разделить(Слово);
			ИначеЕсли СтрЧислоВхождений(Слово, ":") = 1 Тогда
				мСлова = Разделить(Слово, ":");
			КонецЕсли;
			Если мСлова.Количество() = 2 Тогда
				сИгра.Команда1	= КомандаНайти(мСлова.Получить(0), Чемпионат);
				сИгра.Команда2	= КомандаНайти(мСлова.Получить(1), Чемпионат);
			КонецЕсли;
			Продолжить;
			
		ИначеЕсли НЕ ЗначениеЗаполнено(сИгра.Команда2) Или НЕ ЗначениеЗаполнено(сИгра.Команда1) Тогда
			Зачистить(сИгра);
			
		ИначеЕсли СтрНайти(Слово, "(") = 0 И СтрНайти("210", Лев(Слово, 1)) > 0 И СтрНайти(":00:30:15:45", Прав(Слово, 3)) > 0 Тогда
			сИгра.Проведен = Ложь;
			ДобавитьВремя(сИгра.Дата, Слово, Сдвиг);
		ИначеЕсли СтрСравнить(Слово, "ОТМ") = 0 Тогда
			Зачистить(сИгра);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(сИгра.Дата)
		И ЗначениеЗаполнено(сИгра.Команда1) И ЗначениеЗаполнено(сИгра.Команда2)
		И ?(сИгра.Проведен, ГолыОпределить(сИгра, Слово), Истина)
		Тогда
			Итого = Итого + 0.01;
			//Матч = МатчПодобрать(сИгра.Команда1, сИгра.Тур);
			Команды	= Новый Массив;
			Команды.Добавить(сИгра.Команда1);
			Команды.Добавить(сИгра.Команда2);
			Матч = МатчНайти(Команды, сИгра.Дата);
			Если Матч.Проведен Тогда
				Зачистить(сИгра);
				Продолжить;
			ИначеЕсли ЗначениеЗаполнено(Матч) Тогда
				Док = Матч.ПолучитьОбъект();
				Если Док.ПометкаУдаления Тогда
					Док.УстановитьПометкуУдаления(Ложь);
					ЗаполнитьЗначенияСвойств(Док, сИгра);
				КонецЕсли;
				Если НачалоДня(Док.Дата) <> НачалоДня(сИгра.Дата) Тогда
					ОбщегоНазначения.УстановитьЗначение(Док.Дата, сИгра.Дата);
				КонецЕсли;
				ОбщегоНазначения.УстановитьЗначение(Док.Тур, сИгра.Тур);
				Если Док.Команды.Получить(0).Команда = сИгра.Команда1
				И Док.Команды.Получить(0).КоличествоГолов = сИгра.Гол1
				И Док.Команды.Получить(1).Команда = сИгра.Команда2
				И Док.Команды.Получить(1).КоличествоГолов = сИгра.Гол2
				Тогда
					//
				Иначе
					Док.Команды.Очистить();
					Док.СоставыКоманд.Очистить();
				КонецЕсли;
			Иначе
				Док = МатчСоздать();
				Док.Заполнить(сИгра);
			КонецЕсли;
			Если Док.Команды.Количество() = 0 Тогда
				ЗаполнитьЗначенияСвойств(Док.Команды.Добавить(), Новый Структура("Команда,КоличествоГолов", сИгра.Команда1, сИгра.Гол1));
				ЗаполнитьЗначенияСвойств(Док.Команды.Добавить(), Новый Структура("Команда,КоличествоГолов", сИгра.Команда2, сИгра.Гол2));
				ОбщегоНазначения.УстановитьЗначение(Док.Стадион, СтадионНайти(сИгра.Команда1));
				Если НЕ ЗначениеЗаполнено(Док.Стадион) И Док.КоличествоЗрителей > 0 Тогда
					Док.КоличествоЗрителей = 0;
				КонецЕсли;
			КонецЕсли;
			Если Док.Модифицированность() Или Док.Проведен <> сИгра.Проведен Тогда
				Если ?(сИгра.Проведен, Док.ПроверитьЗаполнение(), Истина) Тогда
					Попытка
						Док.Записать(?(сИгра.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
						Если Док.Проведен Тогда
							Итого = Итого + 1;
						КонецЕсли;
					Исключение
						Сообщить(ОписаниеОшибки());
						Логировать("СерверныйФункции.ИмпортИгр", ОписаниеОшибки(), Гиперссылка);
						Прервать;
					КонецПопытки;
				//ИначеЕсли сИгра.Проведен Тогда
				//	ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, Док.Ссылка);
				КонецЕсли;
			КонецЕсли;
			Зачистить(сИгра);
		КонецЕсли;
	КонецЦикла;
	Если Итого >= 1 И ПустаяСтрока(Тур.Комментарий) Тогда
		Попытка
			Объект = Тур.ПолучитьОбъект();
			Объект.Комментарий = Гиперссылка;
			Объект.Записать();
		Исключение
			Логировать("СерверныйФункции.ИмпортИгр", ОписаниеОшибки(), Гиперссылка);
		КонецПопытки;
	КонецЕсли;
	
	Возврат (Итого >= 1);
КонецФункции

Функция ИмпортИгрПоСтроке(Текст, Тур) Экспорт
	Итого	= 0;
	ТриЧаса	= Часов(-3);
	
	сИгра	= Новый Структура("Тур,Дата,Счет,Гол1,Гол2,КоличествоЗрителей,Проведен,Команда1,Команда2,Стадион", Тур);
	Зачистить(сИгра);
	Слова	= Разделить(Текст, "¶");
	Для Каждого Слово Из Слова Цикл
		Если ПустаяСтрока(Слово) Тогда
			Продолжить;
		ИначеЕсли Год(сИгра.Дата) < 2 Тогда
			мСлова	= Разделить(Слово, "-", Истина);
			Если мСлова.Количество() = 1 Тогда
				сИгра.Дата	= КакДата(Слово, Тур);
			Иначе
				сИгра.Дата	= СтрокаКакДата(мСлова.Получить(0) + "." + ФорматЧГ(Тур.ДатаНачала));
				ДобавитьВремя(сИгра.Дата, мСлова.Получить(1), ТриЧаса);
			КонецЕсли;
		Иначе
			мСлова	= Разделить(Слово, "-");
			Если мСлова.Количество() >= 2 Тогда
				сИгра.Команда1	= КомандаНайти(мСлова.Получить(0), Тур);
				Если НЕ ЗначениеЗаполнено(сИгра.Команда1) И СтрНайти(мСлова.Получить(0), "(") > 0 Тогда
					сИгра.Команда1	= КомандаНайти(Разделить(мСлова.Получить(0), "(").Получить(0), Тур);
				КонецЕсли;
				сИгра.Команда2	= КомандаНайти(мСлова.Получить(1), Тур);
				Если НЕ ЗначениеЗаполнено(сИгра.Команда2) И СтрНайти(мСлова.Получить(1), "(") > 0 Тогда
					сИгра.Команда2	= КомандаНайти(Разделить(мСлова.Получить(1), "(").Получить(0), Тур);
				КонецЕсли;
				Если мСлова.Количество() > 2 Тогда
					ГолыОпределить(сИгра, мСлова.Получить(2));
				Иначе
					сИгра.Проведен	= Ложь;
				КонецЕсли;
			ИначеЕсли СтрНайти(Слово, ":") > 0 Тогда
				Если ГолыОпределить(сИгра, СокрЛП(Слово)) Тогда
					сИгра.Проведен	= Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(сИгра.Дата)
		И сИгра.Гол1 >= 0
		И ЗначениеЗаполнено(сИгра.Команда1) И ЗначениеЗаполнено(сИгра.Команда2)
		Тогда
			Итого = Итого + 0.01;
			Команды	= Новый Массив;
			Команды.Добавить(сИгра.Команда1);
			Команды.Добавить(сИгра.Команда2);
			Матч = МатчНайти(Команды, сИгра.Дата);
			Если Матч.Проведен Тогда
				Зачистить(сИгра);
				Продолжить;
			ИначеЕсли ЗначениеЗаполнено(Матч) Тогда
				Док = Матч.ПолучитьОбъект();
				Если Док.ПометкаУдаления Тогда
					Док.УстановитьПометкуУдаления(Ложь);
					ЗаполнитьЗначенияСвойств(Док, сИгра);
				КонецЕсли;
				Если НачалоДня(Док.Дата) <> НачалоДня(сИгра.Дата) Тогда
					ОбщегоНазначения.УстановитьЗначение(Док.Дата, сИгра.Дата);
				КонецЕсли;
				ОбщегоНазначения.УстановитьЗначение(Док.Тур, сИгра.Тур);
				Если Док.Команды.Получить(0).Команда = сИгра.Команда1
				И Док.Команды.Получить(1).Команда = сИгра.Команда2
				Тогда
					Если Док.Команды.Получить(0).КоличествоГолов <> сИгра.Гол1 Тогда
						Док.Команды.Получить(0).КоличествоГолов	= сИгра.Гол1;
					КонецЕсли;
					Если Док.Команды.Получить(1).КоличествоГолов <> сИгра.Гол2 Тогда
						Док.Команды.Получить(1).КоличествоГолов	= сИгра.Гол2;
					КонецЕсли;
				Иначе
					Док.Команды.Очистить();
					Док.СоставыКоманд.Очистить();
				КонецЕсли;
			Иначе
				Док = МатчСоздать();
				Док.Заполнить(сИгра);
			КонецЕсли;
			Если Док.Команды.Количество() = 0 Тогда
				ЗаполнитьЗначенияСвойств(Док.Команды.Добавить(), Новый Структура("Команда,КоличествоГолов", сИгра.Команда1, сИгра.Гол1));
				ЗаполнитьЗначенияСвойств(Док.Команды.Добавить(), Новый Структура("Команда,КоличествоГолов", сИгра.Команда2, сИгра.Гол2));
			КонецЕсли;
			Стадионы	= СтадионНайти(сИгра.Команда1, Истина);
			Если Стадионы.Количество() = 1 Тогда
				ОбщегоНазначения.УстановитьЗначение(Док.Стадион, Стадионы.Получить(0));
				Если НЕ ЗначениеЗаполнено(Док.Стадион) И Док.КоличествоЗрителей > 0 Тогда
					Док.КоличествоЗрителей = 0;
				КонецЕсли;
			КонецЕсли;
			Если Док.Модифицированность() Тогда
				Если ?(сИгра.Проведен, Док.ПроверитьЗаполнение(), Истина) Тогда
					Попытка
						Док.Записать(?(сИгра.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
						Если Док.Проведен Тогда
							Итого = Итого + 1;
						КонецЕсли;
					Исключение
						Сообщить(ОписаниеОшибки());
						Логировать("СерверныйФункции.ИмпортИгр", ОписаниеОшибки(), Текст);
						Прервать;
					КонецПопытки;
				//Иначе
				//	ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, Док.Ссылка);
				КонецЕсли;
			КонецЕсли;
			Зачистить(сИгра);
		КонецЕсли;
	КонецЦикла;
	Возврат (Итого >= 1);
КонецФункции

Функция МатчСоздать() Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	Матч.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Документ.Матч КАК Матч
	                      |ГДЕ
	                      |	Матч.ПометкаУдаления = ИСТИНА
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Матч.Дата");
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Попытка
			Док	= Выборка.Ссылка.ПолучитьОбъект();
			Док.УстановитьПометкуУдаления(Ложь);
			ЗаполнитьЗначенияСвойств(Док, Новый Структура("Дата,Стадион,Счет,Тур,КоличествоЗрителей,Комментарий,Изображение"));
			Док.Команды.Очистить();
			Док.СоставыКоманд.Очистить();
		Исключение
			Док	= Документы.Матч.СоздатьДокумент();
		КонецПопытки;
	Иначе
		Док	= Документы.Матч.СоздатьДокумент();
	КонецЕсли;
	Возврат Док;
КонецФункции

Функция КомандыОпределить(Слова)
	мСлова	= Новый Массив;
	Если СтрЧислоСтрок(Слова) = 2 Тогда
		Для НомерСтроки = 1 По СтрЧислоСтрок(Слова) Цикл
			Слово	= СтрПолучитьСтроку(Слова, НомерСтроки);
			Если НомерСтроки = 2 Тогда
				//
			ИначеЕсли СтрЧислоВхождений(Слово, "-") = 1 Тогда
				Слово	= Разделить(Слово, "-").Получить(0);
			ИначеЕсли СтрЧислоВхождений(Слово, ":") = 1 Тогда
				Слово	= Разделить(Слово, ":").Получить(0);
			КонецЕсли;
			Если НЕ ПустаяСтрока(Слово) Тогда
				мСлова.Добавить(СокрЛП(Слово));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат мСлова;
КонецФункции

Функция КакДата(Слово, Тур)
	Ответ = Дата(1,1,1);
	Если СтрНайти(Слово, " ") = 0 Тогда
		Ответ = СтрокаКакДата(Слово);
	Иначе
		Мезе	= 0;
		Жьорно	= 0;
		Для Каждого Строка Из Разделить(Слово) Цикл
			Если Жьорно = 0 Тогда
				Жьорно	= СтрокаКакЧисло(Строка);
			ИначеЕсли СтрокаКакМесяц(Строка) > 0 Тогда
				Мезе	= СтрокаКакМесяц(Строка);
			КонецЕсли;
		КонецЦикла;
		Если Мезе > 0 И Жьорно > 0 Тогда
			Попытка
				Ответ = Дата(Год(Тур.ДатаНачала), Мезе, Жьорно);
				Если Ответ < Тур.ДатаНачала Тогда
					Ответ = Дата(Год(Тур.ДатаНачала) + 1, Мезе, Жьорно);
				КонецЕсли;
			Исключение КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	Возврат Ответ;
КонецФункции

Процедура Зачистить(Виктим, ЭтоСобытие=Ложь)
	ЗаполнитьЗначенияСвойств(Виктим, Новый Структура("ЭтоСобытие,Дата,Счет,Гол1,Гол2,КоличествоЗрителей,Проведен,Команды,Стадион,Комментарий,Команда1,Команда2", ЭтоСобытие, Дата(1,1,1), "", -1, -1, 0, Истина, Новый Массив));
КонецПроцедуры

Функция ГолыОпределить(сИгра, Слово)
	Если СтрЧислоВхождений(Слово, ":") = 2 И СтрЗаканчиваетсяНа(Слово, ")") Тогда
		мСлова = Разделить(Слово);
		сИгра.Счет	= ?(мСлова.Количество() = 0, "", мСлова.Получить(0));
		Если НЕ ПустаяСтрока(сИгра.Счет) Тогда
			мСлова = Разделить(сИгра.Счет, ":");
			Если мСлова.Количество() = 2 Тогда
				сИгра.Гол1	= СтрокаКакЧисло(мСлова.Получить(0));
				сИгра.Гол2	= СтрокаКакЧисло(мСлова.Получить(1));
			Иначе
				Зачистить(сИгра);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли СтрЧислоВхождений(Слово, ":") = 1 Тогда
		мСлова = Разделить(Слово, ":");
		сИгра.Гол1	= СтрокаКакЧисло(мСлова.Получить(0));
		сИгра.Гол2	= СтрокаКакЧисло(мСлова.Получить(1));
		сИгра.Счет	= СокрЛП(Слово);
	КонецЕсли;
	Возврат (НЕ ПустаяСтрока(сИгра.Счет));
КонецФункции

Функция ТурНайти(КодИлиНаименование, Чемпионат) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Туры.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Туры КАК Туры
	               |ГДЕ
	               |	Туры.Владелец = &Чемпионат
	               |	И Туры.ПометкаУдаления = ЛОЖЬ
	               |	И (Туры.Наименование ПОДОБНО &Наименование
	               |			ИЛИ Туры.Код = &Код)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Туры.Код = &Код УБЫВ");
	Запрос.УстановитьПараметр("Чемпионат",		Чемпионат);
	Запрос.УстановитьПараметр("Наименование",	?(ТипЗнч(КодИлиНаименование)=Тип("Строка"), КодИлиНаименование, ФорматЧГ(КодИлиНаименование)) + "-%");
	Запрос.УстановитьПараметр("Код",			?(ТипЗнч(КодИлиНаименование)=Тип("Строка"), СтрокаКакЧисло(КодИлиНаименование), КодИлиНаименование));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат Справочники.Туры.ПустаяСсылка();
КонецФункции

Функция ТурПолучить(Слово, Чемпионат, Тур)
	Слова = Разделить(Слово, "-");
	Если Слова.Количество() = 2
	И СтрНайти(НРег(Слова.Получить(1)), "тур") > 0
	И СтрокаКакЧисло(Слова.Получить(0)) > 0 Тогда
		Ответ = ТурНайти(Слова.Получить(0), Чемпионат);
		Если ЗначениеЗаполнено(Ответ) Тогда
			Возврат Ответ;
		КонецЕсли;
	КонецЕсли;
	Возврат Тур;
КонецФункции

Функция ТурыЧемпионата(Чемпионат) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Туры.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Туры КАК Туры
	                      |ГДЕ
	                      |	Туры.Владелец = &Чемпионат
	                      |	И Туры.ПометкаУдаления = ЛОЖЬ");
	Запрос.УстановитьПараметр("Чемпионат",		Чемпионат);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
КонецФункции

Функция КомментарийКакУРЛ(Комментарий) Экспорт
	Если ПустаяСтрока(Комментарий) Тогда Возврат ""; КонецЕсли;
	Ответ = "";
	Для Строка = 1 По СтрЧислоСтрок(Комментарий) Цикл
		Если ЭтоУРЛ(СтрПолучитьСтроку(Комментарий, Строка)) Тогда
			Ответ = СтрПолучитьСтроку(Комментарий, Строка);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат СтрЗаменить(Ответ, "%1", ФорматЧГ(ТекущаяДатаСеанса()));
КонецФункции

Процедура ОбъектПередЗаписью(Источник, Отказ) Экспорт
	Если Отказ Тогда
		//
	ИначеЕсли Источник.Модифицированность() Тогда
		Исправитель	= Новый Структура("Наименование,Комментарий", "", "");
		ЗаполнитьЗначенияСвойств(Исправитель, Источник);
		Исправитель.Наименование	= СокрЛП(Исправитель.Наименование);
		Исправитель.Комментарий		= СокрЛП(Лев(Исправитель.Комментарий, 10000));
		ЗаполнитьЗначенияСвойств(Источник, Исправитель);
	КонецЕсли;
КонецПроцедуры

Процедура ОбъектПриКопировании(Источник, ОбъектКопирования) Экспорт
	ЗаполнитьЗначенияСвойств(Источник, Новый Структура("Комментарий,Изображение", ""));
КонецПроцедуры

Процедура СправочникПередУдалением(Источник, Отказ) Экспорт
	Если ЕстьИстория(Источник.Ссылка) Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

Функция ОповещенияНаСегодня(ТолькоМатчи=Ложь) Экспорт
	Если НЕ ВключитьНапоминания() Тогда Возврат Новый Массив; КонецЕсли;
	Ответ	= Новый Массив;
	Авто	= АвтоудалениеНапоминаний();
	Старье	= ?(Авто, НастройкиВосстановить(), Новый Массив);
	Дата	= ТекущаяУниверсальнаяДата();
	Сдвиг	= ТекущаяДатаСеанса() - Дата;
	Тим		= МояКомандаПолучить();
	Запрос	= Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	      	               |	Матч.Ссылка КАК Ссылка,
	      	               |	Матч.Счет КАК Представление,
	      	               |	Матч.Дата КАК Дата,
	      	               |	РАЗНОСТЬДАТ(&Дата, Матч.Дата, ЧАС) КАК Час,
	      	               |	РАЗНОСТЬДАТ(&Дата, Матч.Дата, МИНУТА) КАК Минута,
	      	               |	ЛОЖЬ КАК ЭтоИгрок
	      	               |ИЗ
	      	               |	Документ.Матч КАК Матч
	      	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч.Команды КАК МатчКоманды
	      	               |		ПО Матч.Ссылка = МатчКоманды.Ссылка
	      	               |ГДЕ
	      	               |	Матч.Дата МЕЖДУ &ДатаН И &ДатаК
	      	               |	И Матч.Проведен = ЛОЖЬ
	      	               |	И Матч.ПометкаУдаления = ЛОЖЬ
	      	               |	И ВЫБОР
	      	               |			КОГДА РАЗНОСТЬДАТ(&Дата, Матч.Дата, ЧАС) >= 13
	      	               |					ИЛИ Матч.Дата = &ДатаН
	      	               |				ТОГДА НЕ Матч.Ссылка В (&Старье)
	      	               |			ИНАЧЕ РАЗНОСТЬДАТ(&Дата, Матч.Дата, ЧАС) >= 0
	      	               |		КОНЕЦ
	      	               |	И МатчКоманды.Команда = &Команда
	      	               |
	      	               |ОБЪЕДИНИТЬ ВСЕ
	      	               |
	      	               |ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
	      	               |	Игроки.Ссылка,
	      	               |	Игроки.Наименование,
	      	               |	Игроки.ДатаРождения,
	      	               |	РАЗНОСТЬДАТ(Игроки.ДатаРождения, &Дата, ГОД),
	      	               |	0,
	      	               |	ИСТИНА
	      	               |ИЗ
	      	               |	Справочник.Игроки КАК Игроки
	      	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПеремещенияИгроков КАК ПеремещенияИгроков
	      	               |		ПО Игроки.Ссылка = ПеремещенияИгроков.Игрок
	      	               |ГДЕ
	      	               |	ДЕНЬ(Игроки.ДатаРождения) = &ДД
	      	               |	И МЕСЯЦ(Игроки.ДатаРождения) = &ММ
	      	               |	И НЕ Игроки.Ссылка В (&Старье)
	      	               |	И ПеремещенияИгроков.Команда = &Команда
	      	               |
	      	               |УПОРЯДОЧИТЬ ПО
	      	               |	ЭтоИгрок,
	      	               |	Час");
	Если ТолькоМатчи Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Матч.Ссылка КАК Ссылка,
		               |	Матч.Счет КАК Представление,
		               |	Матч.Дата КАК Дата,
		               |	РАЗНОСТЬДАТ(&Дата, Матч.Дата, ЧАС) КАК Час,
		               |	РАЗНОСТЬДАТ(&Дата, Матч.Дата, МИНУТА) КАК Минута,
		               |	ЛОЖЬ КАК ЭтоИгрок
		               |ИЗ
		               |	Документ.Матч КАК Матч
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Матч.Команды КАК МатчКоманды
		               |		ПО Матч.Ссылка = МатчКоманды.Ссылка
		               |ГДЕ
		               |	Матч.Дата МЕЖДУ &ДатаН И &ДатаК
		               |	И Матч.Проведен = ЛОЖЬ
		               |	И Матч.ПометкаУдаления = ЛОЖЬ
		               |	И ВЫБОР
		               |			КОГДА РАЗНОСТЬДАТ(&Дата, Матч.Дата, ЧАС) >= 13
		               |					ИЛИ Матч.Дата = &ДатаН
		               |				ТОГДА НЕ Матч.Ссылка В (&Старье)
		               |			ИНАЧЕ РАЗНОСТЬДАТ(&Дата, Матч.Дата, ЧАС) >= 0
		               |		КОНЕЦ
		               |	И МатчКоманды.Команда = &Команда
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Дата";
	КонецЕсли;
	Запрос.УстановитьПараметр("Команда",			Тим);
	Запрос.УстановитьПараметр("ДД",					День(Дата));
	Запрос.УстановитьПараметр("ММ",					Месяц(Дата));
	Запрос.УстановитьПараметр("ДатаН",				НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаК",				КонецДня(Дата + Сутки()));
	Запрос.УстановитьПараметр("Дата",				Дата);
	Запрос.УстановитьПараметр("Старье",				Старье);
	Результат	= Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Туча	= Новый Структура("Повторить,Ссылка,Ключ,КлючУникальности,Дата,Картинка", Ложь, Выборка.Представление, ПолучитьНавигационнуюСсылку(Выборка.Ссылка), Строка(Выборка.Ссылка.УникальныйИдентификатор()));
			Если Выборка.ЭтоИгрок Тогда
				Туча.Дата		= СтрШаблон("%1 (%2)", Формат(Выборка.Дата, "ДЛФ=D"), Выборка.Час);
				Туча.Картинка	= ИзображениеПолучить(Выборка.Ссылка, Истина);
			Иначе
				Если Выборка.Минута <= 0 Тогда
					Туча.Дата		= "Матч начался";
				ИначеЕсли Выборка.Минута < 60 Тогда
					Туча.Дата		= "Через " + СтрокаСЧислом(";%1 минуту;%1 минуты;%1 минуты;%1 минут;", Выборка.Минута, ВидЧисловогоЗначения.Количественное);
				ИначеЕсли Выборка.Час <= 12 Тогда
					Туча.Дата		= "Через " + СтрокаСЧислом(";%1 час;%1 часа;%1 часа;%1 часов;", Выборка.Час, ВидЧисловогоЗначения.Количественное);
					Туча.Повторить	= Истина;
				Иначе
					Туча.Дата		= Формат(Выборка.Дата + Сдвиг, "ДФ='d MMMM HH:mm'");
				КонецЕсли;
				Туча.Картинка	= ИзображениеПолучить(Тим, Истина);
				Если Туча.Картинка.Вид = ВидКартинки.Пустая Тогда
					Туча.Картинка	= БиблиотекаКартинок.Goal;
				КонецЕсли;
			КонецЕсли;
			Если Авто И Старье.Найти(Выборка.Ссылка) = Неопределено Тогда
				Старье.Добавить(Выборка.Ссылка);
			КонецЕсли;
			
			Ответ.Добавить(Туча);
		КонецЦикла;
		Если Авто Тогда
			НастройкиСохранить(Старье);
		КонецЕсли;
	КонецЕсли;
	Возврат Ответ;
КонецФункции

Функция ОповещенияПользователяИмя()
	Возврат "ОповещенияПользователя";
КонецФункции

Процедура НастройкиСохранить(Значение=Неопределено)
	Если Значение = Неопределено Тогда
		ХранилищеОбщихНастроек.Удалить(ОповещенияПользователяИмя(),, ИмяПользователя());
	Иначе
		ХранилищеОбщихНастроек.Сохранить(ОповещенияПользователяИмя(),, Значение,, ИмяПользователя());
	КонецЕсли;
КонецПроцедуры

Функция НастройкиВосстановить()
	Ответ	= Новый Массив;
	Попытка
		Настройки = ХранилищеОбщихНастроек.Выбрать(Новый Структура("КлючОбъекта,Пользователь", ОповещенияПользователяИмя(), ИмяПользователя()));
		Если Настройки.Следующий()
		И НачалоДня(Настройки.ДатаИзменения) = НачалоДня(ТекущаяУниверсальнаяДата())
		Тогда
			Ответ	= Настройки.Настройки;
		КонецЕсли;
	Исключение КонецПопытки;
	Возврат Ответ;
КонецФункции

Функция ТурИлиЧемпионат(Чемпионат)
	Тур		= ?(ВыводитьТурВместоЧемпионата(), ТурНеПоследний(Чемпионат), Чемпионат);
	Возврат ?(ЗначениеЗаполнено(Тур), Тур, Чемпионат);
КонецФункции

Функция ЗаголовокПолучить(Параметры) Экспорт
	Если НЕ Параметры.Свойство("ВыводитьЧемпионат") Тогда
		Параметры.Вставить("Чемпионат", ТурИлиЧемпионат(Параметры.Чемпионат));
	КонецЕсли;
	Макет  = ПолучитьОбщийМакет("ТурнирнаяТаблица");
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.Заполнить(Параметры);
	Изображение	= ИзображениеПолучить(Параметры.Лига, Истина);
	Если Изображение.Вид <> ВидКартинки.Пустая Тогда
		ОбластьМакета.Рисунки.Получить(0).Картинка = Изображение;
	КонецЕсли;
	Возврат ОбластьМакета;
КонецФункции

Процедура ПередЗаписьюНаСервереИзображение(ТекущийОбъект, Адрес, Отказ) Экспорт
	Если Отказ Тогда
		//
	ИначеЕсли ЭтоАдресВременногоХранилища(Адрес) Тогда
		Изображение = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(Адрес));
		Если ТекущийОбъект.Изображение.Получить() <> Изображение.Получить() Тогда
			ТекущийОбъект.Изображение = Изображение;
		КонецЕсли;
	ИначеЕсли ПустаяСтрока(Адрес) И ЗначениеЗаполнено(ТекущийОбъект.Изображение.Получить()) Тогда
		ТекущийОбъект.Изображение = NULL;
	КонецЕсли;
КонецПроцедуры

Процедура Логировать(ИмяСобытия, Ошибка, Данные=Неопределено, Уровень=Неопределено) Экспорт
	ЗаписьЖурналаРегистрации(ИмяСобытия, ?(Уровень=Неопределено, УровеньЖурналаРегистрации.Ошибка, Уровень),, Данные, Ошибка);
КонецПроцедуры

Функция Внятно(Слово, Целиком=Ложь)
	Если Целиком Тогда
		Возврат СтрУдалить(Слово, "\");
	КонецЕсли;
	
	Ответ	= "";
	Для Индекс = 1 По СтрДлина(Слово) Цикл
		Если СтрСравнить("\", Сред(Слово, Индекс, 1)) = 0 Тогда
			Прервать;
		Иначе
			Ответ = Ответ + Сред(Слово, Индекс, 1);
		КонецЕсли;
	КонецЦикла;
	Возврат Ответ;
КонецФункции

Функция ПервоеДороже(Слова, Первое=Ложь)
	Ответ	= "";
	мСлова = Разделить(Слова, ":", Истина);
	Если Первое Тогда
		Если мСлова.Количество() > 0
		И НЕ ПустаяСтрока(мСлова.Получить(0))
		Тогда
			Ответ = мСлова.Получить(0);
		КонецЕсли;
	Иначе
		Если ПустаяСтрока(Лев(Слова, 1)) Тогда
			Ответ	= Слова;
		Иначе
			Если мСлова.Количество() >= 2 Тогда
				Ответ	= мСлова.Получить(1);
				Для Индекс = 2 По мСлова.ВГраница() Цикл
					Ответ	= Ответ + ":" + мСлова.Получить(Индекс);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат Ответ;
КонецФункции

Функция Причесать(Текст)
	Если ПустаяСтрока(Текст) Тогда Возврат ""; КонецЕсли;
	Ответ	= "";
	Слова	= СтрЗаменить(СтрЗаменить(Текст, "\n\n", Символы.ПС), "\n", " ");
	Для НомерСтроки = 1 По СтрЧислоСтрок(Слова) Цикл
		Слово	= СтрПолучитьСтроку(Слова, НомерСтроки);
		Если СтрНайти(Слово, "http") = 0 Тогда
			Ответ	= ?(ПустаяСтрока(Ответ), Слово, Ответ + Символы.ПС + Слово);
		КонецЕсли;
	КонецЦикла;
	Возврат Ответ;
КонецФункции

Функция СтадионПодобрать(Слово, Стадионы)
	Стадион	= Стадионы.Получить(Слово);
	Если Стадион = Неопределено Тогда
		Стадион	= СтадионНайти(Слово);
		Если ЗначениеЗаполнено(Стадион) Тогда
			Стадионы.Вставить(Слово, Стадион);
		КонецЕсли;
	КонецЕсли;
	Возврат Стадион;
КонецФункции

Функция СтрокаКакКоманды(Знач Слова, Тимз)
	Ответ	= Новый Массив;
	Слова	= СокрЛП(СтрУдалить(СтрУдалить(Слова, "(A)"), "(H)"));
	Солянка	= "";
	мСлова	= Новый Массив;
	Для Каждого Слово Из Разделить(Слова) Цикл
		Если СтрСравнить(Слово, "vs") = 0 Тогда
			мСлова.Добавить(Солянка);
			Солянка	= "";
		ИначеЕсли ПустаяСтрока(Солянка) Тогда
			Солянка	= Слово;
		Иначе
			Солянка	= Солянка + " " + Слово;
		КонецЕсли;
	КонецЦикла;
	мСлова.Добавить(Солянка);
	
	Для Каждого Слово Из мСлова Цикл
		Команда	= Тимз.Получить(Слово);
		Если Команда = Неопределено Тогда
			Команда	= КомандаНайти(Слово);
			Если ЗначениеЗаполнено(Команда) Тогда
				Тимз.Вставить(Слово, Команда);
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеЗаполнено(Команда) Тогда
			Ответ.Добавить(Команда);
		КонецЕсли;
	КонецЦикла;
	Возврат Ответ;
КонецФункции

Функция ИмпортИгрПоКалендарю(Текст) Экспорт
	Ответ	= 0;
	Тимз	= Новый Соответствие;
	Стадионы= Новый Соответствие;
	Элемент = Новый Структура("ЭтоСобытие,Дата,Команды,Стадион,Комментарий");
	Зачистить(Элемент);
	Для НомерСтроки = 1 По СтрЧислоСтрок(Текст) Цикл
		Слово	= СтрПолучитьСтроку(Текст, НомерСтроки);
		Первое	= ПервоеДороже(Слово, Истина);
		Если СтрСравнить(Первое, "BEGIN") = 0 Тогда
			Зачистить(Элемент, СтрСравнить(ПервоеДороже(Слово), "VEVENT") = 0);
			
		ИначеЕсли НЕ Элемент.ЭтоСобытие Тогда
			//
		ИначеЕсли ПустаяСтрока(Первое) Тогда
			Если НЕ ПустаяСтрока(Элемент.Комментарий) Тогда
				Элемент.Комментарий = Элемент.Комментарий + ПервоеДороже(Слово);
			КонецЕсли;
		ИначеЕсли СтрСравнить(Первое, "DESCRIPTION") = 0 Тогда
			Элемент.Комментарий = ПервоеДороже(Слово);
		ИначеЕсли СтрСравнить(Первое, "DTSTART") = 0 Тогда
			Элемент.Дата	= СтрокаКакДата(ПервоеДороже(Слово));
			Если Элемент.Дата <= ТекущаяУниверсальнаяДата() Тогда
				Зачистить(Элемент);
			КонецЕсли;
		ИначеЕсли СтрСравнить(Первое, "SUMMARY") = 0 Тогда
			Элемент.Команды = СтрокаКакКоманды(ПервоеДороже(Слово), Тимз);
		ИначеЕсли СтрСравнить(Первое, "LOCATION") = 0 Тогда
			Слово	= Внятно(ПервоеДороже(Слово), Истина);
			Элемент.Стадион = СтадионПодобрать(Слово, Стадионы);
		ИначеЕсли СтрСравнить(Первое, "END") = 0 Тогда
			Если Элемент.Дата > ТекущаяДатаСеанса()
			И Элемент.Команды.Количество() = 2
			Тогда
				Матч	= МатчНайти(Элемент.Команды, Элемент.Дата);
				Если ЗначениеЗаполнено(Матч) Тогда
					МатчОбъект	= Матч.ПолучитьОбъект();
					Если МатчОбъект.ПометкаУдаления Тогда
						МатчОбъект.УстановитьПометкуУдаления(Ложь);
					КонецЕсли;
					ОбщегоНазначения.УстановитьЗначение(МатчОбъект.Дата, Элемент.Дата);
					Если НЕ ЗначениеЗаполнено(МатчОбъект.Стадион)
					И ЗначениеЗаполнено(Элемент.Стадион)
					Тогда
						МатчОбъект.Стадион	= Элемент.Стадион;
					КонецЕсли;
					//ОбщегоНазначения.УстановитьЗначение(МатчОбъект.Комментарий, Причесать(Элемент.Комментарий));
				Иначе
					МатчОбъект	= МатчСоздать();
					МатчОбъект.Заполнить(Элемент);
				КонецЕсли;
				Если МатчОбъект.Модифицированность() Тогда
					МатчОбъект.Записать(РежимЗаписиДокумента.Запись);
					МатчОбъект.УстановитьПометкуУдаления(Ложь);
					Ответ	= Ответ + 1;
				КонецЕсли;
			КонецЕсли;
			Зачистить(Элемент);
		КонецЕсли;
	КонецЦикла;
	Возврат Ответ;
КонецФункции

Процедура КомандыСвернуть(Команды) Экспорт
	ТЧ	= Команды.Выгрузить();
	ТЧ.Свернуть("Команда");
	Если ТЧ.Количество() > Команды.Количество() Тогда
		Команды.Свернуть("Команда");
	КонецЕсли;
КонецПроцедуры

Функция КоличествоИгр(Чемпионат) Экспорт
	Запрос	= Новый Запрос("ВЫБРАТЬ
	      	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТурнирнаяТаблица.Регистратор) КАК Количество
	      	               |ИЗ
	      	               |	РегистрНакопления.ТурнирнаяТаблица КАК ТурнирнаяТаблица
	      	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Туры КАК Туры
	      	               |		ПО ТурнирнаяТаблица.Тур = Туры.Ссылка
	      	               |ГДЕ
	      	               |	ТИПЗНАЧЕНИЯ(ТурнирнаяТаблица.Регистратор) = ТИП(Документ.Матч)
	      	               |	И Туры.Владелец = &Чемпионат");
	Запрос.УстановитьПараметр("Чемпионат",			Чемпионат);
	Выборка	= Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Количество;
	КонецЕсли;
	Возврат 0;
КонецФункции

Процедура СерииЗаполнить(График) Экспорт
	Серия		= График.УстановитьСерию("Проигрыш");
	Серия.Цвет	= ЦветаСтиля.ЦветОтрицательногоЧисла;
	Серия		= График.УстановитьСерию("Ничья");
	Серия.Цвет	= ЦветаСтиля.ЦветАктивности;
	Серия		= График.УстановитьСерию("Выигрыш");
	Серия.Цвет	= ЦветаСтиля.ЦветАкцента;
КонецПроцедуры

Процедура УстановитьЗначение(График, Точка, Серия, Значение)
	Если Значение > 0 Тогда
		График.УстановитьЗначение(Точка, График.Серии.Получить(Серия), Значение);
	КонецЕсли;
КонецПроцедуры

Процедура ГрафикОбновить(График, Данные) Экспорт
	График.Точки.Очистить();
	Для Каждого Детали Из Данные Цикл
		Точка	= График.УстановитьТочку(Детали.Команда);
		УстановитьЗначение(График, Точка, 0, Детали.Проигрыш);
		УстановитьЗначение(График, Точка, 1, Детали.Ничья);
		УстановитьЗначение(График, Точка, 2, Детали.Выигрыш);
	КонецЦикла;
КонецПроцедуры

Функция Выборка2СписокЗначений(Выборка, Количество=10) Экспорт
	Ответ	= Новый СписокЗначений;
	Пока Ответ.Количество() <= Количество И Выборка.Следующий() Цикл
		Ответ.Добавить(Выборка.Значение, Выборка.Представление);
	КонецЦикла;
	Возврат Ответ;
КонецФункции
